//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Entity Developer tool using LinqConnect template.
// Code is generated on: 1/17/2019 4:08:27 PM
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using Devart.Data.Linq;
using Devart.Data.Linq.Mapping;
using System.Data;
using System.ComponentModel;
using System.Collections.Generic;
using System.Reflection;
using System.Linq;
using System.Linq.Expressions;

namespace BiensiPosDbContext
{

    [DatabaseAttribute(Name = "biensi_pos_db")]
    [ProviderAttribute(typeof(Devart.Data.MySql.Linq.Provider.MySqlDataProvider))]
    public partial class BiensiPosDbDataContext : Devart.Data.Linq.DataContext
    {
        public static CompiledQueryCache compiledQueryCache = CompiledQueryCache.RegisterDataContext(typeof(BiensiPosDbDataContext));
        private static MappingSource mappingSource = new Devart.Data.Linq.Mapping.AttributeMappingSource();

        #region Extensibility Method Definitions
    
        partial void OnCreated();
        partial void OnSubmitError(Devart.Data.Linq.SubmitErrorEventArgs args);
        partial void InsertArticle(Article instance);
        partial void UpdateArticle(Article instance);
        partial void DeleteArticle(Article instance);
        partial void InsertBank(Bank instance);
        partial void UpdateBank(Bank instance);
        partial void DeleteBank(Bank instance);
        partial void InsertBrand(Brand instance);
        partial void UpdateBrand(Brand instance);
        partial void DeleteBrand(Brand instance);
        partial void InsertBudgetStore(BudgetStore instance);
        partial void UpdateBudgetStore(BudgetStore instance);
        partial void DeleteBudgetStore(BudgetStore instance);
        partial void InsertClosingShift(ClosingShift instance);
        partial void UpdateClosingShift(ClosingShift instance);
        partial void DeleteClosingShift(ClosingShift instance);
        partial void InsertClosingStore(ClosingStore instance);
        partial void UpdateClosingStore(ClosingStore instance);
        partial void DeleteClosingStore(ClosingStore instance);
        partial void InsertColor(Color instance);
        partial void UpdateColor(Color instance);
        partial void DeleteColor(Color instance);
        partial void InsertCostcategory(Costcategory instance);
        partial void UpdateCostcategory(Costcategory instance);
        partial void DeleteCostcategory(Costcategory instance);
        partial void InsertCurrency(Currency instance);
        partial void UpdateCurrency(Currency instance);
        partial void DeleteCurrency(Currency instance);
        partial void InsertDeliveryorder(Deliveryorder instance);
        partial void UpdateDeliveryorder(Deliveryorder instance);
        partial void DeleteDeliveryorder(Deliveryorder instance);
        partial void InsertDeliveryorderLine(DeliveryorderLine instance);
        partial void UpdateDeliveryorderLine(DeliveryorderLine instance);
        partial void DeleteDeliveryorderLine(DeliveryorderLine instance);
        partial void InsertDenomination(Denomination instance);
        partial void UpdateDenomination(Denomination instance);
        partial void DeleteDenomination(Denomination instance);
        partial void InsertDepartement(Departement instance);
        partial void UpdateDepartement(Departement instance);
        partial void DeleteDepartement(Departement instance);
        partial void InsertDepartementtype(Departementtype instance);
        partial void UpdateDepartementtype(Departementtype instance);
        partial void DeleteDepartementtype(Departementtype instance);
        partial void InsertDiscountItem(DiscountItem instance);
        partial void UpdateDiscountItem(DiscountItem instance);
        partial void DeleteDiscountItem(DiscountItem instance);
        partial void InsertDiskon(Diskon instance);
        partial void UpdateDiskon(Diskon instance);
        partial void DeleteDiskon(Diskon instance);
        partial void InsertGender(Gender instance);
        partial void UpdateGender(Gender instance);
        partial void DeleteGender(Gender instance);
        partial void InsertInventory(Inventory instance);
        partial void UpdateInventory(Inventory instance);
        partial void DeleteInventory(Inventory instance);
        partial void InsertInventoryLine(InventoryLine instance);
        partial void UpdateInventoryLine(InventoryLine instance);
        partial void DeleteInventoryLine(InventoryLine instance);
        partial void InsertModalStore(ModalStore instance);
        partial void UpdateModalStore(ModalStore instance);
        partial void DeleteModalStore(ModalStore instance);
        partial void InsertMutasiorder(Mutasiorder instance);
        partial void UpdateMutasiorder(Mutasiorder instance);
        partial void DeleteMutasiorder(Mutasiorder instance);
        partial void InsertMutasiorderLine(MutasiorderLine instance);
        partial void UpdateMutasiorderLine(MutasiorderLine instance);
        partial void DeleteMutasiorderLine(MutasiorderLine instance);
        partial void InsertPassServiceTbl(PassServiceTbl instance);
        partial void UpdatePassServiceTbl(PassServiceTbl instance);
        partial void DeletePassServiceTbl(PassServiceTbl instance);
        partial void InsertPettycash(Pettycash instance);
        partial void UpdatePettycash(Pettycash instance);
        partial void DeletePettycash(Pettycash instance);
        partial void InsertPettycashLine(PettycashLine instance);
        partial void UpdatePettycashLine(PettycashLine instance);
        partial void DeletePettycashLine(PettycashLine instance);
        partial void InsertPromotion(Promotion instance);
        partial void UpdatePromotion(Promotion instance);
        partial void DeletePromotion(Promotion instance);
        partial void InsertPromotionLine(PromotionLine instance);
        partial void UpdatePromotionLine(PromotionLine instance);
        partial void DeletePromotionLine(PromotionLine instance);
        partial void InsertRequestorder(Requestorder instance);
        partial void UpdateRequestorder(Requestorder instance);
        partial void DeleteRequestorder(Requestorder instance);
        partial void InsertRequestorderLine(RequestorderLine instance);
        partial void UpdateRequestorderLine(RequestorderLine instance);
        partial void DeleteRequestorderLine(RequestorderLine instance);
        partial void InsertReturnorder(Returnorder instance);
        partial void UpdateReturnorder(Returnorder instance);
        partial void DeleteReturnorder(Returnorder instance);
        partial void InsertReturnorderLine(ReturnorderLine instance);
        partial void UpdateReturnorderLine(ReturnorderLine instance);
        partial void DeleteReturnorderLine(ReturnorderLine instance);
        partial void InsertSize(Size instance);
        partial void UpdateSize(Size instance);
        partial void DeleteSize(Size instance);
        partial void InsertSpg(Spg instance);
        partial void UpdateSpg(Spg instance);
        partial void DeleteSpg(Spg instance);
        partial void InsertStockTake(StockTake instance);
        partial void UpdateStockTake(StockTake instance);
        partial void DeleteStockTake(StockTake instance);
        partial void InsertStore(Store instance);
        partial void UpdateStore(Store instance);
        partial void DeleteStore(Store instance);
        partial void InsertStoreRelasi(StoreRelasi instance);
        partial void UpdateStoreRelasi(StoreRelasi instance);
        partial void DeleteStoreRelasi(StoreRelasi instance);
        partial void InsertTransaction(Transaction instance);
        partial void UpdateTransaction(Transaction instance);
        partial void DeleteTransaction(Transaction instance);
        partial void InsertTransactionLine(TransactionLine instance);
        partial void UpdateTransactionLine(TransactionLine instance);
        partial void DeleteTransactionLine(TransactionLine instance);
        partial void InsertVersionApk(VersionApk instance);
        partial void UpdateVersionApk(VersionApk instance);
        partial void DeleteVersionApk(VersionApk instance);
        partial void InsertVoucher(Voucher instance);
        partial void UpdateVoucher(Voucher instance);
        partial void DeleteVoucher(Voucher instance);
        partial void InsertWarehouse(Warehouse instance);
        partial void UpdateWarehouse(Warehouse instance);
        partial void DeleteWarehouse(Warehouse instance);

        #endregion

        public BiensiPosDbDataContext() :
        base(GetConnectionString("BiensiPosDbDataContextConnectionString"), mappingSource)
        {
            OnCreated();
        }

        public BiensiPosDbDataContext(MappingSource mappingSource) :
        base(GetConnectionString("BiensiPosDbDataContextConnectionString"), mappingSource)
        {
            OnCreated();
        }

        private static string GetConnectionString(string connectionStringName)
        {
            System.Configuration.ConnectionStringSettings connectionStringSettings = System.Configuration.ConfigurationManager.ConnectionStrings[connectionStringName];
            if (connectionStringSettings == null)
                throw new InvalidOperationException("Connection string \"" + connectionStringName +"\" could not be found in the configuration file.");
            return connectionStringSettings.ConnectionString;
        }

        public BiensiPosDbDataContext(string connection) :
            base(connection, mappingSource)
        {
          OnCreated();
        }

        public BiensiPosDbDataContext(System.Data.IDbConnection connection) :
            base(connection, mappingSource)
        {
          OnCreated();
        }

        public BiensiPosDbDataContext(string connection, MappingSource mappingSource) :
            base(connection, mappingSource)
        {
          OnCreated();
        }

        public BiensiPosDbDataContext(System.Data.IDbConnection connection, MappingSource mappingSource) :
            base(connection, mappingSource)
        {
          OnCreated();
        }

        public Devart.Data.Linq.Table<Article> Articles
        {
            get
            {
                return this.GetTable<Article>();
            }
        }

        public Devart.Data.Linq.Table<AutoNumber> AutoNumbers
        {
            get
            {
                return this.GetTable<AutoNumber>();
            }
        }

        public Devart.Data.Linq.Table<AutoNumberBackdate> AutoNumberBackdates
        {
            get
            {
                return this.GetTable<AutoNumberBackdate>();
            }
        }

        public Devart.Data.Linq.Table<Bank> Banks
        {
            get
            {
                return this.GetTable<Bank>();
            }
        }

        public Devart.Data.Linq.Table<Brand> Brands
        {
            get
            {
                return this.GetTable<Brand>();
            }
        }

        public Devart.Data.Linq.Table<BudgetStore> BudgetStores
        {
            get
            {
                return this.GetTable<BudgetStore>();
            }
        }

        public Devart.Data.Linq.Table<ClosingShift> ClosingShifts
        {
            get
            {
                return this.GetTable<ClosingShift>();
            }
        }

        public Devart.Data.Linq.Table<ClosingStore> ClosingStores
        {
            get
            {
                return this.GetTable<ClosingStore>();
            }
        }

        public Devart.Data.Linq.Table<Color> Colors
        {
            get
            {
                return this.GetTable<Color>();
            }
        }

        public Devart.Data.Linq.Table<Costcategory> Costcategories
        {
            get
            {
                return this.GetTable<Costcategory>();
            }
        }

        public Devart.Data.Linq.Table<Currency> Currencies
        {
            get
            {
                return this.GetTable<Currency>();
            }
        }

        public Devart.Data.Linq.Table<Customer> Customers
        {
            get
            {
                return this.GetTable<Customer>();
            }
        }

        public Devart.Data.Linq.Table<CustomerGroup> CustomerGroups
        {
            get
            {
                return this.GetTable<CustomerGroup>();
            }
        }

        public Devart.Data.Linq.Table<Deliveryorder> Deliveryorders
        {
            get
            {
                return this.GetTable<Deliveryorder>();
            }
        }

        public Devart.Data.Linq.Table<DeliveryorderLine> DeliveryorderLines
        {
            get
            {
                return this.GetTable<DeliveryorderLine>();
            }
        }

        public Devart.Data.Linq.Table<Denomination> Denominations
        {
            get
            {
                return this.GetTable<Denomination>();
            }
        }

        public Devart.Data.Linq.Table<Departement> Departements
        {
            get
            {
                return this.GetTable<Departement>();
            }
        }

        public Devart.Data.Linq.Table<Departementtype> Departementtypes
        {
            get
            {
                return this.GetTable<Departementtype>();
            }
        }

        public Devart.Data.Linq.Table<DiscountItem> DiscountItems
        {
            get
            {
                return this.GetTable<DiscountItem>();
            }
        }

        public Devart.Data.Linq.Table<Discountitemselected> Discountitemselecteds
        {
            get
            {
                return this.GetTable<Discountitemselected>();
            }
        }

        public Devart.Data.Linq.Table<Discountretail> Discountretails
        {
            get
            {
                return this.GetTable<Discountretail>();
            }
        }

        public Devart.Data.Linq.Table<Discountretailline> Discountretaillines
        {
            get
            {
                return this.GetTable<Discountretailline>();
            }
        }

        public Devart.Data.Linq.Table<Discountstore> Discountstores
        {
            get
            {
                return this.GetTable<Discountstore>();
            }
        }

        public Devart.Data.Linq.Table<Diskon> Diskons
        {
            get
            {
                return this.GetTable<Diskon>();
            }
        }

        public Devart.Data.Linq.Table<Employee> Employees
        {
            get
            {
                return this.GetTable<Employee>();
            }
        }

        public Devart.Data.Linq.Table<Employee2> Employee2s
        {
            get
            {
                return this.GetTable<Employee2>();
            }
        }

        public Devart.Data.Linq.Table<Gender> Genders
        {
            get
            {
                return this.GetTable<Gender>();
            }
        }

        public Devart.Data.Linq.Table<Inventory> Inventories
        {
            get
            {
                return this.GetTable<Inventory>();
            }
        }

        public Devart.Data.Linq.Table<InventoryLine> InventoryLines
        {
            get
            {
                return this.GetTable<InventoryLine>();
            }
        }

        public Devart.Data.Linq.Table<Itemdimensionbrand> Itemdimensionbrands
        {
            get
            {
                return this.GetTable<Itemdimensionbrand>();
            }
        }

        public Devart.Data.Linq.Table<Itemdimensioncolor> Itemdimensioncolors
        {
            get
            {
                return this.GetTable<Itemdimensioncolor>();
            }
        }

        public Devart.Data.Linq.Table<Itemdimensiondepartment> Itemdimensiondepartments
        {
            get
            {
                return this.GetTable<Itemdimensiondepartment>();
            }
        }

        public Devart.Data.Linq.Table<Itemdimensiondepartmenttype> Itemdimensiondepartmenttypes
        {
            get
            {
                return this.GetTable<Itemdimensiondepartmenttype>();
            }
        }

        public Devart.Data.Linq.Table<Itemdimensiongender> Itemdimensiongenders
        {
            get
            {
                return this.GetTable<Itemdimensiongender>();
            }
        }

        public Devart.Data.Linq.Table<Itemdimensionsize> Itemdimensionsizes
        {
            get
            {
                return this.GetTable<Itemdimensionsize>();
            }
        }

        public Devart.Data.Linq.Table<LogDiscount> LogDiscounts
        {
            get
            {
                return this.GetTable<LogDiscount>();
            }
        }

        public Devart.Data.Linq.Table<LogMsg> LogMsgs
        {
            get
            {
                return this.GetTable<LogMsg>();
            }
        }

        public Devart.Data.Linq.Table<ModalStore> ModalStores
        {
            get
            {
                return this.GetTable<ModalStore>();
            }
        }

        public Devart.Data.Linq.Table<Mutasiorder> Mutasiorders
        {
            get
            {
                return this.GetTable<Mutasiorder>();
            }
        }

        public Devart.Data.Linq.Table<MutasiorderLine> MutasiorderLines
        {
            get
            {
                return this.GetTable<MutasiorderLine>();
            }
        }

        public Devart.Data.Linq.Table<PassServiceTbl> PassServiceTbls
        {
            get
            {
                return this.GetTable<PassServiceTbl>();
            }
        }

        public Devart.Data.Linq.Table<Pettycash> Pettycashes
        {
            get
            {
                return this.GetTable<Pettycash>();
            }
        }

        public Devart.Data.Linq.Table<PettycashLine> PettycashLines
        {
            get
            {
                return this.GetTable<PettycashLine>();
            }
        }

        public Devart.Data.Linq.Table<Position> Positions
        {
            get
            {
                return this.GetTable<Position>();
            }
        }

        public Devart.Data.Linq.Table<Promotion> Promotions
        {
            get
            {
                return this.GetTable<Promotion>();
            }
        }

        public Devart.Data.Linq.Table<PromotionLine> PromotionLines
        {
            get
            {
                return this.GetTable<PromotionLine>();
            }
        }

        public Devart.Data.Linq.Table<Requestorder> Requestorders
        {
            get
            {
                return this.GetTable<Requestorder>();
            }
        }

        public Devart.Data.Linq.Table<RequestorderLine> RequestorderLines
        {
            get
            {
                return this.GetTable<RequestorderLine>();
            }
        }

        public Devart.Data.Linq.Table<Returnorder> Returnorders
        {
            get
            {
                return this.GetTable<Returnorder>();
            }
        }

        public Devart.Data.Linq.Table<ReturnorderLine> ReturnorderLines
        {
            get
            {
                return this.GetTable<ReturnorderLine>();
            }
        }

        public Devart.Data.Linq.Table<Size> Sizes
        {
            get
            {
                return this.GetTable<Size>();
            }
        }

        public Devart.Data.Linq.Table<Spg> Spgs
        {
            get
            {
                return this.GetTable<Spg>();
            }
        }

        public Devart.Data.Linq.Table<StockTake> StockTakes
        {
            get
            {
                return this.GetTable<StockTake>();
            }
        }

        public Devart.Data.Linq.Table<Store> Stores
        {
            get
            {
                return this.GetTable<Store>();
            }
        }

        public Devart.Data.Linq.Table<StoreRelasi> StoreRelasis
        {
            get
            {
                return this.GetTable<StoreRelasi>();
            }
        }

        public Devart.Data.Linq.Table<Transaction> Transactions
        {
            get
            {
                return this.GetTable<Transaction>();
            }
        }

        public Devart.Data.Linq.Table<TransactionLine> TransactionLines
        {
            get
            {
                return this.GetTable<TransactionLine>();
            }
        }

        public Devart.Data.Linq.Table<VersionApk> VersionApks
        {
            get
            {
                return this.GetTable<VersionApk>();
            }
        }

        public Devart.Data.Linq.Table<Voucher> Vouchers
        {
            get
            {
                return this.GetTable<Voucher>();
            }
        }

        public Devart.Data.Linq.Table<Warehouse> Warehouses
        {
            get
            {
                return this.GetTable<Warehouse>();
            }
        }
    }
}

namespace BiensiPosDbContext
{

    /// <summary>
    /// There are no comments for BiensiPosDbContext.Article in the schema.
    /// </summary>
    [Table(Name = @"biensi_pos_db.article")]
    public partial class Article : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private long _Id = 0;

        private string _ARTICLEID = @"-";

        private string _ARTICLENAME = @"-";

        private string _BRAND = @"-";

        private string _GENDER = @"-";

        private string _DEPARTMENT = @"-";

        private string _DEPARTMENTTYPE = @"-";

        private string _SIZE = @"-";

        private string _COLOR = @"-";

        private string _UNIT = @"-";

        private double _PRICE = 0;

        private string _ARTICLEIDALIAS = @"-";
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(long value);
        partial void OnIdChanged();
        partial void OnARTICLEIDChanging(string value);
        partial void OnARTICLEIDChanged();
        partial void OnARTICLENAMEChanging(string value);
        partial void OnARTICLENAMEChanged();
        partial void OnBRANDChanging(string value);
        partial void OnBRANDChanged();
        partial void OnGENDERChanging(string value);
        partial void OnGENDERChanged();
        partial void OnDEPARTMENTChanging(string value);
        partial void OnDEPARTMENTChanged();
        partial void OnDEPARTMENTTYPEChanging(string value);
        partial void OnDEPARTMENTTYPEChanged();
        partial void OnSIZEChanging(string value);
        partial void OnSIZEChanged();
        partial void OnCOLORChanging(string value);
        partial void OnCOLORChanged();
        partial void OnUNITChanging(string value);
        partial void OnUNITChanged();
        partial void OnPRICEChanging(double value);
        partial void OnPRICEChanged();
        partial void OnARTICLEIDALIASChanging(string value);
        partial void OnARTICLEIDALIASChanged();
        #endregion

        public Article()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [Column(Name = @"`_id`", Storage = "_Id", CanBeNull = false, DbType = "BIGINT(20) NOT NULL", IsPrimaryKey = true)]
        public long Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging("Id");
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ARTICLEID in the schema.
        /// </summary>
        [Column(Name = @"ARTICLE_ID", Storage = "_ARTICLEID", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string ARTICLEID
        {
            get
            {
                return this._ARTICLEID;
            }
            set
            {
                if (this._ARTICLEID != value)
                {
                    this.OnARTICLEIDChanging(value);
                    this.SendPropertyChanging("ARTICLEID");
                    this._ARTICLEID = value;
                    this.SendPropertyChanged("ARTICLEID");
                    this.OnARTICLEIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ARTICLENAME in the schema.
        /// </summary>
        [Column(Name = @"ARTICLE_NAME", Storage = "_ARTICLENAME", CanBeNull = false, DbType = "VARCHAR(300) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string ARTICLENAME
        {
            get
            {
                return this._ARTICLENAME;
            }
            set
            {
                if (this._ARTICLENAME != value)
                {
                    this.OnARTICLENAMEChanging(value);
                    this.SendPropertyChanging("ARTICLENAME");
                    this._ARTICLENAME = value;
                    this.SendPropertyChanged("ARTICLENAME");
                    this.OnARTICLENAMEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for BRAND in the schema.
        /// </summary>
        [Column(Storage = "_BRAND", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string BRAND
        {
            get
            {
                return this._BRAND;
            }
            set
            {
                if (this._BRAND != value)
                {
                    this.OnBRANDChanging(value);
                    this.SendPropertyChanging("BRAND");
                    this._BRAND = value;
                    this.SendPropertyChanged("BRAND");
                    this.OnBRANDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for GENDER in the schema.
        /// </summary>
        [Column(Storage = "_GENDER", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string GENDER
        {
            get
            {
                return this._GENDER;
            }
            set
            {
                if (this._GENDER != value)
                {
                    this.OnGENDERChanging(value);
                    this.SendPropertyChanging("GENDER");
                    this._GENDER = value;
                    this.SendPropertyChanged("GENDER");
                    this.OnGENDERChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DEPARTMENT in the schema.
        /// </summary>
        [Column(Storage = "_DEPARTMENT", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string DEPARTMENT
        {
            get
            {
                return this._DEPARTMENT;
            }
            set
            {
                if (this._DEPARTMENT != value)
                {
                    this.OnDEPARTMENTChanging(value);
                    this.SendPropertyChanging("DEPARTMENT");
                    this._DEPARTMENT = value;
                    this.SendPropertyChanged("DEPARTMENT");
                    this.OnDEPARTMENTChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DEPARTMENTTYPE in the schema.
        /// </summary>
        [Column(Name = @"DEPARTMENT_TYPE", Storage = "_DEPARTMENTTYPE", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string DEPARTMENTTYPE
        {
            get
            {
                return this._DEPARTMENTTYPE;
            }
            set
            {
                if (this._DEPARTMENTTYPE != value)
                {
                    this.OnDEPARTMENTTYPEChanging(value);
                    this.SendPropertyChanging("DEPARTMENTTYPE");
                    this._DEPARTMENTTYPE = value;
                    this.SendPropertyChanged("DEPARTMENTTYPE");
                    this.OnDEPARTMENTTYPEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for SIZE in the schema.
        /// </summary>
        [Column(Storage = "_SIZE", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string SIZE
        {
            get
            {
                return this._SIZE;
            }
            set
            {
                if (this._SIZE != value)
                {
                    this.OnSIZEChanging(value);
                    this.SendPropertyChanging("SIZE");
                    this._SIZE = value;
                    this.SendPropertyChanged("SIZE");
                    this.OnSIZEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for COLOR in the schema.
        /// </summary>
        [Column(Storage = "_COLOR", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string COLOR
        {
            get
            {
                return this._COLOR;
            }
            set
            {
                if (this._COLOR != value)
                {
                    this.OnCOLORChanging(value);
                    this.SendPropertyChanging("COLOR");
                    this._COLOR = value;
                    this.SendPropertyChanged("COLOR");
                    this.OnCOLORChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for UNIT in the schema.
        /// </summary>
        [Column(Storage = "_UNIT", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string UNIT
        {
            get
            {
                return this._UNIT;
            }
            set
            {
                if (this._UNIT != value)
                {
                    this.OnUNITChanging(value);
                    this.SendPropertyChanging("UNIT");
                    this._UNIT = value;
                    this.SendPropertyChanged("UNIT");
                    this.OnUNITChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PRICE in the schema.
        /// </summary>
        [Column(Storage = "_PRICE", CanBeNull = false, DbType = "DOUBLE NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public double PRICE
        {
            get
            {
                return this._PRICE;
            }
            set
            {
                if (this._PRICE != value)
                {
                    this.OnPRICEChanging(value);
                    this.SendPropertyChanging("PRICE");
                    this._PRICE = value;
                    this.SendPropertyChanged("PRICE");
                    this.OnPRICEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ARTICLEIDALIAS in the schema.
        /// </summary>
        [Column(Name = @"ARTICLE_ID_ALIAS", Storage = "_ARTICLEIDALIAS", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string ARTICLEIDALIAS
        {
            get
            {
                return this._ARTICLEIDALIAS;
            }
            set
            {
                if (this._ARTICLEIDALIAS != value)
                {
                    this.OnARTICLEIDALIASChanging(value);
                    this.SendPropertyChanging("ARTICLEIDALIAS");
                    this._ARTICLEIDALIAS = value;
                    this.SendPropertyChanged("ARTICLEIDALIAS");
                    this.OnARTICLEIDALIASChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for BiensiPosDbContext.AutoNumber in the schema.
    /// </summary>
    [Table(Name = @"biensi_pos_db.auto_number")]
    public partial class AutoNumber
    {
        #pragma warning disable 0649

        private string _StoreCode = @"-";

        private string _Month = @"-";

        private int _Number = 0;

        private string _TypeTrans = @"-";
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnStoreCodeChanging(string value);
        partial void OnStoreCodeChanged();
        partial void OnMonthChanging(string value);
        partial void OnMonthChanged();
        partial void OnNumberChanging(int value);
        partial void OnNumberChanged();
        partial void OnTypeTransChanging(string value);
        partial void OnTypeTransChanged();
        #endregion

        public AutoNumber()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for StoreCode in the schema.
        /// </summary>
        [Column(Name = @"Store_Code", Storage = "_StoreCode", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string StoreCode
        {
            get
            {
                return this._StoreCode;
            }
            set
            {
                if (this._StoreCode != value)
                {
                    this._StoreCode = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Month in the schema.
        /// </summary>
        [Column(Storage = "_Month", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string Month
        {
            get
            {
                return this._Month;
            }
            set
            {
                if (this._Month != value)
                {
                    this._Month = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Number in the schema.
        /// </summary>
        [Column(Storage = "_Number", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int Number
        {
            get
            {
                return this._Number;
            }
            set
            {
                if (this._Number != value)
                {
                    this._Number = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TypeTrans in the schema.
        /// </summary>
        [Column(Name = @"Type_Trans", Storage = "_TypeTrans", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string TypeTrans
        {
            get
            {
                return this._TypeTrans;
            }
            set
            {
                if (this._TypeTrans != value)
                {
                    this._TypeTrans = value;
                }
            }
        }
    }

    /// <summary>
    /// There are no comments for BiensiPosDbContext.AutoNumberBackdate in the schema.
    /// </summary>
    [Table(Name = @"biensi_pos_db.auto_number_backdate")]
    public partial class AutoNumberBackdate
    {
        #pragma warning disable 0649

        private string _StoreCode = @"-";

        private string _Month = @"-";

        private string _Number = @"-";

        private string _TypeTrans = @"-";

        private string _BackDate = @"-";
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnStoreCodeChanging(string value);
        partial void OnStoreCodeChanged();
        partial void OnMonthChanging(string value);
        partial void OnMonthChanged();
        partial void OnNumberChanging(string value);
        partial void OnNumberChanged();
        partial void OnTypeTransChanging(string value);
        partial void OnTypeTransChanged();
        partial void OnBackDateChanging(string value);
        partial void OnBackDateChanged();
        #endregion

        public AutoNumberBackdate()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for StoreCode in the schema.
        /// </summary>
        [Column(Name = @"Store_Code", Storage = "_StoreCode", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string StoreCode
        {
            get
            {
                return this._StoreCode;
            }
            set
            {
                if (this._StoreCode != value)
                {
                    this._StoreCode = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Month in the schema.
        /// </summary>
        [Column(Storage = "_Month", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string Month
        {
            get
            {
                return this._Month;
            }
            set
            {
                if (this._Month != value)
                {
                    this._Month = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Number in the schema.
        /// </summary>
        [Column(Storage = "_Number", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string Number
        {
            get
            {
                return this._Number;
            }
            set
            {
                if (this._Number != value)
                {
                    this._Number = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TypeTrans in the schema.
        /// </summary>
        [Column(Name = @"Type_Trans", Storage = "_TypeTrans", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string TypeTrans
        {
            get
            {
                return this._TypeTrans;
            }
            set
            {
                if (this._TypeTrans != value)
                {
                    this._TypeTrans = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for BackDate in the schema.
        /// </summary>
        [Column(Storage = "_BackDate", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string BackDate
        {
            get
            {
                return this._BackDate;
            }
            set
            {
                if (this._BackDate != value)
                {
                    this._BackDate = value;
                }
            }
        }
    }

    /// <summary>
    /// There are no comments for BiensiPosDbContext.Bank in the schema.
    /// </summary>
    [Table(Name = @"biensi_pos_db.bank")]
    public partial class Bank : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private string _BANKID = @"-";

        private string _BANKNAME = @"-";
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnBANKIDChanging(string value);
        partial void OnBANKIDChanged();
        partial void OnBANKNAMEChanging(string value);
        partial void OnBANKNAMEChanged();
        #endregion

        public Bank()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for BANKID in the schema.
        /// </summary>
        [Column(Name = @"BANK_ID", Storage = "_BANKID", CanBeNull = false, DbType = "VARCHAR(11) NOT NULL", IsPrimaryKey = true)]
        public string BANKID
        {
            get
            {
                return this._BANKID;
            }
            set
            {
                if (this._BANKID != value)
                {
                    this.OnBANKIDChanging(value);
                    this.SendPropertyChanging("BANKID");
                    this._BANKID = value;
                    this.SendPropertyChanged("BANKID");
                    this.OnBANKIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for BANKNAME in the schema.
        /// </summary>
        [Column(Name = @"BANK_NAME", Storage = "_BANKNAME", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string BANKNAME
        {
            get
            {
                return this._BANKNAME;
            }
            set
            {
                if (this._BANKNAME != value)
                {
                    this.OnBANKNAMEChanging(value);
                    this.SendPropertyChanging("BANKNAME");
                    this._BANKNAME = value;
                    this.SendPropertyChanged("BANKNAME");
                    this.OnBANKNAMEChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for BiensiPosDbContext.Brand in the schema.
    /// </summary>
    [Table(Name = @"biensi_pos_db.brand")]
    public partial class Brand : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private long _Id = 0;

        private string _CODE = @"-";

        private string _DESCRIPTION = @"-";
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(long value);
        partial void OnIdChanged();
        partial void OnCODEChanging(string value);
        partial void OnCODEChanged();
        partial void OnDESCRIPTIONChanging(string value);
        partial void OnDESCRIPTIONChanged();
        #endregion

        public Brand()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [Column(Name = @"`_id`", Storage = "_Id", CanBeNull = false, DbType = "BIGINT(20) NOT NULL", IsPrimaryKey = true)]
        public long Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging("Id");
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CODE in the schema.
        /// </summary>
        [Column(Storage = "_CODE", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string CODE
        {
            get
            {
                return this._CODE;
            }
            set
            {
                if (this._CODE != value)
                {
                    this.OnCODEChanging(value);
                    this.SendPropertyChanging("CODE");
                    this._CODE = value;
                    this.SendPropertyChanged("CODE");
                    this.OnCODEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DESCRIPTION in the schema.
        /// </summary>
        [Column(Storage = "_DESCRIPTION", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string DESCRIPTION
        {
            get
            {
                return this._DESCRIPTION;
            }
            set
            {
                if (this._DESCRIPTION != value)
                {
                    this.OnDESCRIPTIONChanging(value);
                    this.SendPropertyChanging("DESCRIPTION");
                    this._DESCRIPTION = value;
                    this.SendPropertyChanged("DESCRIPTION");
                    this.OnDESCRIPTIONChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for BiensiPosDbContext.BudgetStore in the schema.
    /// </summary>
    [Table(Name = @"biensi_pos_db.budget_store")]
    public partial class BudgetStore : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private long _Id = 0;

        private string _BUDGETID = @"-";

        private double _BUDGETTOSTORE = 0;

        private double _BUDGETTOCASHIER = 0;

        private string _DELIVERYDATE = @"-";

        private string _USEDDATE = @"-";
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(long value);
        partial void OnIdChanged();
        partial void OnBUDGETIDChanging(string value);
        partial void OnBUDGETIDChanged();
        partial void OnBUDGETTOSTOREChanging(double value);
        partial void OnBUDGETTOSTOREChanged();
        partial void OnBUDGETTOCASHIERChanging(double value);
        partial void OnBUDGETTOCASHIERChanged();
        partial void OnDELIVERYDATEChanging(string value);
        partial void OnDELIVERYDATEChanged();
        partial void OnUSEDDATEChanging(string value);
        partial void OnUSEDDATEChanged();
        #endregion

        public BudgetStore()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [Column(Name = @"`_id`", Storage = "_Id", CanBeNull = false, DbType = "BIGINT(20) NOT NULL", IsPrimaryKey = true)]
        public long Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging("Id");
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for BUDGETID in the schema.
        /// </summary>
        [Column(Name = @"BUDGET_ID", Storage = "_BUDGETID", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string BUDGETID
        {
            get
            {
                return this._BUDGETID;
            }
            set
            {
                if (this._BUDGETID != value)
                {
                    this.OnBUDGETIDChanging(value);
                    this.SendPropertyChanging("BUDGETID");
                    this._BUDGETID = value;
                    this.SendPropertyChanged("BUDGETID");
                    this.OnBUDGETIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for BUDGETTOSTORE in the schema.
        /// </summary>
        [Column(Name = @"BUDGET_TO_STORE", Storage = "_BUDGETTOSTORE", CanBeNull = false, DbType = "DOUBLE NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public double BUDGETTOSTORE
        {
            get
            {
                return this._BUDGETTOSTORE;
            }
            set
            {
                if (this._BUDGETTOSTORE != value)
                {
                    this.OnBUDGETTOSTOREChanging(value);
                    this.SendPropertyChanging("BUDGETTOSTORE");
                    this._BUDGETTOSTORE = value;
                    this.SendPropertyChanged("BUDGETTOSTORE");
                    this.OnBUDGETTOSTOREChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for BUDGETTOCASHIER in the schema.
        /// </summary>
        [Column(Name = @"BUDGET_TO_CASHIER", Storage = "_BUDGETTOCASHIER", CanBeNull = false, DbType = "DOUBLE NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public double BUDGETTOCASHIER
        {
            get
            {
                return this._BUDGETTOCASHIER;
            }
            set
            {
                if (this._BUDGETTOCASHIER != value)
                {
                    this.OnBUDGETTOCASHIERChanging(value);
                    this.SendPropertyChanging("BUDGETTOCASHIER");
                    this._BUDGETTOCASHIER = value;
                    this.SendPropertyChanged("BUDGETTOCASHIER");
                    this.OnBUDGETTOCASHIERChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DELIVERYDATE in the schema.
        /// </summary>
        [Column(Name = @"DELIVERY_DATE", Storage = "_DELIVERYDATE", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string DELIVERYDATE
        {
            get
            {
                return this._DELIVERYDATE;
            }
            set
            {
                if (this._DELIVERYDATE != value)
                {
                    this.OnDELIVERYDATEChanging(value);
                    this.SendPropertyChanging("DELIVERYDATE");
                    this._DELIVERYDATE = value;
                    this.SendPropertyChanged("DELIVERYDATE");
                    this.OnDELIVERYDATEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for USEDDATE in the schema.
        /// </summary>
        [Column(Name = @"USED_DATE", Storage = "_USEDDATE", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string USEDDATE
        {
            get
            {
                return this._USEDDATE;
            }
            set
            {
                if (this._USEDDATE != value)
                {
                    this.OnUSEDDATEChanging(value);
                    this.SendPropertyChanging("USEDDATE");
                    this._USEDDATE = value;
                    this.SendPropertyChanged("USEDDATE");
                    this.OnUSEDDATEChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for BiensiPosDbContext.ClosingShift in the schema.
    /// </summary>
    [Table(Name = @"biensi_pos_db.closing_shift")]
    public partial class ClosingShift : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private long _Id;

        private string _IDSHIFT = @"-";

        private string _STOREID = @"-";

        private string _SHIFT = @"-";

        private string _OPENINGTIME = @"-";

        private string _CLOSINGTIME = @"-";

        private double _OPENINGTRANSBALANCE = 0;

        private double _CLOSINGTRANSBALANCE = 0;

        private double _REALTRANSBALANCE = 0;

        private double _DISPUTETRANSBALANCE = 0;

        private double _OPENINGPETTYCASH = 0;

        private double _CLOSINGPETTYCASH = 0;

        private double _REALPETTYCASH = 0;

        private double _DISPUTEPETTYCASH = 0;

        private double _OPENINGDEPOSIT = 0;

        private double _CLOSINGDEPOSIT = 0;

        private double _REALDEPOSIT = 0;

        private double _DISPUTEDEPOSIT = 0;

        private string _DEVICENAME = @"-";

        private int _TOTALQTY = 0;

        private int _STATUSCLOSE = 0;

        private string _EMPLOYEEID = @"-";

        private string _EMPLOYEENAME = @"-";
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(long value);
        partial void OnIdChanged();
        partial void OnIDSHIFTChanging(string value);
        partial void OnIDSHIFTChanged();
        partial void OnSTOREIDChanging(string value);
        partial void OnSTOREIDChanged();
        partial void OnSHIFTChanging(string value);
        partial void OnSHIFTChanged();
        partial void OnOPENINGTIMEChanging(string value);
        partial void OnOPENINGTIMEChanged();
        partial void OnCLOSINGTIMEChanging(string value);
        partial void OnCLOSINGTIMEChanged();
        partial void OnOPENINGTRANSBALANCEChanging(double value);
        partial void OnOPENINGTRANSBALANCEChanged();
        partial void OnCLOSINGTRANSBALANCEChanging(double value);
        partial void OnCLOSINGTRANSBALANCEChanged();
        partial void OnREALTRANSBALANCEChanging(double value);
        partial void OnREALTRANSBALANCEChanged();
        partial void OnDISPUTETRANSBALANCEChanging(double value);
        partial void OnDISPUTETRANSBALANCEChanged();
        partial void OnOPENINGPETTYCASHChanging(double value);
        partial void OnOPENINGPETTYCASHChanged();
        partial void OnCLOSINGPETTYCASHChanging(double value);
        partial void OnCLOSINGPETTYCASHChanged();
        partial void OnREALPETTYCASHChanging(double value);
        partial void OnREALPETTYCASHChanged();
        partial void OnDISPUTEPETTYCASHChanging(double value);
        partial void OnDISPUTEPETTYCASHChanged();
        partial void OnOPENINGDEPOSITChanging(double value);
        partial void OnOPENINGDEPOSITChanged();
        partial void OnCLOSINGDEPOSITChanging(double value);
        partial void OnCLOSINGDEPOSITChanged();
        partial void OnREALDEPOSITChanging(double value);
        partial void OnREALDEPOSITChanged();
        partial void OnDISPUTEDEPOSITChanging(double value);
        partial void OnDISPUTEDEPOSITChanged();
        partial void OnDEVICENAMEChanging(string value);
        partial void OnDEVICENAMEChanged();
        partial void OnTOTALQTYChanging(int value);
        partial void OnTOTALQTYChanged();
        partial void OnSTATUSCLOSEChanging(int value);
        partial void OnSTATUSCLOSEChanged();
        partial void OnEMPLOYEEIDChanging(string value);
        partial void OnEMPLOYEEIDChanged();
        partial void OnEMPLOYEENAMEChanging(string value);
        partial void OnEMPLOYEENAMEChanged();
        #endregion

        public ClosingShift()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [Column(Name = @"`_id`", Storage = "_Id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "BIGINT(20) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
        public long Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging("Id");
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for IDSHIFT in the schema.
        /// </summary>
        [Column(Name = @"ID_SHIFT", Storage = "_IDSHIFT", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string IDSHIFT
        {
            get
            {
                return this._IDSHIFT;
            }
            set
            {
                if (this._IDSHIFT != value)
                {
                    this.OnIDSHIFTChanging(value);
                    this.SendPropertyChanging("IDSHIFT");
                    this._IDSHIFT = value;
                    this.SendPropertyChanged("IDSHIFT");
                    this.OnIDSHIFTChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for STOREID in the schema.
        /// </summary>
        [Column(Name = @"STORE_ID", Storage = "_STOREID", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string STOREID
        {
            get
            {
                return this._STOREID;
            }
            set
            {
                if (this._STOREID != value)
                {
                    this.OnSTOREIDChanging(value);
                    this.SendPropertyChanging("STOREID");
                    this._STOREID = value;
                    this.SendPropertyChanged("STOREID");
                    this.OnSTOREIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for SHIFT in the schema.
        /// </summary>
        [Column(Storage = "_SHIFT", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string SHIFT
        {
            get
            {
                return this._SHIFT;
            }
            set
            {
                if (this._SHIFT != value)
                {
                    this.OnSHIFTChanging(value);
                    this.SendPropertyChanging("SHIFT");
                    this._SHIFT = value;
                    this.SendPropertyChanged("SHIFT");
                    this.OnSHIFTChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for OPENINGTIME in the schema.
        /// </summary>
        [Column(Name = @"OPENING_TIME", Storage = "_OPENINGTIME", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string OPENINGTIME
        {
            get
            {
                return this._OPENINGTIME;
            }
            set
            {
                if (this._OPENINGTIME != value)
                {
                    this.OnOPENINGTIMEChanging(value);
                    this.SendPropertyChanging("OPENINGTIME");
                    this._OPENINGTIME = value;
                    this.SendPropertyChanged("OPENINGTIME");
                    this.OnOPENINGTIMEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CLOSINGTIME in the schema.
        /// </summary>
        [Column(Name = @"CLOSING_TIME", Storage = "_CLOSINGTIME", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string CLOSINGTIME
        {
            get
            {
                return this._CLOSINGTIME;
            }
            set
            {
                if (this._CLOSINGTIME != value)
                {
                    this.OnCLOSINGTIMEChanging(value);
                    this.SendPropertyChanging("CLOSINGTIME");
                    this._CLOSINGTIME = value;
                    this.SendPropertyChanged("CLOSINGTIME");
                    this.OnCLOSINGTIMEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for OPENINGTRANSBALANCE in the schema.
        /// </summary>
        [Column(Name = @"OPENING_TRANS_BALANCE", Storage = "_OPENINGTRANSBALANCE", CanBeNull = false, DbType = "DOUBLE NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public double OPENINGTRANSBALANCE
        {
            get
            {
                return this._OPENINGTRANSBALANCE;
            }
            set
            {
                if (this._OPENINGTRANSBALANCE != value)
                {
                    this.OnOPENINGTRANSBALANCEChanging(value);
                    this.SendPropertyChanging("OPENINGTRANSBALANCE");
                    this._OPENINGTRANSBALANCE = value;
                    this.SendPropertyChanged("OPENINGTRANSBALANCE");
                    this.OnOPENINGTRANSBALANCEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CLOSINGTRANSBALANCE in the schema.
        /// </summary>
        [Column(Name = @"CLOSING_TRANS_BALANCE", Storage = "_CLOSINGTRANSBALANCE", CanBeNull = false, DbType = "DOUBLE NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public double CLOSINGTRANSBALANCE
        {
            get
            {
                return this._CLOSINGTRANSBALANCE;
            }
            set
            {
                if (this._CLOSINGTRANSBALANCE != value)
                {
                    this.OnCLOSINGTRANSBALANCEChanging(value);
                    this.SendPropertyChanging("CLOSINGTRANSBALANCE");
                    this._CLOSINGTRANSBALANCE = value;
                    this.SendPropertyChanged("CLOSINGTRANSBALANCE");
                    this.OnCLOSINGTRANSBALANCEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for REALTRANSBALANCE in the schema.
        /// </summary>
        [Column(Name = @"REAL_TRANS_BALANCE", Storage = "_REALTRANSBALANCE", CanBeNull = false, DbType = "DOUBLE NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public double REALTRANSBALANCE
        {
            get
            {
                return this._REALTRANSBALANCE;
            }
            set
            {
                if (this._REALTRANSBALANCE != value)
                {
                    this.OnREALTRANSBALANCEChanging(value);
                    this.SendPropertyChanging("REALTRANSBALANCE");
                    this._REALTRANSBALANCE = value;
                    this.SendPropertyChanged("REALTRANSBALANCE");
                    this.OnREALTRANSBALANCEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DISPUTETRANSBALANCE in the schema.
        /// </summary>
        [Column(Name = @"DISPUTE_TRANS_BALANCE", Storage = "_DISPUTETRANSBALANCE", CanBeNull = false, DbType = "DOUBLE NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public double DISPUTETRANSBALANCE
        {
            get
            {
                return this._DISPUTETRANSBALANCE;
            }
            set
            {
                if (this._DISPUTETRANSBALANCE != value)
                {
                    this.OnDISPUTETRANSBALANCEChanging(value);
                    this.SendPropertyChanging("DISPUTETRANSBALANCE");
                    this._DISPUTETRANSBALANCE = value;
                    this.SendPropertyChanged("DISPUTETRANSBALANCE");
                    this.OnDISPUTETRANSBALANCEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for OPENINGPETTYCASH in the schema.
        /// </summary>
        [Column(Name = @"OPENING_PETTY_CASH", Storage = "_OPENINGPETTYCASH", CanBeNull = false, DbType = "DOUBLE NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public double OPENINGPETTYCASH
        {
            get
            {
                return this._OPENINGPETTYCASH;
            }
            set
            {
                if (this._OPENINGPETTYCASH != value)
                {
                    this.OnOPENINGPETTYCASHChanging(value);
                    this.SendPropertyChanging("OPENINGPETTYCASH");
                    this._OPENINGPETTYCASH = value;
                    this.SendPropertyChanged("OPENINGPETTYCASH");
                    this.OnOPENINGPETTYCASHChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CLOSINGPETTYCASH in the schema.
        /// </summary>
        [Column(Name = @"CLOSING_PETTY_CASH", Storage = "_CLOSINGPETTYCASH", CanBeNull = false, DbType = "DOUBLE NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public double CLOSINGPETTYCASH
        {
            get
            {
                return this._CLOSINGPETTYCASH;
            }
            set
            {
                if (this._CLOSINGPETTYCASH != value)
                {
                    this.OnCLOSINGPETTYCASHChanging(value);
                    this.SendPropertyChanging("CLOSINGPETTYCASH");
                    this._CLOSINGPETTYCASH = value;
                    this.SendPropertyChanged("CLOSINGPETTYCASH");
                    this.OnCLOSINGPETTYCASHChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for REALPETTYCASH in the schema.
        /// </summary>
        [Column(Name = @"REAL_PETTY_CASH", Storage = "_REALPETTYCASH", CanBeNull = false, DbType = "DOUBLE NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public double REALPETTYCASH
        {
            get
            {
                return this._REALPETTYCASH;
            }
            set
            {
                if (this._REALPETTYCASH != value)
                {
                    this.OnREALPETTYCASHChanging(value);
                    this.SendPropertyChanging("REALPETTYCASH");
                    this._REALPETTYCASH = value;
                    this.SendPropertyChanged("REALPETTYCASH");
                    this.OnREALPETTYCASHChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DISPUTEPETTYCASH in the schema.
        /// </summary>
        [Column(Name = @"DISPUTE_PETTY_CASH", Storage = "_DISPUTEPETTYCASH", CanBeNull = false, DbType = "DOUBLE NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public double DISPUTEPETTYCASH
        {
            get
            {
                return this._DISPUTEPETTYCASH;
            }
            set
            {
                if (this._DISPUTEPETTYCASH != value)
                {
                    this.OnDISPUTEPETTYCASHChanging(value);
                    this.SendPropertyChanging("DISPUTEPETTYCASH");
                    this._DISPUTEPETTYCASH = value;
                    this.SendPropertyChanged("DISPUTEPETTYCASH");
                    this.OnDISPUTEPETTYCASHChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for OPENINGDEPOSIT in the schema.
        /// </summary>
        [Column(Name = @"OPENING_DEPOSIT", Storage = "_OPENINGDEPOSIT", CanBeNull = false, DbType = "DOUBLE NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public double OPENINGDEPOSIT
        {
            get
            {
                return this._OPENINGDEPOSIT;
            }
            set
            {
                if (this._OPENINGDEPOSIT != value)
                {
                    this.OnOPENINGDEPOSITChanging(value);
                    this.SendPropertyChanging("OPENINGDEPOSIT");
                    this._OPENINGDEPOSIT = value;
                    this.SendPropertyChanged("OPENINGDEPOSIT");
                    this.OnOPENINGDEPOSITChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CLOSINGDEPOSIT in the schema.
        /// </summary>
        [Column(Name = @"CLOSING_DEPOSIT", Storage = "_CLOSINGDEPOSIT", CanBeNull = false, DbType = "DOUBLE NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public double CLOSINGDEPOSIT
        {
            get
            {
                return this._CLOSINGDEPOSIT;
            }
            set
            {
                if (this._CLOSINGDEPOSIT != value)
                {
                    this.OnCLOSINGDEPOSITChanging(value);
                    this.SendPropertyChanging("CLOSINGDEPOSIT");
                    this._CLOSINGDEPOSIT = value;
                    this.SendPropertyChanged("CLOSINGDEPOSIT");
                    this.OnCLOSINGDEPOSITChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for REALDEPOSIT in the schema.
        /// </summary>
        [Column(Name = @"REAL_DEPOSIT", Storage = "_REALDEPOSIT", CanBeNull = false, DbType = "DOUBLE NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public double REALDEPOSIT
        {
            get
            {
                return this._REALDEPOSIT;
            }
            set
            {
                if (this._REALDEPOSIT != value)
                {
                    this.OnREALDEPOSITChanging(value);
                    this.SendPropertyChanging("REALDEPOSIT");
                    this._REALDEPOSIT = value;
                    this.SendPropertyChanged("REALDEPOSIT");
                    this.OnREALDEPOSITChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DISPUTEDEPOSIT in the schema.
        /// </summary>
        [Column(Name = @"DISPUTE_DEPOSIT", Storage = "_DISPUTEDEPOSIT", CanBeNull = false, DbType = "DOUBLE NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public double DISPUTEDEPOSIT
        {
            get
            {
                return this._DISPUTEDEPOSIT;
            }
            set
            {
                if (this._DISPUTEDEPOSIT != value)
                {
                    this.OnDISPUTEDEPOSITChanging(value);
                    this.SendPropertyChanging("DISPUTEDEPOSIT");
                    this._DISPUTEDEPOSIT = value;
                    this.SendPropertyChanged("DISPUTEDEPOSIT");
                    this.OnDISPUTEDEPOSITChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DEVICENAME in the schema.
        /// </summary>
        [Column(Name = @"DEVICE_NAME", Storage = "_DEVICENAME", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string DEVICENAME
        {
            get
            {
                return this._DEVICENAME;
            }
            set
            {
                if (this._DEVICENAME != value)
                {
                    this.OnDEVICENAMEChanging(value);
                    this.SendPropertyChanging("DEVICENAME");
                    this._DEVICENAME = value;
                    this.SendPropertyChanged("DEVICENAME");
                    this.OnDEVICENAMEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TOTALQTY in the schema.
        /// </summary>
        [Column(Name = @"TOTAL_QTY", Storage = "_TOTALQTY", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int TOTALQTY
        {
            get
            {
                return this._TOTALQTY;
            }
            set
            {
                if (this._TOTALQTY != value)
                {
                    this.OnTOTALQTYChanging(value);
                    this.SendPropertyChanging("TOTALQTY");
                    this._TOTALQTY = value;
                    this.SendPropertyChanged("TOTALQTY");
                    this.OnTOTALQTYChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for STATUSCLOSE in the schema.
        /// </summary>
        [Column(Name = @"STATUS_CLOSE", Storage = "_STATUSCLOSE", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int STATUSCLOSE
        {
            get
            {
                return this._STATUSCLOSE;
            }
            set
            {
                if (this._STATUSCLOSE != value)
                {
                    this.OnSTATUSCLOSEChanging(value);
                    this.SendPropertyChanging("STATUSCLOSE");
                    this._STATUSCLOSE = value;
                    this.SendPropertyChanged("STATUSCLOSE");
                    this.OnSTATUSCLOSEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for EMPLOYEEID in the schema.
        /// </summary>
        [Column(Name = @"EMPLOYEE_ID", Storage = "_EMPLOYEEID", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string EMPLOYEEID
        {
            get
            {
                return this._EMPLOYEEID;
            }
            set
            {
                if (this._EMPLOYEEID != value)
                {
                    this.OnEMPLOYEEIDChanging(value);
                    this.SendPropertyChanging("EMPLOYEEID");
                    this._EMPLOYEEID = value;
                    this.SendPropertyChanged("EMPLOYEEID");
                    this.OnEMPLOYEEIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for EMPLOYEENAME in the schema.
        /// </summary>
        [Column(Name = @"EMPLOYEE_NAME", Storage = "_EMPLOYEENAME", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string EMPLOYEENAME
        {
            get
            {
                return this._EMPLOYEENAME;
            }
            set
            {
                if (this._EMPLOYEENAME != value)
                {
                    this.OnEMPLOYEENAMEChanging(value);
                    this.SendPropertyChanging("EMPLOYEENAME");
                    this._EMPLOYEENAME = value;
                    this.SendPropertyChanged("EMPLOYEENAME");
                    this.OnEMPLOYEENAMEChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for BiensiPosDbContext.ClosingStore in the schema.
    /// </summary>
    [Table(Name = @"biensi_pos_db.closing_store")]
    public partial class ClosingStore : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private long _Id;

        private string _IDCSTORE = @"-";

        private string _STOREID = @"-";

        private string _OPENINGTIME = @"-";

        private string _CLOSINGTIME = @"-";

        private double _OPENINGTRANSBALANCE = 0;

        private double _CLOSINGTRANSBALANCE = 0;

        private double _REALTRANSBALANCE = 0;

        private double _DISPUTETRANSBALANCE = 0;

        private double _OPENINGPETTYCASH = 0;

        private double _CLOSINGPETTYCASH = 0;

        private double _REALPETTYCASH = 0;

        private double _DISPUTEPETTYCASH = 0;

        private double _OPENINGDEPOSIT = 0;

        private double _CLOSINGDEPOSIT = 0;

        private double _REALDEPOSIT = 0;

        private double _DISPUTEDEPOSIT = 0;

        private string _DEVICENAME = @"-";

        private int _TOTALQTY = 0;

        private int _STATUSCLOSE = 0;

        private string _EMPLOYEEID = @"-";

        private string _EMPLOYEENAME = @"-";
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(long value);
        partial void OnIdChanged();
        partial void OnIDCSTOREChanging(string value);
        partial void OnIDCSTOREChanged();
        partial void OnSTOREIDChanging(string value);
        partial void OnSTOREIDChanged();
        partial void OnOPENINGTIMEChanging(string value);
        partial void OnOPENINGTIMEChanged();
        partial void OnCLOSINGTIMEChanging(string value);
        partial void OnCLOSINGTIMEChanged();
        partial void OnOPENINGTRANSBALANCEChanging(double value);
        partial void OnOPENINGTRANSBALANCEChanged();
        partial void OnCLOSINGTRANSBALANCEChanging(double value);
        partial void OnCLOSINGTRANSBALANCEChanged();
        partial void OnREALTRANSBALANCEChanging(double value);
        partial void OnREALTRANSBALANCEChanged();
        partial void OnDISPUTETRANSBALANCEChanging(double value);
        partial void OnDISPUTETRANSBALANCEChanged();
        partial void OnOPENINGPETTYCASHChanging(double value);
        partial void OnOPENINGPETTYCASHChanged();
        partial void OnCLOSINGPETTYCASHChanging(double value);
        partial void OnCLOSINGPETTYCASHChanged();
        partial void OnREALPETTYCASHChanging(double value);
        partial void OnREALPETTYCASHChanged();
        partial void OnDISPUTEPETTYCASHChanging(double value);
        partial void OnDISPUTEPETTYCASHChanged();
        partial void OnOPENINGDEPOSITChanging(double value);
        partial void OnOPENINGDEPOSITChanged();
        partial void OnCLOSINGDEPOSITChanging(double value);
        partial void OnCLOSINGDEPOSITChanged();
        partial void OnREALDEPOSITChanging(double value);
        partial void OnREALDEPOSITChanged();
        partial void OnDISPUTEDEPOSITChanging(double value);
        partial void OnDISPUTEDEPOSITChanged();
        partial void OnDEVICENAMEChanging(string value);
        partial void OnDEVICENAMEChanged();
        partial void OnTOTALQTYChanging(int value);
        partial void OnTOTALQTYChanged();
        partial void OnSTATUSCLOSEChanging(int value);
        partial void OnSTATUSCLOSEChanged();
        partial void OnEMPLOYEEIDChanging(string value);
        partial void OnEMPLOYEEIDChanged();
        partial void OnEMPLOYEENAMEChanging(string value);
        partial void OnEMPLOYEENAMEChanged();
        #endregion

        public ClosingStore()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [Column(Name = @"`_id`", Storage = "_Id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "BIGINT(20) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
        public long Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging("Id");
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for IDCSTORE in the schema.
        /// </summary>
        [Column(Name = @"ID_C_STORE", Storage = "_IDCSTORE", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string IDCSTORE
        {
            get
            {
                return this._IDCSTORE;
            }
            set
            {
                if (this._IDCSTORE != value)
                {
                    this.OnIDCSTOREChanging(value);
                    this.SendPropertyChanging("IDCSTORE");
                    this._IDCSTORE = value;
                    this.SendPropertyChanged("IDCSTORE");
                    this.OnIDCSTOREChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for STOREID in the schema.
        /// </summary>
        [Column(Name = @"STORE_ID", Storage = "_STOREID", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string STOREID
        {
            get
            {
                return this._STOREID;
            }
            set
            {
                if (this._STOREID != value)
                {
                    this.OnSTOREIDChanging(value);
                    this.SendPropertyChanging("STOREID");
                    this._STOREID = value;
                    this.SendPropertyChanged("STOREID");
                    this.OnSTOREIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for OPENINGTIME in the schema.
        /// </summary>
        [Column(Name = @"OPENING_TIME", Storage = "_OPENINGTIME", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string OPENINGTIME
        {
            get
            {
                return this._OPENINGTIME;
            }
            set
            {
                if (this._OPENINGTIME != value)
                {
                    this.OnOPENINGTIMEChanging(value);
                    this.SendPropertyChanging("OPENINGTIME");
                    this._OPENINGTIME = value;
                    this.SendPropertyChanged("OPENINGTIME");
                    this.OnOPENINGTIMEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CLOSINGTIME in the schema.
        /// </summary>
        [Column(Name = @"CLOSING_TIME", Storage = "_CLOSINGTIME", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string CLOSINGTIME
        {
            get
            {
                return this._CLOSINGTIME;
            }
            set
            {
                if (this._CLOSINGTIME != value)
                {
                    this.OnCLOSINGTIMEChanging(value);
                    this.SendPropertyChanging("CLOSINGTIME");
                    this._CLOSINGTIME = value;
                    this.SendPropertyChanged("CLOSINGTIME");
                    this.OnCLOSINGTIMEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for OPENINGTRANSBALANCE in the schema.
        /// </summary>
        [Column(Name = @"OPENING_TRANS_BALANCE", Storage = "_OPENINGTRANSBALANCE", CanBeNull = false, DbType = "DOUBLE NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public double OPENINGTRANSBALANCE
        {
            get
            {
                return this._OPENINGTRANSBALANCE;
            }
            set
            {
                if (this._OPENINGTRANSBALANCE != value)
                {
                    this.OnOPENINGTRANSBALANCEChanging(value);
                    this.SendPropertyChanging("OPENINGTRANSBALANCE");
                    this._OPENINGTRANSBALANCE = value;
                    this.SendPropertyChanged("OPENINGTRANSBALANCE");
                    this.OnOPENINGTRANSBALANCEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CLOSINGTRANSBALANCE in the schema.
        /// </summary>
        [Column(Name = @"CLOSING_TRANS_BALANCE", Storage = "_CLOSINGTRANSBALANCE", CanBeNull = false, DbType = "DOUBLE NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public double CLOSINGTRANSBALANCE
        {
            get
            {
                return this._CLOSINGTRANSBALANCE;
            }
            set
            {
                if (this._CLOSINGTRANSBALANCE != value)
                {
                    this.OnCLOSINGTRANSBALANCEChanging(value);
                    this.SendPropertyChanging("CLOSINGTRANSBALANCE");
                    this._CLOSINGTRANSBALANCE = value;
                    this.SendPropertyChanged("CLOSINGTRANSBALANCE");
                    this.OnCLOSINGTRANSBALANCEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for REALTRANSBALANCE in the schema.
        /// </summary>
        [Column(Name = @"REAL_TRANS_BALANCE", Storage = "_REALTRANSBALANCE", CanBeNull = false, DbType = "DOUBLE NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public double REALTRANSBALANCE
        {
            get
            {
                return this._REALTRANSBALANCE;
            }
            set
            {
                if (this._REALTRANSBALANCE != value)
                {
                    this.OnREALTRANSBALANCEChanging(value);
                    this.SendPropertyChanging("REALTRANSBALANCE");
                    this._REALTRANSBALANCE = value;
                    this.SendPropertyChanged("REALTRANSBALANCE");
                    this.OnREALTRANSBALANCEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DISPUTETRANSBALANCE in the schema.
        /// </summary>
        [Column(Name = @"DISPUTE_TRANS_BALANCE", Storage = "_DISPUTETRANSBALANCE", CanBeNull = false, DbType = "DOUBLE NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public double DISPUTETRANSBALANCE
        {
            get
            {
                return this._DISPUTETRANSBALANCE;
            }
            set
            {
                if (this._DISPUTETRANSBALANCE != value)
                {
                    this.OnDISPUTETRANSBALANCEChanging(value);
                    this.SendPropertyChanging("DISPUTETRANSBALANCE");
                    this._DISPUTETRANSBALANCE = value;
                    this.SendPropertyChanged("DISPUTETRANSBALANCE");
                    this.OnDISPUTETRANSBALANCEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for OPENINGPETTYCASH in the schema.
        /// </summary>
        [Column(Name = @"OPENING_PETTY_CASH", Storage = "_OPENINGPETTYCASH", CanBeNull = false, DbType = "DOUBLE NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public double OPENINGPETTYCASH
        {
            get
            {
                return this._OPENINGPETTYCASH;
            }
            set
            {
                if (this._OPENINGPETTYCASH != value)
                {
                    this.OnOPENINGPETTYCASHChanging(value);
                    this.SendPropertyChanging("OPENINGPETTYCASH");
                    this._OPENINGPETTYCASH = value;
                    this.SendPropertyChanged("OPENINGPETTYCASH");
                    this.OnOPENINGPETTYCASHChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CLOSINGPETTYCASH in the schema.
        /// </summary>
        [Column(Name = @"CLOSING_PETTY_CASH", Storage = "_CLOSINGPETTYCASH", CanBeNull = false, DbType = "DOUBLE NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public double CLOSINGPETTYCASH
        {
            get
            {
                return this._CLOSINGPETTYCASH;
            }
            set
            {
                if (this._CLOSINGPETTYCASH != value)
                {
                    this.OnCLOSINGPETTYCASHChanging(value);
                    this.SendPropertyChanging("CLOSINGPETTYCASH");
                    this._CLOSINGPETTYCASH = value;
                    this.SendPropertyChanged("CLOSINGPETTYCASH");
                    this.OnCLOSINGPETTYCASHChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for REALPETTYCASH in the schema.
        /// </summary>
        [Column(Name = @"REAL_PETTY_CASH", Storage = "_REALPETTYCASH", CanBeNull = false, DbType = "DOUBLE NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public double REALPETTYCASH
        {
            get
            {
                return this._REALPETTYCASH;
            }
            set
            {
                if (this._REALPETTYCASH != value)
                {
                    this.OnREALPETTYCASHChanging(value);
                    this.SendPropertyChanging("REALPETTYCASH");
                    this._REALPETTYCASH = value;
                    this.SendPropertyChanged("REALPETTYCASH");
                    this.OnREALPETTYCASHChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DISPUTEPETTYCASH in the schema.
        /// </summary>
        [Column(Name = @"DISPUTE_PETTY_CASH", Storage = "_DISPUTEPETTYCASH", CanBeNull = false, DbType = "DOUBLE NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public double DISPUTEPETTYCASH
        {
            get
            {
                return this._DISPUTEPETTYCASH;
            }
            set
            {
                if (this._DISPUTEPETTYCASH != value)
                {
                    this.OnDISPUTEPETTYCASHChanging(value);
                    this.SendPropertyChanging("DISPUTEPETTYCASH");
                    this._DISPUTEPETTYCASH = value;
                    this.SendPropertyChanged("DISPUTEPETTYCASH");
                    this.OnDISPUTEPETTYCASHChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for OPENINGDEPOSIT in the schema.
        /// </summary>
        [Column(Name = @"OPENING_DEPOSIT", Storage = "_OPENINGDEPOSIT", CanBeNull = false, DbType = "DOUBLE NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public double OPENINGDEPOSIT
        {
            get
            {
                return this._OPENINGDEPOSIT;
            }
            set
            {
                if (this._OPENINGDEPOSIT != value)
                {
                    this.OnOPENINGDEPOSITChanging(value);
                    this.SendPropertyChanging("OPENINGDEPOSIT");
                    this._OPENINGDEPOSIT = value;
                    this.SendPropertyChanged("OPENINGDEPOSIT");
                    this.OnOPENINGDEPOSITChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CLOSINGDEPOSIT in the schema.
        /// </summary>
        [Column(Name = @"CLOSING_DEPOSIT", Storage = "_CLOSINGDEPOSIT", CanBeNull = false, DbType = "DOUBLE NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public double CLOSINGDEPOSIT
        {
            get
            {
                return this._CLOSINGDEPOSIT;
            }
            set
            {
                if (this._CLOSINGDEPOSIT != value)
                {
                    this.OnCLOSINGDEPOSITChanging(value);
                    this.SendPropertyChanging("CLOSINGDEPOSIT");
                    this._CLOSINGDEPOSIT = value;
                    this.SendPropertyChanged("CLOSINGDEPOSIT");
                    this.OnCLOSINGDEPOSITChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for REALDEPOSIT in the schema.
        /// </summary>
        [Column(Name = @"REAL_DEPOSIT", Storage = "_REALDEPOSIT", CanBeNull = false, DbType = "DOUBLE NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public double REALDEPOSIT
        {
            get
            {
                return this._REALDEPOSIT;
            }
            set
            {
                if (this._REALDEPOSIT != value)
                {
                    this.OnREALDEPOSITChanging(value);
                    this.SendPropertyChanging("REALDEPOSIT");
                    this._REALDEPOSIT = value;
                    this.SendPropertyChanged("REALDEPOSIT");
                    this.OnREALDEPOSITChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DISPUTEDEPOSIT in the schema.
        /// </summary>
        [Column(Name = @"DISPUTE_DEPOSIT", Storage = "_DISPUTEDEPOSIT", CanBeNull = false, DbType = "DOUBLE NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public double DISPUTEDEPOSIT
        {
            get
            {
                return this._DISPUTEDEPOSIT;
            }
            set
            {
                if (this._DISPUTEDEPOSIT != value)
                {
                    this.OnDISPUTEDEPOSITChanging(value);
                    this.SendPropertyChanging("DISPUTEDEPOSIT");
                    this._DISPUTEDEPOSIT = value;
                    this.SendPropertyChanged("DISPUTEDEPOSIT");
                    this.OnDISPUTEDEPOSITChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DEVICENAME in the schema.
        /// </summary>
        [Column(Name = @"DEVICE_NAME", Storage = "_DEVICENAME", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string DEVICENAME
        {
            get
            {
                return this._DEVICENAME;
            }
            set
            {
                if (this._DEVICENAME != value)
                {
                    this.OnDEVICENAMEChanging(value);
                    this.SendPropertyChanging("DEVICENAME");
                    this._DEVICENAME = value;
                    this.SendPropertyChanged("DEVICENAME");
                    this.OnDEVICENAMEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TOTALQTY in the schema.
        /// </summary>
        [Column(Name = @"TOTAL_QTY", Storage = "_TOTALQTY", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int TOTALQTY
        {
            get
            {
                return this._TOTALQTY;
            }
            set
            {
                if (this._TOTALQTY != value)
                {
                    this.OnTOTALQTYChanging(value);
                    this.SendPropertyChanging("TOTALQTY");
                    this._TOTALQTY = value;
                    this.SendPropertyChanged("TOTALQTY");
                    this.OnTOTALQTYChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for STATUSCLOSE in the schema.
        /// </summary>
        [Column(Name = @"STATUS_CLOSE", Storage = "_STATUSCLOSE", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int STATUSCLOSE
        {
            get
            {
                return this._STATUSCLOSE;
            }
            set
            {
                if (this._STATUSCLOSE != value)
                {
                    this.OnSTATUSCLOSEChanging(value);
                    this.SendPropertyChanging("STATUSCLOSE");
                    this._STATUSCLOSE = value;
                    this.SendPropertyChanged("STATUSCLOSE");
                    this.OnSTATUSCLOSEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for EMPLOYEEID in the schema.
        /// </summary>
        [Column(Name = @"EMPLOYEE_ID", Storage = "_EMPLOYEEID", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string EMPLOYEEID
        {
            get
            {
                return this._EMPLOYEEID;
            }
            set
            {
                if (this._EMPLOYEEID != value)
                {
                    this.OnEMPLOYEEIDChanging(value);
                    this.SendPropertyChanging("EMPLOYEEID");
                    this._EMPLOYEEID = value;
                    this.SendPropertyChanged("EMPLOYEEID");
                    this.OnEMPLOYEEIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for EMPLOYEENAME in the schema.
        /// </summary>
        [Column(Name = @"EMPLOYEE_NAME", Storage = "_EMPLOYEENAME", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string EMPLOYEENAME
        {
            get
            {
                return this._EMPLOYEENAME;
            }
            set
            {
                if (this._EMPLOYEENAME != value)
                {
                    this.OnEMPLOYEENAMEChanging(value);
                    this.SendPropertyChanging("EMPLOYEENAME");
                    this._EMPLOYEENAME = value;
                    this.SendPropertyChanged("EMPLOYEENAME");
                    this.OnEMPLOYEENAMEChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for BiensiPosDbContext.Color in the schema.
    /// </summary>
    [Table(Name = @"biensi_pos_db.color")]
    public partial class Color : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private long _Id = 0;

        private string _CODE = @"-";

        private string _DESCRIPTION = @"-";
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(long value);
        partial void OnIdChanged();
        partial void OnCODEChanging(string value);
        partial void OnCODEChanged();
        partial void OnDESCRIPTIONChanging(string value);
        partial void OnDESCRIPTIONChanged();
        #endregion

        public Color()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [Column(Name = @"`_id`", Storage = "_Id", CanBeNull = false, DbType = "BIGINT(20) NOT NULL", IsPrimaryKey = true)]
        public long Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging("Id");
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CODE in the schema.
        /// </summary>
        [Column(Storage = "_CODE", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string CODE
        {
            get
            {
                return this._CODE;
            }
            set
            {
                if (this._CODE != value)
                {
                    this.OnCODEChanging(value);
                    this.SendPropertyChanging("CODE");
                    this._CODE = value;
                    this.SendPropertyChanged("CODE");
                    this.OnCODEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DESCRIPTION in the schema.
        /// </summary>
        [Column(Storage = "_DESCRIPTION", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string DESCRIPTION
        {
            get
            {
                return this._DESCRIPTION;
            }
            set
            {
                if (this._DESCRIPTION != value)
                {
                    this.OnDESCRIPTIONChanging(value);
                    this.SendPropertyChanging("DESCRIPTION");
                    this._DESCRIPTION = value;
                    this.SendPropertyChanged("DESCRIPTION");
                    this.OnDESCRIPTIONChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for BiensiPosDbContext.Costcategory in the schema.
    /// </summary>
    [Table(Name = @"biensi_pos_db.costcategory")]
    public partial class Costcategory : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private long _Id = 0;

        private string _COSTCATEGORYID = @"-";

        private string _NAME = @"-";

        private string _COA = @"-";
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(long value);
        partial void OnIdChanged();
        partial void OnCOSTCATEGORYIDChanging(string value);
        partial void OnCOSTCATEGORYIDChanged();
        partial void OnNAMEChanging(string value);
        partial void OnNAMEChanged();
        partial void OnCOAChanging(string value);
        partial void OnCOAChanged();
        #endregion

        public Costcategory()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [Column(Name = @"`_id`", Storage = "_Id", CanBeNull = false, DbType = "BIGINT(20) NOT NULL", IsPrimaryKey = true)]
        public long Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging("Id");
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for COSTCATEGORYID in the schema.
        /// </summary>
        [Column(Name = @"COST_CATEGORY_ID", Storage = "_COSTCATEGORYID", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string COSTCATEGORYID
        {
            get
            {
                return this._COSTCATEGORYID;
            }
            set
            {
                if (this._COSTCATEGORYID != value)
                {
                    this.OnCOSTCATEGORYIDChanging(value);
                    this.SendPropertyChanging("COSTCATEGORYID");
                    this._COSTCATEGORYID = value;
                    this.SendPropertyChanged("COSTCATEGORYID");
                    this.OnCOSTCATEGORYIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NAME in the schema.
        /// </summary>
        [Column(Storage = "_NAME", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string NAME
        {
            get
            {
                return this._NAME;
            }
            set
            {
                if (this._NAME != value)
                {
                    this.OnNAMEChanging(value);
                    this.SendPropertyChanging("NAME");
                    this._NAME = value;
                    this.SendPropertyChanged("NAME");
                    this.OnNAMEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for COA in the schema.
        /// </summary>
        [Column(Storage = "_COA", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string COA
        {
            get
            {
                return this._COA;
            }
            set
            {
                if (this._COA != value)
                {
                    this.OnCOAChanging(value);
                    this.SendPropertyChanging("COA");
                    this._COA = value;
                    this.SendPropertyChanged("COA");
                    this.OnCOAChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for BiensiPosDbContext.Currency in the schema.
    /// </summary>
    [Table(Name = @"biensi_pos_db.currency")]
    public partial class Currency : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private long _Id = 0;

        private string _SIGN = @"-";

        private string _NAME = @"-";
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(long value);
        partial void OnIdChanged();
        partial void OnSIGNChanging(string value);
        partial void OnSIGNChanged();
        partial void OnNAMEChanging(string value);
        partial void OnNAMEChanged();
        #endregion

        public Currency()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [Column(Name = @"`_id`", Storage = "_Id", CanBeNull = false, DbType = "BIGINT(20) NOT NULL", IsPrimaryKey = true)]
        public long Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging("Id");
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for SIGN in the schema.
        /// </summary>
        [Column(Storage = "_SIGN", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string SIGN
        {
            get
            {
                return this._SIGN;
            }
            set
            {
                if (this._SIGN != value)
                {
                    this.OnSIGNChanging(value);
                    this.SendPropertyChanging("SIGN");
                    this._SIGN = value;
                    this.SendPropertyChanged("SIGN");
                    this.OnSIGNChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NAME in the schema.
        /// </summary>
        [Column(Storage = "_NAME", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string NAME
        {
            get
            {
                return this._NAME;
            }
            set
            {
                if (this._NAME != value)
                {
                    this.OnNAMEChanging(value);
                    this.SendPropertyChanging("NAME");
                    this._NAME = value;
                    this.SendPropertyChanged("NAME");
                    this.OnNAMEChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for BiensiPosDbContext.Customer in the schema.
    /// </summary>
    [Table(Name = @"biensi_pos_db.customer")]
    public partial class Customer
    {
        #pragma warning disable 0649

        private int _Id = 0;

        private string _CustId = @"-";

        private string _Name = @"-";

        private int _CustGroupId = 0;

        private string _Address = @"-";

        private string _Address2 = @"-";

        private string _Address3 = @"-";

        private string _Address4 = @"-";

        private string _Email = @"-";

        private string _PhoneNumber = @"-";

        private int _StoreId = 0;

        private string _DefaultCurr = @"-";
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnCustIdChanging(string value);
        partial void OnCustIdChanged();
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        partial void OnCustGroupIdChanging(int value);
        partial void OnCustGroupIdChanged();
        partial void OnAddressChanging(string value);
        partial void OnAddressChanged();
        partial void OnAddress2Changing(string value);
        partial void OnAddress2Changed();
        partial void OnAddress3Changing(string value);
        partial void OnAddress3Changed();
        partial void OnAddress4Changing(string value);
        partial void OnAddress4Changed();
        partial void OnEmailChanging(string value);
        partial void OnEmailChanged();
        partial void OnPhoneNumberChanging(string value);
        partial void OnPhoneNumberChanged();
        partial void OnStoreIdChanging(int value);
        partial void OnStoreIdChanged();
        partial void OnDefaultCurrChanging(string value);
        partial void OnDefaultCurrChanged();
        #endregion

        public Customer()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [Column(Storage = "_Id", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this._Id = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CustId in the schema.
        /// </summary>
        [Column(Storage = "_CustId", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string CustId
        {
            get
            {
                return this._CustId;
            }
            set
            {
                if (this._CustId != value)
                {
                    this._CustId = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Name in the schema.
        /// </summary>
        [Column(Storage = "_Name", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                if (this._Name != value)
                {
                    this._Name = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CustGroupId in the schema.
        /// </summary>
        [Column(Storage = "_CustGroupId", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int CustGroupId
        {
            get
            {
                return this._CustGroupId;
            }
            set
            {
                if (this._CustGroupId != value)
                {
                    this._CustGroupId = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Address in the schema.
        /// </summary>
        [Column(Storage = "_Address", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string Address
        {
            get
            {
                return this._Address;
            }
            set
            {
                if (this._Address != value)
                {
                    this._Address = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Address2 in the schema.
        /// </summary>
        [Column(Storage = "_Address2", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string Address2
        {
            get
            {
                return this._Address2;
            }
            set
            {
                if (this._Address2 != value)
                {
                    this._Address2 = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Address3 in the schema.
        /// </summary>
        [Column(Storage = "_Address3", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string Address3
        {
            get
            {
                return this._Address3;
            }
            set
            {
                if (this._Address3 != value)
                {
                    this._Address3 = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Address4 in the schema.
        /// </summary>
        [Column(Storage = "_Address4", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string Address4
        {
            get
            {
                return this._Address4;
            }
            set
            {
                if (this._Address4 != value)
                {
                    this._Address4 = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Email in the schema.
        /// </summary>
        [Column(Storage = "_Email", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string Email
        {
            get
            {
                return this._Email;
            }
            set
            {
                if (this._Email != value)
                {
                    this._Email = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PhoneNumber in the schema.
        /// </summary>
        [Column(Storage = "_PhoneNumber", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string PhoneNumber
        {
            get
            {
                return this._PhoneNumber;
            }
            set
            {
                if (this._PhoneNumber != value)
                {
                    this._PhoneNumber = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for StoreId in the schema.
        /// </summary>
        [Column(Storage = "_StoreId", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int StoreId
        {
            get
            {
                return this._StoreId;
            }
            set
            {
                if (this._StoreId != value)
                {
                    this._StoreId = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DefaultCurr in the schema.
        /// </summary>
        [Column(Storage = "_DefaultCurr", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string DefaultCurr
        {
            get
            {
                return this._DefaultCurr;
            }
            set
            {
                if (this._DefaultCurr != value)
                {
                    this._DefaultCurr = value;
                }
            }
        }
    }

    /// <summary>
    /// There are no comments for BiensiPosDbContext.CustomerGroup in the schema.
    /// </summary>
    [Table(Name = @"biensi_pos_db.customer_group")]
    public partial class CustomerGroup
    {
        #pragma warning disable 0649

        private long _Id = 0;

        private string _CODE = @"-";

        private string _DESCRIPTION = @"-";
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(long value);
        partial void OnIdChanged();
        partial void OnCODEChanging(string value);
        partial void OnCODEChanged();
        partial void OnDESCRIPTIONChanging(string value);
        partial void OnDESCRIPTIONChanged();
        #endregion

        public CustomerGroup()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [Column(Name = @"`_id`", Storage = "_Id", CanBeNull = false, DbType = "BIGINT(20) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public long Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this._Id = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CODE in the schema.
        /// </summary>
        [Column(Storage = "_CODE", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string CODE
        {
            get
            {
                return this._CODE;
            }
            set
            {
                if (this._CODE != value)
                {
                    this._CODE = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DESCRIPTION in the schema.
        /// </summary>
        [Column(Storage = "_DESCRIPTION", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string DESCRIPTION
        {
            get
            {
                return this._DESCRIPTION;
            }
            set
            {
                if (this._DESCRIPTION != value)
                {
                    this._DESCRIPTION = value;
                }
            }
        }
    }

    /// <summary>
    /// There are no comments for BiensiPosDbContext.Deliveryorder in the schema.
    /// </summary>
    [Table(Name = @"biensi_pos_db.deliveryorder")]
    public partial class Deliveryorder : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private long _Id = 0;

        private string _DELIVERYORDERID = @"-";

        private string _STORECODE = @"-";

        private string _WAREHOUSEFROM = @"-";

        private string _WAREHOUSETO = @"-";

        private string _DELIVERYDATE = @"-";

        private string _DELIVERYTIME = @"-";

        private string _TOTALQTY = @"0";

        private int _STATUS = 0;

        private string _DATE = @"-";

        private string _TIME = @"-";

        private System.DateTime _TIMESTAMP = DateTime.Now;

        private int _STATUSAPI = 0;

        private string _CUSTIDSTORE = @"-";

        private string _TOTALAMOUNT = @"0";

        private string _EMPLOYEEID = @"-";

        private string _EMPLOYEENAME = @"-";
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(long value);
        partial void OnIdChanged();
        partial void OnDELIVERYORDERIDChanging(string value);
        partial void OnDELIVERYORDERIDChanged();
        partial void OnSTORECODEChanging(string value);
        partial void OnSTORECODEChanged();
        partial void OnWAREHOUSEFROMChanging(string value);
        partial void OnWAREHOUSEFROMChanged();
        partial void OnWAREHOUSETOChanging(string value);
        partial void OnWAREHOUSETOChanged();
        partial void OnDELIVERYDATEChanging(string value);
        partial void OnDELIVERYDATEChanged();
        partial void OnDELIVERYTIMEChanging(string value);
        partial void OnDELIVERYTIMEChanged();
        partial void OnTOTALQTYChanging(string value);
        partial void OnTOTALQTYChanged();
        partial void OnSTATUSChanging(int value);
        partial void OnSTATUSChanged();
        partial void OnDATEChanging(string value);
        partial void OnDATEChanged();
        partial void OnTIMEChanging(string value);
        partial void OnTIMEChanged();
        partial void OnTIMESTAMPChanging(System.DateTime value);
        partial void OnTIMESTAMPChanged();
        partial void OnSTATUSAPIChanging(int value);
        partial void OnSTATUSAPIChanged();
        partial void OnCUSTIDSTOREChanging(string value);
        partial void OnCUSTIDSTOREChanged();
        partial void OnTOTALAMOUNTChanging(string value);
        partial void OnTOTALAMOUNTChanged();
        partial void OnEMPLOYEEIDChanging(string value);
        partial void OnEMPLOYEEIDChanged();
        partial void OnEMPLOYEENAMEChanging(string value);
        partial void OnEMPLOYEENAMEChanged();
        #endregion

        public Deliveryorder()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [Column(Name = @"`_id`", Storage = "_Id", CanBeNull = false, DbType = "BIGINT(20) NOT NULL", IsPrimaryKey = true)]
        public long Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging("Id");
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DELIVERYORDERID in the schema.
        /// </summary>
        [Column(Name = @"DELIVERY_ORDER_ID", Storage = "_DELIVERYORDERID", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string DELIVERYORDERID
        {
            get
            {
                return this._DELIVERYORDERID;
            }
            set
            {
                if (this._DELIVERYORDERID != value)
                {
                    this.OnDELIVERYORDERIDChanging(value);
                    this.SendPropertyChanging("DELIVERYORDERID");
                    this._DELIVERYORDERID = value;
                    this.SendPropertyChanged("DELIVERYORDERID");
                    this.OnDELIVERYORDERIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for STORECODE in the schema.
        /// </summary>
        [Column(Name = @"STORE_CODE", Storage = "_STORECODE", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string STORECODE
        {
            get
            {
                return this._STORECODE;
            }
            set
            {
                if (this._STORECODE != value)
                {
                    this.OnSTORECODEChanging(value);
                    this.SendPropertyChanging("STORECODE");
                    this._STORECODE = value;
                    this.SendPropertyChanged("STORECODE");
                    this.OnSTORECODEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for WAREHOUSEFROM in the schema.
        /// </summary>
        [Column(Name = @"WAREHOUSE_FROM", Storage = "_WAREHOUSEFROM", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string WAREHOUSEFROM
        {
            get
            {
                return this._WAREHOUSEFROM;
            }
            set
            {
                if (this._WAREHOUSEFROM != value)
                {
                    this.OnWAREHOUSEFROMChanging(value);
                    this.SendPropertyChanging("WAREHOUSEFROM");
                    this._WAREHOUSEFROM = value;
                    this.SendPropertyChanged("WAREHOUSEFROM");
                    this.OnWAREHOUSEFROMChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for WAREHOUSETO in the schema.
        /// </summary>
        [Column(Name = @"WAREHOUSE_TO", Storage = "_WAREHOUSETO", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string WAREHOUSETO
        {
            get
            {
                return this._WAREHOUSETO;
            }
            set
            {
                if (this._WAREHOUSETO != value)
                {
                    this.OnWAREHOUSETOChanging(value);
                    this.SendPropertyChanging("WAREHOUSETO");
                    this._WAREHOUSETO = value;
                    this.SendPropertyChanged("WAREHOUSETO");
                    this.OnWAREHOUSETOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DELIVERYDATE in the schema.
        /// </summary>
        [Column(Name = @"DELIVERY_DATE", Storage = "_DELIVERYDATE", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string DELIVERYDATE
        {
            get
            {
                return this._DELIVERYDATE;
            }
            set
            {
                if (this._DELIVERYDATE != value)
                {
                    this.OnDELIVERYDATEChanging(value);
                    this.SendPropertyChanging("DELIVERYDATE");
                    this._DELIVERYDATE = value;
                    this.SendPropertyChanged("DELIVERYDATE");
                    this.OnDELIVERYDATEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DELIVERYTIME in the schema.
        /// </summary>
        [Column(Name = @"DELIVERY_TIME", Storage = "_DELIVERYTIME", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string DELIVERYTIME
        {
            get
            {
                return this._DELIVERYTIME;
            }
            set
            {
                if (this._DELIVERYTIME != value)
                {
                    this.OnDELIVERYTIMEChanging(value);
                    this.SendPropertyChanging("DELIVERYTIME");
                    this._DELIVERYTIME = value;
                    this.SendPropertyChanged("DELIVERYTIME");
                    this.OnDELIVERYTIMEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TOTALQTY in the schema.
        /// </summary>
        [Column(Name = @"TOTAL_QTY", Storage = "_TOTALQTY", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string TOTALQTY
        {
            get
            {
                return this._TOTALQTY;
            }
            set
            {
                if (this._TOTALQTY != value)
                {
                    this.OnTOTALQTYChanging(value);
                    this.SendPropertyChanging("TOTALQTY");
                    this._TOTALQTY = value;
                    this.SendPropertyChanged("TOTALQTY");
                    this.OnTOTALQTYChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for STATUS in the schema.
        /// </summary>
        [Column(Storage = "_STATUS", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int STATUS
        {
            get
            {
                return this._STATUS;
            }
            set
            {
                if (this._STATUS != value)
                {
                    this.OnSTATUSChanging(value);
                    this.SendPropertyChanging("STATUS");
                    this._STATUS = value;
                    this.SendPropertyChanged("STATUS");
                    this.OnSTATUSChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DATE in the schema.
        /// </summary>
        [Column(Name = @"`DATE`", Storage = "_DATE", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string DATE
        {
            get
            {
                return this._DATE;
            }
            set
            {
                if (this._DATE != value)
                {
                    this.OnDATEChanging(value);
                    this.SendPropertyChanging("DATE");
                    this._DATE = value;
                    this.SendPropertyChanged("DATE");
                    this.OnDATEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TIME in the schema.
        /// </summary>
        [Column(Name = @"`TIME`", Storage = "_TIME", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string TIME
        {
            get
            {
                return this._TIME;
            }
            set
            {
                if (this._TIME != value)
                {
                    this.OnTIMEChanging(value);
                    this.SendPropertyChanging("TIME");
                    this._TIME = value;
                    this.SendPropertyChanged("TIME");
                    this.OnTIMEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TIMESTAMP in the schema.
        /// </summary>
        [Column(Name = @"TIME_STAMP", Storage = "_TIMESTAMP", CanBeNull = false, DbType = "TIMESTAMP NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public System.DateTime TIMESTAMP
        {
            get
            {
                return this._TIMESTAMP;
            }
            set
            {
                if (this._TIMESTAMP != value)
                {
                    this.OnTIMESTAMPChanging(value);
                    this.SendPropertyChanging("TIMESTAMP");
                    this._TIMESTAMP = value;
                    this.SendPropertyChanged("TIMESTAMP");
                    this.OnTIMESTAMPChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for STATUSAPI in the schema.
        /// </summary>
        [Column(Name = @"STATUS_API", Storage = "_STATUSAPI", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int STATUSAPI
        {
            get
            {
                return this._STATUSAPI;
            }
            set
            {
                if (this._STATUSAPI != value)
                {
                    this.OnSTATUSAPIChanging(value);
                    this.SendPropertyChanging("STATUSAPI");
                    this._STATUSAPI = value;
                    this.SendPropertyChanged("STATUSAPI");
                    this.OnSTATUSAPIChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CUSTIDSTORE in the schema.
        /// </summary>
        [Column(Name = @"CUST_ID_STORE", Storage = "_CUSTIDSTORE", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string CUSTIDSTORE
        {
            get
            {
                return this._CUSTIDSTORE;
            }
            set
            {
                if (this._CUSTIDSTORE != value)
                {
                    this.OnCUSTIDSTOREChanging(value);
                    this.SendPropertyChanging("CUSTIDSTORE");
                    this._CUSTIDSTORE = value;
                    this.SendPropertyChanged("CUSTIDSTORE");
                    this.OnCUSTIDSTOREChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TOTALAMOUNT in the schema.
        /// </summary>
        [Column(Name = @"TOTAL_AMOUNT", Storage = "_TOTALAMOUNT", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string TOTALAMOUNT
        {
            get
            {
                return this._TOTALAMOUNT;
            }
            set
            {
                if (this._TOTALAMOUNT != value)
                {
                    this.OnTOTALAMOUNTChanging(value);
                    this.SendPropertyChanging("TOTALAMOUNT");
                    this._TOTALAMOUNT = value;
                    this.SendPropertyChanged("TOTALAMOUNT");
                    this.OnTOTALAMOUNTChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for EMPLOYEEID in the schema.
        /// </summary>
        [Column(Name = @"EMPLOYEE_ID", Storage = "_EMPLOYEEID", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string EMPLOYEEID
        {
            get
            {
                return this._EMPLOYEEID;
            }
            set
            {
                if (this._EMPLOYEEID != value)
                {
                    this.OnEMPLOYEEIDChanging(value);
                    this.SendPropertyChanging("EMPLOYEEID");
                    this._EMPLOYEEID = value;
                    this.SendPropertyChanged("EMPLOYEEID");
                    this.OnEMPLOYEEIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for EMPLOYEENAME in the schema.
        /// </summary>
        [Column(Name = @"EMPLOYEE_NAME", Storage = "_EMPLOYEENAME", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string EMPLOYEENAME
        {
            get
            {
                return this._EMPLOYEENAME;
            }
            set
            {
                if (this._EMPLOYEENAME != value)
                {
                    this.OnEMPLOYEENAMEChanging(value);
                    this.SendPropertyChanging("EMPLOYEENAME");
                    this._EMPLOYEENAME = value;
                    this.SendPropertyChanged("EMPLOYEENAME");
                    this.OnEMPLOYEENAMEChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for BiensiPosDbContext.DeliveryorderLine in the schema.
    /// </summary>
    [Table(Name = @"biensi_pos_db.deliveryorder_line")]
    public partial class DeliveryorderLine : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private long _Id = 0;

        private string _DELIVERYORDERID = @"-";

        private string _ARTICLEID = @"-";

        private int _QTYDELIVER = 0;

        private int _QTYRECEIVE = 0;

        private int _QTYDISPUTE = 0;

        private int _AMOUNT = 0;

        private string _PACKINGNUMBER = @"-";
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(long value);
        partial void OnIdChanged();
        partial void OnDELIVERYORDERIDChanging(string value);
        partial void OnDELIVERYORDERIDChanged();
        partial void OnARTICLEIDChanging(string value);
        partial void OnARTICLEIDChanged();
        partial void OnQTYDELIVERChanging(int value);
        partial void OnQTYDELIVERChanged();
        partial void OnQTYRECEIVEChanging(int value);
        partial void OnQTYRECEIVEChanged();
        partial void OnQTYDISPUTEChanging(int value);
        partial void OnQTYDISPUTEChanged();
        partial void OnAMOUNTChanging(int value);
        partial void OnAMOUNTChanged();
        partial void OnPACKINGNUMBERChanging(string value);
        partial void OnPACKINGNUMBERChanged();
        #endregion

        public DeliveryorderLine()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [Column(Name = @"`_id`", Storage = "_Id", CanBeNull = false, DbType = "BIGINT(20) NOT NULL", IsPrimaryKey = true)]
        public long Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging("Id");
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DELIVERYORDERID in the schema.
        /// </summary>
        [Column(Name = @"DELIVERY_ORDER_ID", Storage = "_DELIVERYORDERID", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string DELIVERYORDERID
        {
            get
            {
                return this._DELIVERYORDERID;
            }
            set
            {
                if (this._DELIVERYORDERID != value)
                {
                    this.OnDELIVERYORDERIDChanging(value);
                    this.SendPropertyChanging("DELIVERYORDERID");
                    this._DELIVERYORDERID = value;
                    this.SendPropertyChanged("DELIVERYORDERID");
                    this.OnDELIVERYORDERIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ARTICLEID in the schema.
        /// </summary>
        [Column(Name = @"ARTICLE_ID", Storage = "_ARTICLEID", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string ARTICLEID
        {
            get
            {
                return this._ARTICLEID;
            }
            set
            {
                if (this._ARTICLEID != value)
                {
                    this.OnARTICLEIDChanging(value);
                    this.SendPropertyChanging("ARTICLEID");
                    this._ARTICLEID = value;
                    this.SendPropertyChanged("ARTICLEID");
                    this.OnARTICLEIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for QTYDELIVER in the schema.
        /// </summary>
        [Column(Name = @"QTY_DELIVER", Storage = "_QTYDELIVER", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int QTYDELIVER
        {
            get
            {
                return this._QTYDELIVER;
            }
            set
            {
                if (this._QTYDELIVER != value)
                {
                    this.OnQTYDELIVERChanging(value);
                    this.SendPropertyChanging("QTYDELIVER");
                    this._QTYDELIVER = value;
                    this.SendPropertyChanged("QTYDELIVER");
                    this.OnQTYDELIVERChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for QTYRECEIVE in the schema.
        /// </summary>
        [Column(Name = @"QTY_RECEIVE", Storage = "_QTYRECEIVE", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int QTYRECEIVE
        {
            get
            {
                return this._QTYRECEIVE;
            }
            set
            {
                if (this._QTYRECEIVE != value)
                {
                    this.OnQTYRECEIVEChanging(value);
                    this.SendPropertyChanging("QTYRECEIVE");
                    this._QTYRECEIVE = value;
                    this.SendPropertyChanged("QTYRECEIVE");
                    this.OnQTYRECEIVEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for QTYDISPUTE in the schema.
        /// </summary>
        [Column(Name = @"QTY_DISPUTE", Storage = "_QTYDISPUTE", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int QTYDISPUTE
        {
            get
            {
                return this._QTYDISPUTE;
            }
            set
            {
                if (this._QTYDISPUTE != value)
                {
                    this.OnQTYDISPUTEChanging(value);
                    this.SendPropertyChanging("QTYDISPUTE");
                    this._QTYDISPUTE = value;
                    this.SendPropertyChanged("QTYDISPUTE");
                    this.OnQTYDISPUTEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for AMOUNT in the schema.
        /// </summary>
        [Column(Storage = "_AMOUNT", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int AMOUNT
        {
            get
            {
                return this._AMOUNT;
            }
            set
            {
                if (this._AMOUNT != value)
                {
                    this.OnAMOUNTChanging(value);
                    this.SendPropertyChanging("AMOUNT");
                    this._AMOUNT = value;
                    this.SendPropertyChanged("AMOUNT");
                    this.OnAMOUNTChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PACKINGNUMBER in the schema.
        /// </summary>
        [Column(Name = @"PACKING_NUMBER", Storage = "_PACKINGNUMBER", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string PACKINGNUMBER
        {
            get
            {
                return this._PACKINGNUMBER;
            }
            set
            {
                if (this._PACKINGNUMBER != value)
                {
                    this.OnPACKINGNUMBERChanging(value);
                    this.SendPropertyChanging("PACKINGNUMBER");
                    this._PACKINGNUMBER = value;
                    this.SendPropertyChanged("PACKINGNUMBER");
                    this.OnPACKINGNUMBERChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for BiensiPosDbContext.Denomination in the schema.
    /// </summary>
    [Table(Name = @"biensi_pos_db.denomination")]
    public partial class Denomination : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private long _Id;

        private long _CURRENCYIDFK = 0;

        private long _NOMINAL = 0;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(long value);
        partial void OnIdChanged();
        partial void OnCURRENCYIDFKChanging(long value);
        partial void OnCURRENCYIDFKChanged();
        partial void OnNOMINALChanging(long value);
        partial void OnNOMINALChanged();
        #endregion

        public Denomination()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [Column(Name = @"`_id`", Storage = "_Id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "BIGINT(20) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
        public long Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging("Id");
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CURRENCYIDFK in the schema.
        /// </summary>
        [Column(Name = @"CURRENCY_ID_FK", Storage = "_CURRENCYIDFK", CanBeNull = false, DbType = "BIGINT(20) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public long CURRENCYIDFK
        {
            get
            {
                return this._CURRENCYIDFK;
            }
            set
            {
                if (this._CURRENCYIDFK != value)
                {
                    this.OnCURRENCYIDFKChanging(value);
                    this.SendPropertyChanging("CURRENCYIDFK");
                    this._CURRENCYIDFK = value;
                    this.SendPropertyChanged("CURRENCYIDFK");
                    this.OnCURRENCYIDFKChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NOMINAL in the schema.
        /// </summary>
        [Column(Storage = "_NOMINAL", CanBeNull = false, DbType = "BIGINT(20) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public long NOMINAL
        {
            get
            {
                return this._NOMINAL;
            }
            set
            {
                if (this._NOMINAL != value)
                {
                    this.OnNOMINALChanging(value);
                    this.SendPropertyChanging("NOMINAL");
                    this._NOMINAL = value;
                    this.SendPropertyChanged("NOMINAL");
                    this.OnNOMINALChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for BiensiPosDbContext.Departement in the schema.
    /// </summary>
    [Table(Name = @"biensi_pos_db.departement")]
    public partial class Departement : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private int _Id = 0;

        private string _CODE = @"-";

        private string _DESCRIPTION;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnCODEChanging(string value);
        partial void OnCODEChanged();
        partial void OnDESCRIPTIONChanging(string value);
        partial void OnDESCRIPTIONChanged();
        #endregion

        public Departement()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [Column(Name = @"`_id`", Storage = "_Id", CanBeNull = false, DbType = "INT(11) NOT NULL", IsPrimaryKey = true)]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging("Id");
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CODE in the schema.
        /// </summary>
        [Column(Storage = "_CODE", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string CODE
        {
            get
            {
                return this._CODE;
            }
            set
            {
                if (this._CODE != value)
                {
                    this.OnCODEChanging(value);
                    this.SendPropertyChanging("CODE");
                    this._CODE = value;
                    this.SendPropertyChanged("CODE");
                    this.OnCODEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DESCRIPTION in the schema.
        /// </summary>
        [Column(Storage = "_DESCRIPTION", CanBeNull = false, DbType = "TEXT NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string DESCRIPTION
        {
            get
            {
                return this._DESCRIPTION;
            }
            set
            {
                if (this._DESCRIPTION != value)
                {
                    this.OnDESCRIPTIONChanging(value);
                    this.SendPropertyChanging("DESCRIPTION");
                    this._DESCRIPTION = value;
                    this.SendPropertyChanged("DESCRIPTION");
                    this.OnDESCRIPTIONChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for BiensiPosDbContext.Departementtype in the schema.
    /// </summary>
    [Table(Name = @"biensi_pos_db.departementtype")]
    public partial class Departementtype : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private int _Id = 0;

        private string _CODE = @"-";

        private string _DESCRIPTION = @"-";
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnCODEChanging(string value);
        partial void OnCODEChanged();
        partial void OnDESCRIPTIONChanging(string value);
        partial void OnDESCRIPTIONChanged();
        #endregion

        public Departementtype()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [Column(Name = @"`_id`", Storage = "_Id", CanBeNull = false, DbType = "INT(11) NOT NULL", IsPrimaryKey = true)]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging("Id");
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CODE in the schema.
        /// </summary>
        [Column(Storage = "_CODE", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string CODE
        {
            get
            {
                return this._CODE;
            }
            set
            {
                if (this._CODE != value)
                {
                    this.OnCODEChanging(value);
                    this.SendPropertyChanging("CODE");
                    this._CODE = value;
                    this.SendPropertyChanged("CODE");
                    this.OnCODEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DESCRIPTION in the schema.
        /// </summary>
        [Column(Storage = "_DESCRIPTION", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string DESCRIPTION
        {
            get
            {
                return this._DESCRIPTION;
            }
            set
            {
                if (this._DESCRIPTION != value)
                {
                    this.OnDESCRIPTIONChanging(value);
                    this.SendPropertyChanging("DESCRIPTION");
                    this._DESCRIPTION = value;
                    this.SendPropertyChanged("DESCRIPTION");
                    this.OnDESCRIPTIONChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for BiensiPosDbContext.DiscountItem in the schema.
    /// </summary>
    [Table(Name = @"biensi_pos_db.discount_item")]
    public partial class DiscountItem : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private long _ID;

        private long _Id = 0;

        private string _ARTICLEID = @"-";

        private string _ARTICLENAME = @"-";

        private string _BRAND = @"-";

        private string _GENDER = @"-";

        private string _DEPARTMENT = @"-";

        private string _DEPARTMENTTYPE = @"-";

        private string _SIZE = @"-";

        private string _COLOR = @"-";

        private string _UNIT = @"-";

        private double _PRICE = 0;

        private string _DISCOUNTCODE = @"-";
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIDChanging(long value);
        partial void OnIDChanged();
        partial void OnIdChanging(long value);
        partial void OnIdChanged();
        partial void OnARTICLEIDChanging(string value);
        partial void OnARTICLEIDChanged();
        partial void OnARTICLENAMEChanging(string value);
        partial void OnARTICLENAMEChanged();
        partial void OnBRANDChanging(string value);
        partial void OnBRANDChanged();
        partial void OnGENDERChanging(string value);
        partial void OnGENDERChanged();
        partial void OnDEPARTMENTChanging(string value);
        partial void OnDEPARTMENTChanged();
        partial void OnDEPARTMENTTYPEChanging(string value);
        partial void OnDEPARTMENTTYPEChanged();
        partial void OnSIZEChanging(string value);
        partial void OnSIZEChanged();
        partial void OnCOLORChanging(string value);
        partial void OnCOLORChanged();
        partial void OnUNITChanging(string value);
        partial void OnUNITChanged();
        partial void OnPRICEChanging(double value);
        partial void OnPRICEChanged();
        partial void OnDISCOUNTCODEChanging(string value);
        partial void OnDISCOUNTCODEChanged();
        #endregion

        public DiscountItem()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for ID in the schema.
        /// </summary>
        [Column(Storage = "_ID", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "BIGINT(20) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
        public long ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if (this._ID != value)
                {
                    this.OnIDChanging(value);
                    this.SendPropertyChanging("ID");
                    this._ID = value;
                    this.SendPropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [Column(Name = @"`_id`", Storage = "_Id", CanBeNull = false, DbType = "BIGINT(20) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public long Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging("Id");
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ARTICLEID in the schema.
        /// </summary>
        [Column(Name = @"ARTICLE_ID", Storage = "_ARTICLEID", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string ARTICLEID
        {
            get
            {
                return this._ARTICLEID;
            }
            set
            {
                if (this._ARTICLEID != value)
                {
                    this.OnARTICLEIDChanging(value);
                    this.SendPropertyChanging("ARTICLEID");
                    this._ARTICLEID = value;
                    this.SendPropertyChanged("ARTICLEID");
                    this.OnARTICLEIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ARTICLENAME in the schema.
        /// </summary>
        [Column(Name = @"ARTICLE_NAME", Storage = "_ARTICLENAME", CanBeNull = false, DbType = "VARCHAR(300) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string ARTICLENAME
        {
            get
            {
                return this._ARTICLENAME;
            }
            set
            {
                if (this._ARTICLENAME != value)
                {
                    this.OnARTICLENAMEChanging(value);
                    this.SendPropertyChanging("ARTICLENAME");
                    this._ARTICLENAME = value;
                    this.SendPropertyChanged("ARTICLENAME");
                    this.OnARTICLENAMEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for BRAND in the schema.
        /// </summary>
        [Column(Storage = "_BRAND", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string BRAND
        {
            get
            {
                return this._BRAND;
            }
            set
            {
                if (this._BRAND != value)
                {
                    this.OnBRANDChanging(value);
                    this.SendPropertyChanging("BRAND");
                    this._BRAND = value;
                    this.SendPropertyChanged("BRAND");
                    this.OnBRANDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for GENDER in the schema.
        /// </summary>
        [Column(Storage = "_GENDER", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string GENDER
        {
            get
            {
                return this._GENDER;
            }
            set
            {
                if (this._GENDER != value)
                {
                    this.OnGENDERChanging(value);
                    this.SendPropertyChanging("GENDER");
                    this._GENDER = value;
                    this.SendPropertyChanged("GENDER");
                    this.OnGENDERChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DEPARTMENT in the schema.
        /// </summary>
        [Column(Storage = "_DEPARTMENT", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string DEPARTMENT
        {
            get
            {
                return this._DEPARTMENT;
            }
            set
            {
                if (this._DEPARTMENT != value)
                {
                    this.OnDEPARTMENTChanging(value);
                    this.SendPropertyChanging("DEPARTMENT");
                    this._DEPARTMENT = value;
                    this.SendPropertyChanged("DEPARTMENT");
                    this.OnDEPARTMENTChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DEPARTMENTTYPE in the schema.
        /// </summary>
        [Column(Name = @"DEPARTMENT_TYPE", Storage = "_DEPARTMENTTYPE", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string DEPARTMENTTYPE
        {
            get
            {
                return this._DEPARTMENTTYPE;
            }
            set
            {
                if (this._DEPARTMENTTYPE != value)
                {
                    this.OnDEPARTMENTTYPEChanging(value);
                    this.SendPropertyChanging("DEPARTMENTTYPE");
                    this._DEPARTMENTTYPE = value;
                    this.SendPropertyChanged("DEPARTMENTTYPE");
                    this.OnDEPARTMENTTYPEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for SIZE in the schema.
        /// </summary>
        [Column(Storage = "_SIZE", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string SIZE
        {
            get
            {
                return this._SIZE;
            }
            set
            {
                if (this._SIZE != value)
                {
                    this.OnSIZEChanging(value);
                    this.SendPropertyChanging("SIZE");
                    this._SIZE = value;
                    this.SendPropertyChanged("SIZE");
                    this.OnSIZEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for COLOR in the schema.
        /// </summary>
        [Column(Storage = "_COLOR", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string COLOR
        {
            get
            {
                return this._COLOR;
            }
            set
            {
                if (this._COLOR != value)
                {
                    this.OnCOLORChanging(value);
                    this.SendPropertyChanging("COLOR");
                    this._COLOR = value;
                    this.SendPropertyChanged("COLOR");
                    this.OnCOLORChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for UNIT in the schema.
        /// </summary>
        [Column(Storage = "_UNIT", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string UNIT
        {
            get
            {
                return this._UNIT;
            }
            set
            {
                if (this._UNIT != value)
                {
                    this.OnUNITChanging(value);
                    this.SendPropertyChanging("UNIT");
                    this._UNIT = value;
                    this.SendPropertyChanged("UNIT");
                    this.OnUNITChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PRICE in the schema.
        /// </summary>
        [Column(Storage = "_PRICE", CanBeNull = false, DbType = "DOUBLE NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public double PRICE
        {
            get
            {
                return this._PRICE;
            }
            set
            {
                if (this._PRICE != value)
                {
                    this.OnPRICEChanging(value);
                    this.SendPropertyChanging("PRICE");
                    this._PRICE = value;
                    this.SendPropertyChanged("PRICE");
                    this.OnPRICEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DISCOUNTCODE in the schema.
        /// </summary>
        [Column(Name = @"DISCOUNT_CODE", Storage = "_DISCOUNTCODE", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string DISCOUNTCODE
        {
            get
            {
                return this._DISCOUNTCODE;
            }
            set
            {
                if (this._DISCOUNTCODE != value)
                {
                    this.OnDISCOUNTCODEChanging(value);
                    this.SendPropertyChanging("DISCOUNTCODE");
                    this._DISCOUNTCODE = value;
                    this.SendPropertyChanged("DISCOUNTCODE");
                    this.OnDISCOUNTCODEChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for BiensiPosDbContext.Discountitemselected in the schema.
    /// </summary>
    [Table(Name = @"biensi_pos_db.discountitemselected")]
    public partial class Discountitemselected
    {
        #pragma warning disable 0649

        private int _Id = 0;

        private int _ItemId = 0;

        private int _DiscountId = 0;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnItemIdChanging(int value);
        partial void OnItemIdChanged();
        partial void OnDiscountIdChanging(int value);
        partial void OnDiscountIdChanged();
        #endregion

        public Discountitemselected()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [Column(Storage = "_Id", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this._Id = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ItemId in the schema.
        /// </summary>
        [Column(Storage = "_ItemId", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int ItemId
        {
            get
            {
                return this._ItemId;
            }
            set
            {
                if (this._ItemId != value)
                {
                    this._ItemId = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DiscountId in the schema.
        /// </summary>
        [Column(Storage = "_DiscountId", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int DiscountId
        {
            get
            {
                return this._DiscountId;
            }
            set
            {
                if (this._DiscountId != value)
                {
                    this._DiscountId = value;
                }
            }
        }
    }

    /// <summary>
    /// There are no comments for BiensiPosDbContext.Discountretail in the schema.
    /// </summary>
    [Table(Name = @"biensi_pos_db.discountretail")]
    public partial class Discountretail
    {
        #pragma warning disable 0649

        private int _Id = 0;

        private int _DiscountCategory = 0;

        private string _DiscountCode = @"-";

        private string _DiscountName = @"-";

        private int _CustomerGroupId = 0;

        private string _DiscountPartner = @"-";

        private string _Description = @"-";

        private int _DiscountType = 0;

        private string _StartDate;

        private string _EndDate;

        private string _Status = @"-";

        private int _DiscountPercent = 0;

        private System.Nullable<int> _Qty = 0;

        private System.Nullable<int> _Priority = 0;

        private System.Nullable<int> _Amount = 0;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnDiscountCategoryChanging(int value);
        partial void OnDiscountCategoryChanged();
        partial void OnDiscountCodeChanging(string value);
        partial void OnDiscountCodeChanged();
        partial void OnDiscountNameChanging(string value);
        partial void OnDiscountNameChanged();
        partial void OnCustomerGroupIdChanging(int value);
        partial void OnCustomerGroupIdChanged();
        partial void OnDiscountPartnerChanging(string value);
        partial void OnDiscountPartnerChanged();
        partial void OnDescriptionChanging(string value);
        partial void OnDescriptionChanged();
        partial void OnDiscountTypeChanging(int value);
        partial void OnDiscountTypeChanged();
        partial void OnStartDateChanging(string value);
        partial void OnStartDateChanged();
        partial void OnEndDateChanging(string value);
        partial void OnEndDateChanged();
        partial void OnStatusChanging(string value);
        partial void OnStatusChanged();
        partial void OnDiscountPercentChanging(int value);
        partial void OnDiscountPercentChanged();
        partial void OnQtyChanging(System.Nullable<int> value);
        partial void OnQtyChanged();
        partial void OnPriorityChanging(System.Nullable<int> value);
        partial void OnPriorityChanged();
        partial void OnAmountChanging(System.Nullable<int> value);
        partial void OnAmountChanged();
        #endregion

        public Discountretail()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [Column(Storage = "_Id", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this._Id = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DiscountCategory in the schema.
        /// </summary>
        [Column(Storage = "_DiscountCategory", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int DiscountCategory
        {
            get
            {
                return this._DiscountCategory;
            }
            set
            {
                if (this._DiscountCategory != value)
                {
                    this._DiscountCategory = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DiscountCode in the schema.
        /// </summary>
        [Column(Storage = "_DiscountCode", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string DiscountCode
        {
            get
            {
                return this._DiscountCode;
            }
            set
            {
                if (this._DiscountCode != value)
                {
                    this._DiscountCode = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DiscountName in the schema.
        /// </summary>
        [Column(Storage = "_DiscountName", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string DiscountName
        {
            get
            {
                return this._DiscountName;
            }
            set
            {
                if (this._DiscountName != value)
                {
                    this._DiscountName = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CustomerGroupId in the schema.
        /// </summary>
        [Column(Storage = "_CustomerGroupId", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int CustomerGroupId
        {
            get
            {
                return this._CustomerGroupId;
            }
            set
            {
                if (this._CustomerGroupId != value)
                {
                    this._CustomerGroupId = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DiscountPartner in the schema.
        /// </summary>
        [Column(Storage = "_DiscountPartner", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string DiscountPartner
        {
            get
            {
                return this._DiscountPartner;
            }
            set
            {
                if (this._DiscountPartner != value)
                {
                    this._DiscountPartner = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Description in the schema.
        /// </summary>
        [Column(Storage = "_Description", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string Description
        {
            get
            {
                return this._Description;
            }
            set
            {
                if (this._Description != value)
                {
                    this._Description = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DiscountType in the schema.
        /// </summary>
        [Column(Storage = "_DiscountType", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int DiscountType
        {
            get
            {
                return this._DiscountType;
            }
            set
            {
                if (this._DiscountType != value)
                {
                    this._DiscountType = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for StartDate in the schema.
        /// </summary>
        [Column(Storage = "_StartDate", DbType = "VARCHAR(50) NULL", UpdateCheck = UpdateCheck.Never)]
        public string StartDate
        {
            get
            {
                return this._StartDate;
            }
            set
            {
                if (this._StartDate != value)
                {
                    this._StartDate = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for EndDate in the schema.
        /// </summary>
        [Column(Storage = "_EndDate", DbType = "VARCHAR(50) NULL", UpdateCheck = UpdateCheck.Never)]
        public string EndDate
        {
            get
            {
                return this._EndDate;
            }
            set
            {
                if (this._EndDate != value)
                {
                    this._EndDate = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Status in the schema.
        /// </summary>
        [Column(Storage = "_Status", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string Status
        {
            get
            {
                return this._Status;
            }
            set
            {
                if (this._Status != value)
                {
                    this._Status = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DiscountPercent in the schema.
        /// </summary>
        [Column(Storage = "_DiscountPercent", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int DiscountPercent
        {
            get
            {
                return this._DiscountPercent;
            }
            set
            {
                if (this._DiscountPercent != value)
                {
                    this._DiscountPercent = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Qty in the schema.
        /// </summary>
        [Column(Storage = "_Qty", DbType = "INT(11) NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> Qty
        {
            get
            {
                return this._Qty;
            }
            set
            {
                if (this._Qty != value)
                {
                    this._Qty = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Priority in the schema.
        /// </summary>
        [Column(Storage = "_Priority", DbType = "INT(11) NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> Priority
        {
            get
            {
                return this._Priority;
            }
            set
            {
                if (this._Priority != value)
                {
                    this._Priority = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Amount in the schema.
        /// </summary>
        [Column(Storage = "_Amount", DbType = "INT(11) NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> Amount
        {
            get
            {
                return this._Amount;
            }
            set
            {
                if (this._Amount != value)
                {
                    this._Amount = value;
                }
            }
        }
    }

    /// <summary>
    /// There are no comments for BiensiPosDbContext.Discountretailline in the schema.
    /// </summary>
    [Table(Name = @"biensi_pos_db.discountretaillines")]
    public partial class Discountretailline
    {
        #pragma warning disable 0649

        private int _Id = 0;

        private int _BrandCode = 0;

        private int _Department = 0;

        private int _DepartmentType = 0;

        private int _Gender = 0;

        private int _ArticleId = 0;

        private int _Color = 0;

        private int _Size = 0;

        private int _DiscountRetailId = 0;

        private int _DiscountPrecentage = 0;

        private int _CashDiscount = 0;

        private int _DiscountPrice = 0;

        private int _Qty = 0;

        private int _AmountTransaction = 0;

        private int _ArticleIdDiscount = 0;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnBrandCodeChanging(int value);
        partial void OnBrandCodeChanged();
        partial void OnDepartmentChanging(int value);
        partial void OnDepartmentChanged();
        partial void OnDepartmentTypeChanging(int value);
        partial void OnDepartmentTypeChanged();
        partial void OnGenderChanging(int value);
        partial void OnGenderChanged();
        partial void OnArticleIdChanging(int value);
        partial void OnArticleIdChanged();
        partial void OnColorChanging(int value);
        partial void OnColorChanged();
        partial void OnSizeChanging(int value);
        partial void OnSizeChanged();
        partial void OnDiscountRetailIdChanging(int value);
        partial void OnDiscountRetailIdChanged();
        partial void OnDiscountPrecentageChanging(int value);
        partial void OnDiscountPrecentageChanged();
        partial void OnCashDiscountChanging(int value);
        partial void OnCashDiscountChanged();
        partial void OnDiscountPriceChanging(int value);
        partial void OnDiscountPriceChanged();
        partial void OnQtyChanging(int value);
        partial void OnQtyChanged();
        partial void OnAmountTransactionChanging(int value);
        partial void OnAmountTransactionChanged();
        partial void OnArticleIdDiscountChanging(int value);
        partial void OnArticleIdDiscountChanged();
        #endregion

        public Discountretailline()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [Column(Storage = "_Id", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this._Id = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for BrandCode in the schema.
        /// </summary>
        [Column(Storage = "_BrandCode", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int BrandCode
        {
            get
            {
                return this._BrandCode;
            }
            set
            {
                if (this._BrandCode != value)
                {
                    this._BrandCode = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Department in the schema.
        /// </summary>
        [Column(Storage = "_Department", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int Department
        {
            get
            {
                return this._Department;
            }
            set
            {
                if (this._Department != value)
                {
                    this._Department = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DepartmentType in the schema.
        /// </summary>
        [Column(Storage = "_DepartmentType", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int DepartmentType
        {
            get
            {
                return this._DepartmentType;
            }
            set
            {
                if (this._DepartmentType != value)
                {
                    this._DepartmentType = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Gender in the schema.
        /// </summary>
        [Column(Storage = "_Gender", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int Gender
        {
            get
            {
                return this._Gender;
            }
            set
            {
                if (this._Gender != value)
                {
                    this._Gender = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ArticleId in the schema.
        /// </summary>
        [Column(Storage = "_ArticleId", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int ArticleId
        {
            get
            {
                return this._ArticleId;
            }
            set
            {
                if (this._ArticleId != value)
                {
                    this._ArticleId = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Color in the schema.
        /// </summary>
        [Column(Storage = "_Color", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int Color
        {
            get
            {
                return this._Color;
            }
            set
            {
                if (this._Color != value)
                {
                    this._Color = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Size in the schema.
        /// </summary>
        [Column(Storage = "_Size", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int Size
        {
            get
            {
                return this._Size;
            }
            set
            {
                if (this._Size != value)
                {
                    this._Size = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DiscountRetailId in the schema.
        /// </summary>
        [Column(Storage = "_DiscountRetailId", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int DiscountRetailId
        {
            get
            {
                return this._DiscountRetailId;
            }
            set
            {
                if (this._DiscountRetailId != value)
                {
                    this._DiscountRetailId = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DiscountPrecentage in the schema.
        /// </summary>
        [Column(Storage = "_DiscountPrecentage", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int DiscountPrecentage
        {
            get
            {
                return this._DiscountPrecentage;
            }
            set
            {
                if (this._DiscountPrecentage != value)
                {
                    this._DiscountPrecentage = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CashDiscount in the schema.
        /// </summary>
        [Column(Storage = "_CashDiscount", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int CashDiscount
        {
            get
            {
                return this._CashDiscount;
            }
            set
            {
                if (this._CashDiscount != value)
                {
                    this._CashDiscount = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DiscountPrice in the schema.
        /// </summary>
        [Column(Storage = "_DiscountPrice", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int DiscountPrice
        {
            get
            {
                return this._DiscountPrice;
            }
            set
            {
                if (this._DiscountPrice != value)
                {
                    this._DiscountPrice = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Qty in the schema.
        /// </summary>
        [Column(Storage = "_Qty", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int Qty
        {
            get
            {
                return this._Qty;
            }
            set
            {
                if (this._Qty != value)
                {
                    this._Qty = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for AmountTransaction in the schema.
        /// </summary>
        [Column(Storage = "_AmountTransaction", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int AmountTransaction
        {
            get
            {
                return this._AmountTransaction;
            }
            set
            {
                if (this._AmountTransaction != value)
                {
                    this._AmountTransaction = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ArticleIdDiscount in the schema.
        /// </summary>
        [Column(Storage = "_ArticleIdDiscount", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int ArticleIdDiscount
        {
            get
            {
                return this._ArticleIdDiscount;
            }
            set
            {
                if (this._ArticleIdDiscount != value)
                {
                    this._ArticleIdDiscount = value;
                }
            }
        }
    }

    /// <summary>
    /// There are no comments for BiensiPosDbContext.Discountstore in the schema.
    /// </summary>
    [Table(Name = @"biensi_pos_db.discountstore")]
    public partial class Discountstore
    {
        #pragma warning disable 0649

        private int _Id = 0;

        private int _StoreId = 0;

        private int _DiscountId = 0;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnStoreIdChanging(int value);
        partial void OnStoreIdChanged();
        partial void OnDiscountIdChanging(int value);
        partial void OnDiscountIdChanged();
        #endregion

        public Discountstore()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [Column(Storage = "_Id", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this._Id = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for StoreId in the schema.
        /// </summary>
        [Column(Storage = "_StoreId", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int StoreId
        {
            get
            {
                return this._StoreId;
            }
            set
            {
                if (this._StoreId != value)
                {
                    this._StoreId = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DiscountId in the schema.
        /// </summary>
        [Column(Storage = "_DiscountId", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int DiscountId
        {
            get
            {
                return this._DiscountId;
            }
            set
            {
                if (this._DiscountId != value)
                {
                    this._DiscountId = value;
                }
            }
        }
    }

    /// <summary>
    /// There are no comments for BiensiPosDbContext.Diskon in the schema.
    /// </summary>
    [Table(Name = @"biensi_pos_db.diskon")]
    public partial class Diskon : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private int _Id;

        private string _KdDiskon = @"-";

        private int _NetDiskon = 0;

        private int _Status = 0;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnKdDiskonChanging(string value);
        partial void OnKdDiskonChanged();
        partial void OnNetDiskonChanging(int value);
        partial void OnNetDiskonChanged();
        partial void OnStatusChanging(int value);
        partial void OnStatusChanged();
        #endregion

        public Diskon()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [Column(Name = @"`_id`", Storage = "_Id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "INT(11) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging("Id");
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for KdDiskon in the schema.
        /// </summary>
        [Column(Name = @"kd_diskon", Storage = "_KdDiskon", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string KdDiskon
        {
            get
            {
                return this._KdDiskon;
            }
            set
            {
                if (this._KdDiskon != value)
                {
                    this.OnKdDiskonChanging(value);
                    this.SendPropertyChanging("KdDiskon");
                    this._KdDiskon = value;
                    this.SendPropertyChanged("KdDiskon");
                    this.OnKdDiskonChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NetDiskon in the schema.
        /// </summary>
        [Column(Name = @"net_diskon", Storage = "_NetDiskon", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int NetDiskon
        {
            get
            {
                return this._NetDiskon;
            }
            set
            {
                if (this._NetDiskon != value)
                {
                    this.OnNetDiskonChanging(value);
                    this.SendPropertyChanging("NetDiskon");
                    this._NetDiskon = value;
                    this.SendPropertyChanged("NetDiskon");
                    this.OnNetDiskonChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Status in the schema.
        /// </summary>
        [Column(Name = @"status", Storage = "_Status", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int Status
        {
            get
            {
                return this._Status;
            }
            set
            {
                if (this._Status != value)
                {
                    this.OnStatusChanging(value);
                    this.SendPropertyChanging("Status");
                    this._Status = value;
                    this.SendPropertyChanged("Status");
                    this.OnStatusChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for BiensiPosDbContext.Employee in the schema.
    /// </summary>
    [Table(Name = @"biensi_pos_db.employee")]
    public partial class Employee
    {
        #pragma warning disable 0649

        private long _Id = 0;

        private string _EMPLOYEEID = @"-";

        private string _NAME = @"-";

        private long _POSITIONID = 0;

        private string _Pass;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(long value);
        partial void OnIdChanged();
        partial void OnEMPLOYEEIDChanging(string value);
        partial void OnEMPLOYEEIDChanged();
        partial void OnNAMEChanging(string value);
        partial void OnNAMEChanged();
        partial void OnPOSITIONIDChanging(long value);
        partial void OnPOSITIONIDChanged();
        partial void OnPassChanging(string value);
        partial void OnPassChanged();
        #endregion

        public Employee()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [Column(Name = @"`_id`", Storage = "_Id", CanBeNull = false, DbType = "BIGINT(20) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public long Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this._Id = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for EMPLOYEEID in the schema.
        /// </summary>
        [Column(Name = @"EMPLOYEE_ID", Storage = "_EMPLOYEEID", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string EMPLOYEEID
        {
            get
            {
                return this._EMPLOYEEID;
            }
            set
            {
                if (this._EMPLOYEEID != value)
                {
                    this._EMPLOYEEID = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NAME in the schema.
        /// </summary>
        [Column(Storage = "_NAME", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string NAME
        {
            get
            {
                return this._NAME;
            }
            set
            {
                if (this._NAME != value)
                {
                    this._NAME = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for POSITIONID in the schema.
        /// </summary>
        [Column(Name = @"POSITION_ID", Storage = "_POSITIONID", CanBeNull = false, DbType = "BIGINT(20) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public long POSITIONID
        {
            get
            {
                return this._POSITIONID;
            }
            set
            {
                if (this._POSITIONID != value)
                {
                    this._POSITIONID = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Pass in the schema.
        /// </summary>
        [Column(Storage = "_Pass", DbType = "TEXT NULL", UpdateCheck = UpdateCheck.Never)]
        public string Pass
        {
            get
            {
                return this._Pass;
            }
            set
            {
                if (this._Pass != value)
                {
                    this._Pass = value;
                }
            }
        }
    }

    /// <summary>
    /// There are no comments for BiensiPosDbContext.Employee2 in the schema.
    /// </summary>
    [Table(Name = @"biensi_pos_db.employee2")]
    public partial class Employee2
    {
        #pragma warning disable 0649

        private long _Id = 0;

        private string _EMPLOYEEID = @"-";

        private string _NAME = @"-";

        private long _POSITIONID = 0;

        private string _Pass;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(long value);
        partial void OnIdChanged();
        partial void OnEMPLOYEEIDChanging(string value);
        partial void OnEMPLOYEEIDChanged();
        partial void OnNAMEChanging(string value);
        partial void OnNAMEChanged();
        partial void OnPOSITIONIDChanging(long value);
        partial void OnPOSITIONIDChanged();
        partial void OnPassChanging(string value);
        partial void OnPassChanged();
        #endregion

        public Employee2()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [Column(Name = @"`_id`", Storage = "_Id", CanBeNull = false, DbType = "BIGINT(20) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public long Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this._Id = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for EMPLOYEEID in the schema.
        /// </summary>
        [Column(Name = @"EMPLOYEE_ID", Storage = "_EMPLOYEEID", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string EMPLOYEEID
        {
            get
            {
                return this._EMPLOYEEID;
            }
            set
            {
                if (this._EMPLOYEEID != value)
                {
                    this._EMPLOYEEID = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NAME in the schema.
        /// </summary>
        [Column(Storage = "_NAME", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string NAME
        {
            get
            {
                return this._NAME;
            }
            set
            {
                if (this._NAME != value)
                {
                    this._NAME = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for POSITIONID in the schema.
        /// </summary>
        [Column(Name = @"POSITION_ID", Storage = "_POSITIONID", CanBeNull = false, DbType = "BIGINT(20) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public long POSITIONID
        {
            get
            {
                return this._POSITIONID;
            }
            set
            {
                if (this._POSITIONID != value)
                {
                    this._POSITIONID = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Pass in the schema.
        /// </summary>
        [Column(Storage = "_Pass", DbType = "TEXT NULL", UpdateCheck = UpdateCheck.Never)]
        public string Pass
        {
            get
            {
                return this._Pass;
            }
            set
            {
                if (this._Pass != value)
                {
                    this._Pass = value;
                }
            }
        }
    }

    /// <summary>
    /// There are no comments for BiensiPosDbContext.Gender in the schema.
    /// </summary>
    [Table(Name = @"biensi_pos_db.gender")]
    public partial class Gender : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private int _Id = 0;

        private string _CODE = @"-";

        private string _DESCRIPTION = @"-";
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnCODEChanging(string value);
        partial void OnCODEChanged();
        partial void OnDESCRIPTIONChanging(string value);
        partial void OnDESCRIPTIONChanged();
        #endregion

        public Gender()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [Column(Name = @"`_id`", Storage = "_Id", CanBeNull = false, DbType = "INT(11) NOT NULL", IsPrimaryKey = true)]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging("Id");
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CODE in the schema.
        /// </summary>
        [Column(Storage = "_CODE", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string CODE
        {
            get
            {
                return this._CODE;
            }
            set
            {
                if (this._CODE != value)
                {
                    this.OnCODEChanging(value);
                    this.SendPropertyChanging("CODE");
                    this._CODE = value;
                    this.SendPropertyChanged("CODE");
                    this.OnCODEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DESCRIPTION in the schema.
        /// </summary>
        [Column(Storage = "_DESCRIPTION", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string DESCRIPTION
        {
            get
            {
                return this._DESCRIPTION;
            }
            set
            {
                if (this._DESCRIPTION != value)
                {
                    this.OnDESCRIPTIONChanging(value);
                    this.SendPropertyChanging("DESCRIPTION");
                    this._DESCRIPTION = value;
                    this.SendPropertyChanged("DESCRIPTION");
                    this.OnDESCRIPTIONChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for BiensiPosDbContext.Inventory in the schema.
    /// </summary>
    [Table(Name = @"biensi_pos_db.inventory")]
    public partial class Inventory : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private long _Id = 0;

        private string _ARTICLEID = @"-";

        private int _GOODQTY = 0;

        private int _REJECTQTY = 0;

        private int _WHGOODQTY = 0;

        private int _WHREJECTQTY = 0;

        private int _STATUS = 0;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(long value);
        partial void OnIdChanged();
        partial void OnARTICLEIDChanging(string value);
        partial void OnARTICLEIDChanged();
        partial void OnGOODQTYChanging(int value);
        partial void OnGOODQTYChanged();
        partial void OnREJECTQTYChanging(int value);
        partial void OnREJECTQTYChanged();
        partial void OnWHGOODQTYChanging(int value);
        partial void OnWHGOODQTYChanged();
        partial void OnWHREJECTQTYChanging(int value);
        partial void OnWHREJECTQTYChanged();
        partial void OnSTATUSChanging(int value);
        partial void OnSTATUSChanged();
        #endregion

        public Inventory()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [Column(Name = @"`_id`", Storage = "_Id", CanBeNull = false, DbType = "BIGINT(20) NOT NULL", IsPrimaryKey = true)]
        public long Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging("Id");
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ARTICLEID in the schema.
        /// </summary>
        [Column(Name = @"ARTICLE_ID", Storage = "_ARTICLEID", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string ARTICLEID
        {
            get
            {
                return this._ARTICLEID;
            }
            set
            {
                if (this._ARTICLEID != value)
                {
                    this.OnARTICLEIDChanging(value);
                    this.SendPropertyChanging("ARTICLEID");
                    this._ARTICLEID = value;
                    this.SendPropertyChanged("ARTICLEID");
                    this.OnARTICLEIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for GOODQTY in the schema.
        /// </summary>
        [Column(Name = @"GOOD_QTY", Storage = "_GOODQTY", CanBeNull = false, DbType = "INT(4) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int GOODQTY
        {
            get
            {
                return this._GOODQTY;
            }
            set
            {
                if (this._GOODQTY != value)
                {
                    this.OnGOODQTYChanging(value);
                    this.SendPropertyChanging("GOODQTY");
                    this._GOODQTY = value;
                    this.SendPropertyChanged("GOODQTY");
                    this.OnGOODQTYChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for REJECTQTY in the schema.
        /// </summary>
        [Column(Name = @"REJECT_QTY", Storage = "_REJECTQTY", CanBeNull = false, DbType = "INT(4) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int REJECTQTY
        {
            get
            {
                return this._REJECTQTY;
            }
            set
            {
                if (this._REJECTQTY != value)
                {
                    this.OnREJECTQTYChanging(value);
                    this.SendPropertyChanging("REJECTQTY");
                    this._REJECTQTY = value;
                    this.SendPropertyChanged("REJECTQTY");
                    this.OnREJECTQTYChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for WHGOODQTY in the schema.
        /// </summary>
        [Column(Name = @"WH_GOOD_QTY", Storage = "_WHGOODQTY", CanBeNull = false, DbType = "INT(4) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int WHGOODQTY
        {
            get
            {
                return this._WHGOODQTY;
            }
            set
            {
                if (this._WHGOODQTY != value)
                {
                    this.OnWHGOODQTYChanging(value);
                    this.SendPropertyChanging("WHGOODQTY");
                    this._WHGOODQTY = value;
                    this.SendPropertyChanged("WHGOODQTY");
                    this.OnWHGOODQTYChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for WHREJECTQTY in the schema.
        /// </summary>
        [Column(Name = @"WH_REJECT_QTY", Storage = "_WHREJECTQTY", CanBeNull = false, DbType = "INT(4) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int WHREJECTQTY
        {
            get
            {
                return this._WHREJECTQTY;
            }
            set
            {
                if (this._WHREJECTQTY != value)
                {
                    this.OnWHREJECTQTYChanging(value);
                    this.SendPropertyChanging("WHREJECTQTY");
                    this._WHREJECTQTY = value;
                    this.SendPropertyChanged("WHREJECTQTY");
                    this.OnWHREJECTQTYChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for STATUS in the schema.
        /// </summary>
        [Column(Storage = "_STATUS", CanBeNull = false, DbType = "INT(5) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int STATUS
        {
            get
            {
                return this._STATUS;
            }
            set
            {
                if (this._STATUS != value)
                {
                    this.OnSTATUSChanging(value);
                    this.SendPropertyChanging("STATUS");
                    this._STATUS = value;
                    this.SendPropertyChanged("STATUS");
                    this.OnSTATUSChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for BiensiPosDbContext.InventoryLine in the schema.
    /// </summary>
    [Table(Name = @"biensi_pos_db.inventory_line")]
    public partial class InventoryLine : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private long _Id;

        private int _TRANSTYPE = 0;

        private string _TRANSTYPENAME = @"-";

        private string _TRANSREFID = @"-";

        private int _QTY = 0;

        private string _ARTICLEID = @"-";
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(long value);
        partial void OnIdChanged();
        partial void OnTRANSTYPEChanging(int value);
        partial void OnTRANSTYPEChanged();
        partial void OnTRANSTYPENAMEChanging(string value);
        partial void OnTRANSTYPENAMEChanged();
        partial void OnTRANSREFIDChanging(string value);
        partial void OnTRANSREFIDChanged();
        partial void OnQTYChanging(int value);
        partial void OnQTYChanged();
        partial void OnARTICLEIDChanging(string value);
        partial void OnARTICLEIDChanged();
        #endregion

        public InventoryLine()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [Column(Name = @"`_id`", Storage = "_Id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "BIGINT(20) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
        public long Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging("Id");
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TRANSTYPE in the schema.
        /// </summary>
        [Column(Name = @"TRANS_TYPE", Storage = "_TRANSTYPE", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int TRANSTYPE
        {
            get
            {
                return this._TRANSTYPE;
            }
            set
            {
                if (this._TRANSTYPE != value)
                {
                    this.OnTRANSTYPEChanging(value);
                    this.SendPropertyChanging("TRANSTYPE");
                    this._TRANSTYPE = value;
                    this.SendPropertyChanged("TRANSTYPE");
                    this.OnTRANSTYPEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TRANSTYPENAME in the schema.
        /// </summary>
        [Column(Name = @"TRANS_TYPE_NAME", Storage = "_TRANSTYPENAME", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string TRANSTYPENAME
        {
            get
            {
                return this._TRANSTYPENAME;
            }
            set
            {
                if (this._TRANSTYPENAME != value)
                {
                    this.OnTRANSTYPENAMEChanging(value);
                    this.SendPropertyChanging("TRANSTYPENAME");
                    this._TRANSTYPENAME = value;
                    this.SendPropertyChanged("TRANSTYPENAME");
                    this.OnTRANSTYPENAMEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TRANSREFID in the schema.
        /// </summary>
        [Column(Name = @"TRANS_REF_ID", Storage = "_TRANSREFID", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string TRANSREFID
        {
            get
            {
                return this._TRANSREFID;
            }
            set
            {
                if (this._TRANSREFID != value)
                {
                    this.OnTRANSREFIDChanging(value);
                    this.SendPropertyChanging("TRANSREFID");
                    this._TRANSREFID = value;
                    this.SendPropertyChanged("TRANSREFID");
                    this.OnTRANSREFIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for QTY in the schema.
        /// </summary>
        [Column(Storage = "_QTY", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int QTY
        {
            get
            {
                return this._QTY;
            }
            set
            {
                if (this._QTY != value)
                {
                    this.OnQTYChanging(value);
                    this.SendPropertyChanging("QTY");
                    this._QTY = value;
                    this.SendPropertyChanged("QTY");
                    this.OnQTYChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ARTICLEID in the schema.
        /// </summary>
        [Column(Name = @"ARTICLE_ID", Storage = "_ARTICLEID", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string ARTICLEID
        {
            get
            {
                return this._ARTICLEID;
            }
            set
            {
                if (this._ARTICLEID != value)
                {
                    this.OnARTICLEIDChanging(value);
                    this.SendPropertyChanging("ARTICLEID");
                    this._ARTICLEID = value;
                    this.SendPropertyChanged("ARTICLEID");
                    this.OnARTICLEIDChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for BiensiPosDbContext.Itemdimensionbrand in the schema.
    /// </summary>
    [Table(Name = @"biensi_pos_db.itemdimensionbrand")]
    public partial class Itemdimensionbrand
    {
        #pragma warning disable 0649

        private int _Id = 0;

        private string _Code = @"-";

        private string _Description = @"-";
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnCodeChanging(string value);
        partial void OnCodeChanged();
        partial void OnDescriptionChanging(string value);
        partial void OnDescriptionChanged();
        #endregion

        public Itemdimensionbrand()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [Column(Storage = "_Id", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this._Id = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Code in the schema.
        /// </summary>
        [Column(Storage = "_Code", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string Code
        {
            get
            {
                return this._Code;
            }
            set
            {
                if (this._Code != value)
                {
                    this._Code = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Description in the schema.
        /// </summary>
        [Column(Storage = "_Description", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string Description
        {
            get
            {
                return this._Description;
            }
            set
            {
                if (this._Description != value)
                {
                    this._Description = value;
                }
            }
        }
    }

    /// <summary>
    /// There are no comments for BiensiPosDbContext.Itemdimensioncolor in the schema.
    /// </summary>
    [Table(Name = @"biensi_pos_db.itemdimensioncolor")]
    public partial class Itemdimensioncolor
    {
        #pragma warning disable 0649

        private int _Id = 0;

        private string _Code = @"-";

        private string _Description = @"-";
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnCodeChanging(string value);
        partial void OnCodeChanged();
        partial void OnDescriptionChanging(string value);
        partial void OnDescriptionChanged();
        #endregion

        public Itemdimensioncolor()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [Column(Storage = "_Id", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this._Id = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Code in the schema.
        /// </summary>
        [Column(Storage = "_Code", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string Code
        {
            get
            {
                return this._Code;
            }
            set
            {
                if (this._Code != value)
                {
                    this._Code = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Description in the schema.
        /// </summary>
        [Column(Storage = "_Description", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string Description
        {
            get
            {
                return this._Description;
            }
            set
            {
                if (this._Description != value)
                {
                    this._Description = value;
                }
            }
        }
    }

    /// <summary>
    /// There are no comments for BiensiPosDbContext.Itemdimensiondepartment in the schema.
    /// </summary>
    [Table(Name = @"biensi_pos_db.itemdimensiondepartment")]
    public partial class Itemdimensiondepartment
    {
        #pragma warning disable 0649

        private int _Id = 0;

        private string _Code = @"-";

        private string _Description = @"-";
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnCodeChanging(string value);
        partial void OnCodeChanged();
        partial void OnDescriptionChanging(string value);
        partial void OnDescriptionChanged();
        #endregion

        public Itemdimensiondepartment()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [Column(Storage = "_Id", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this._Id = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Code in the schema.
        /// </summary>
        [Column(Storage = "_Code", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string Code
        {
            get
            {
                return this._Code;
            }
            set
            {
                if (this._Code != value)
                {
                    this._Code = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Description in the schema.
        /// </summary>
        [Column(Storage = "_Description", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string Description
        {
            get
            {
                return this._Description;
            }
            set
            {
                if (this._Description != value)
                {
                    this._Description = value;
                }
            }
        }
    }

    /// <summary>
    /// There are no comments for BiensiPosDbContext.Itemdimensiondepartmenttype in the schema.
    /// </summary>
    [Table(Name = @"biensi_pos_db.itemdimensiondepartmenttype")]
    public partial class Itemdimensiondepartmenttype
    {
        #pragma warning disable 0649

        private int _Id = 0;

        private string _Code = @"-";

        private string _Description = @"-";
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnCodeChanging(string value);
        partial void OnCodeChanged();
        partial void OnDescriptionChanging(string value);
        partial void OnDescriptionChanged();
        #endregion

        public Itemdimensiondepartmenttype()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [Column(Storage = "_Id", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this._Id = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Code in the schema.
        /// </summary>
        [Column(Storage = "_Code", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string Code
        {
            get
            {
                return this._Code;
            }
            set
            {
                if (this._Code != value)
                {
                    this._Code = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Description in the schema.
        /// </summary>
        [Column(Storage = "_Description", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string Description
        {
            get
            {
                return this._Description;
            }
            set
            {
                if (this._Description != value)
                {
                    this._Description = value;
                }
            }
        }
    }

    /// <summary>
    /// There are no comments for BiensiPosDbContext.Itemdimensiongender in the schema.
    /// </summary>
    [Table(Name = @"biensi_pos_db.itemdimensiongender")]
    public partial class Itemdimensiongender
    {
        #pragma warning disable 0649

        private int _Id = 0;

        private string _Code = @"-";

        private string _Description = @"-";
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnCodeChanging(string value);
        partial void OnCodeChanged();
        partial void OnDescriptionChanging(string value);
        partial void OnDescriptionChanged();
        #endregion

        public Itemdimensiongender()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [Column(Storage = "_Id", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this._Id = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Code in the schema.
        /// </summary>
        [Column(Storage = "_Code", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string Code
        {
            get
            {
                return this._Code;
            }
            set
            {
                if (this._Code != value)
                {
                    this._Code = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Description in the schema.
        /// </summary>
        [Column(Storage = "_Description", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string Description
        {
            get
            {
                return this._Description;
            }
            set
            {
                if (this._Description != value)
                {
                    this._Description = value;
                }
            }
        }
    }

    /// <summary>
    /// There are no comments for BiensiPosDbContext.Itemdimensionsize in the schema.
    /// </summary>
    [Table(Name = @"biensi_pos_db.itemdimensionsize")]
    public partial class Itemdimensionsize
    {
        #pragma warning disable 0649

        private int _Id = 0;

        private string _Code = @"-";

        private string _Description = @"-";
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnCodeChanging(string value);
        partial void OnCodeChanged();
        partial void OnDescriptionChanging(string value);
        partial void OnDescriptionChanged();
        #endregion

        public Itemdimensionsize()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [Column(Storage = "_Id", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this._Id = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Code in the schema.
        /// </summary>
        [Column(Storage = "_Code", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string Code
        {
            get
            {
                return this._Code;
            }
            set
            {
                if (this._Code != value)
                {
                    this._Code = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Description in the schema.
        /// </summary>
        [Column(Storage = "_Description", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string Description
        {
            get
            {
                return this._Description;
            }
            set
            {
                if (this._Description != value)
                {
                    this._Description = value;
                }
            }
        }
    }

    /// <summary>
    /// There are no comments for BiensiPosDbContext.LogDiscount in the schema.
    /// </summary>
    [Table(Name = @"biensi_pos_db.log_discount")]
    public partial class LogDiscount
    {
        #pragma warning disable 0649

        private string _ID;

        private string _DISCOUNT;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIDChanging(string value);
        partial void OnIDChanged();
        partial void OnDISCOUNTChanging(string value);
        partial void OnDISCOUNTChanged();
        #endregion

        public LogDiscount()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for ID in the schema.
        /// </summary>
        [Column(Storage = "_ID", DbType = "VARCHAR(50) NULL", UpdateCheck = UpdateCheck.Never)]
        public string ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if (this._ID != value)
                {
                    this._ID = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DISCOUNT in the schema.
        /// </summary>
        [Column(Storage = "_DISCOUNT", DbType = "VARCHAR(50) NULL", UpdateCheck = UpdateCheck.Never)]
        public string DISCOUNT
        {
            get
            {
                return this._DISCOUNT;
            }
            set
            {
                if (this._DISCOUNT != value)
                {
                    this._DISCOUNT = value;
                }
            }
        }
    }

    /// <summary>
    /// There are no comments for BiensiPosDbContext.LogMsg in the schema.
    /// </summary>
    [Table(Name = @"biensi_pos_db.log_msg")]
    public partial class LogMsg
    {
        #pragma warning disable 0649

        private string _Data = @"-";

        private string _Status = @"-";
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnDataChanging(string value);
        partial void OnDataChanged();
        partial void OnStatusChanging(string value);
        partial void OnStatusChanged();
        #endregion

        public LogMsg()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Data in the schema.
        /// </summary>
        [Column(Name = @"`Data`", Storage = "_Data", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string Data
        {
            get
            {
                return this._Data;
            }
            set
            {
                if (this._Data != value)
                {
                    this._Data = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Status in the schema.
        /// </summary>
        [Column(Storage = "_Status", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string Status
        {
            get
            {
                return this._Status;
            }
            set
            {
                if (this._Status != value)
                {
                    this._Status = value;
                }
            }
        }
    }

    /// <summary>
    /// There are no comments for BiensiPosDbContext.ModalStore in the schema.
    /// </summary>
    [Table(Name = @"biensi_pos_db.modal_store")]
    public partial class ModalStore : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private long _Id;

        private double _UANGMODAL = 0;

        private double _OPENINGBALANCETRANS = 0;

        private double _CLOSINGBALANCETRANS = 0;

        private double _OPENINGBALANCEPETTYCASH = 0;

        private double _CLOSINGBALANCEPETTYCASH = 0;

        private System.DateTime _OPENINGTIME = DateTime.Now;

        private System.DateTime _CLOSINGTIME = DateTime.Now;

        private string _DEVICENAME = @"-";

        private string _SHIFTNAME = @"-";

        private string _SHIFTCODE = @"-";
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(long value);
        partial void OnIdChanged();
        partial void OnUANGMODALChanging(double value);
        partial void OnUANGMODALChanged();
        partial void OnOPENINGBALANCETRANSChanging(double value);
        partial void OnOPENINGBALANCETRANSChanged();
        partial void OnCLOSINGBALANCETRANSChanging(double value);
        partial void OnCLOSINGBALANCETRANSChanged();
        partial void OnOPENINGBALANCEPETTYCASHChanging(double value);
        partial void OnOPENINGBALANCEPETTYCASHChanged();
        partial void OnCLOSINGBALANCEPETTYCASHChanging(double value);
        partial void OnCLOSINGBALANCEPETTYCASHChanged();
        partial void OnOPENINGTIMEChanging(System.DateTime value);
        partial void OnOPENINGTIMEChanged();
        partial void OnCLOSINGTIMEChanging(System.DateTime value);
        partial void OnCLOSINGTIMEChanged();
        partial void OnDEVICENAMEChanging(string value);
        partial void OnDEVICENAMEChanged();
        partial void OnSHIFTNAMEChanging(string value);
        partial void OnSHIFTNAMEChanged();
        partial void OnSHIFTCODEChanging(string value);
        partial void OnSHIFTCODEChanged();
        #endregion

        public ModalStore()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [Column(Name = @"`_id`", Storage = "_Id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "BIGINT(20) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
        public long Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging("Id");
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for UANGMODAL in the schema.
        /// </summary>
        [Column(Name = @"UANG_MODAL", Storage = "_UANGMODAL", CanBeNull = false, DbType = "DOUBLE NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public double UANGMODAL
        {
            get
            {
                return this._UANGMODAL;
            }
            set
            {
                if (this._UANGMODAL != value)
                {
                    this.OnUANGMODALChanging(value);
                    this.SendPropertyChanging("UANGMODAL");
                    this._UANGMODAL = value;
                    this.SendPropertyChanged("UANGMODAL");
                    this.OnUANGMODALChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for OPENINGBALANCETRANS in the schema.
        /// </summary>
        [Column(Name = @"OPENING_BALANCE_TRANS", Storage = "_OPENINGBALANCETRANS", CanBeNull = false, DbType = "DOUBLE NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public double OPENINGBALANCETRANS
        {
            get
            {
                return this._OPENINGBALANCETRANS;
            }
            set
            {
                if (this._OPENINGBALANCETRANS != value)
                {
                    this.OnOPENINGBALANCETRANSChanging(value);
                    this.SendPropertyChanging("OPENINGBALANCETRANS");
                    this._OPENINGBALANCETRANS = value;
                    this.SendPropertyChanged("OPENINGBALANCETRANS");
                    this.OnOPENINGBALANCETRANSChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CLOSINGBALANCETRANS in the schema.
        /// </summary>
        [Column(Name = @"CLOSING_BALANCE_TRANS", Storage = "_CLOSINGBALANCETRANS", CanBeNull = false, DbType = "DOUBLE NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public double CLOSINGBALANCETRANS
        {
            get
            {
                return this._CLOSINGBALANCETRANS;
            }
            set
            {
                if (this._CLOSINGBALANCETRANS != value)
                {
                    this.OnCLOSINGBALANCETRANSChanging(value);
                    this.SendPropertyChanging("CLOSINGBALANCETRANS");
                    this._CLOSINGBALANCETRANS = value;
                    this.SendPropertyChanged("CLOSINGBALANCETRANS");
                    this.OnCLOSINGBALANCETRANSChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for OPENINGBALANCEPETTYCASH in the schema.
        /// </summary>
        [Column(Name = @"OPENING_BALANCE_PETTY_CASH", Storage = "_OPENINGBALANCEPETTYCASH", CanBeNull = false, DbType = "DOUBLE NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public double OPENINGBALANCEPETTYCASH
        {
            get
            {
                return this._OPENINGBALANCEPETTYCASH;
            }
            set
            {
                if (this._OPENINGBALANCEPETTYCASH != value)
                {
                    this.OnOPENINGBALANCEPETTYCASHChanging(value);
                    this.SendPropertyChanging("OPENINGBALANCEPETTYCASH");
                    this._OPENINGBALANCEPETTYCASH = value;
                    this.SendPropertyChanged("OPENINGBALANCEPETTYCASH");
                    this.OnOPENINGBALANCEPETTYCASHChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CLOSINGBALANCEPETTYCASH in the schema.
        /// </summary>
        [Column(Name = @"CLOSING_BALANCE_PETTY_CASH", Storage = "_CLOSINGBALANCEPETTYCASH", CanBeNull = false, DbType = "DOUBLE NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public double CLOSINGBALANCEPETTYCASH
        {
            get
            {
                return this._CLOSINGBALANCEPETTYCASH;
            }
            set
            {
                if (this._CLOSINGBALANCEPETTYCASH != value)
                {
                    this.OnCLOSINGBALANCEPETTYCASHChanging(value);
                    this.SendPropertyChanging("CLOSINGBALANCEPETTYCASH");
                    this._CLOSINGBALANCEPETTYCASH = value;
                    this.SendPropertyChanged("CLOSINGBALANCEPETTYCASH");
                    this.OnCLOSINGBALANCEPETTYCASHChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for OPENINGTIME in the schema.
        /// </summary>
        [Column(Name = @"OPENING_TIME", Storage = "_OPENINGTIME", CanBeNull = false, DbType = "DATETIME NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public System.DateTime OPENINGTIME
        {
            get
            {
                return this._OPENINGTIME;
            }
            set
            {
                if (this._OPENINGTIME != value)
                {
                    this.OnOPENINGTIMEChanging(value);
                    this.SendPropertyChanging("OPENINGTIME");
                    this._OPENINGTIME = value;
                    this.SendPropertyChanged("OPENINGTIME");
                    this.OnOPENINGTIMEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CLOSINGTIME in the schema.
        /// </summary>
        [Column(Name = @"CLOSING_TIME", Storage = "_CLOSINGTIME", CanBeNull = false, DbType = "DATETIME NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public System.DateTime CLOSINGTIME
        {
            get
            {
                return this._CLOSINGTIME;
            }
            set
            {
                if (this._CLOSINGTIME != value)
                {
                    this.OnCLOSINGTIMEChanging(value);
                    this.SendPropertyChanging("CLOSINGTIME");
                    this._CLOSINGTIME = value;
                    this.SendPropertyChanged("CLOSINGTIME");
                    this.OnCLOSINGTIMEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DEVICENAME in the schema.
        /// </summary>
        [Column(Name = @"DEVICE_NAME", Storage = "_DEVICENAME", CanBeNull = false, DbType = "VARCHAR(100) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string DEVICENAME
        {
            get
            {
                return this._DEVICENAME;
            }
            set
            {
                if (this._DEVICENAME != value)
                {
                    this.OnDEVICENAMEChanging(value);
                    this.SendPropertyChanging("DEVICENAME");
                    this._DEVICENAME = value;
                    this.SendPropertyChanged("DEVICENAME");
                    this.OnDEVICENAMEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for SHIFTNAME in the schema.
        /// </summary>
        [Column(Name = @"SHIFT_NAME", Storage = "_SHIFTNAME", CanBeNull = false, DbType = "VARCHAR(100) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string SHIFTNAME
        {
            get
            {
                return this._SHIFTNAME;
            }
            set
            {
                if (this._SHIFTNAME != value)
                {
                    this.OnSHIFTNAMEChanging(value);
                    this.SendPropertyChanging("SHIFTNAME");
                    this._SHIFTNAME = value;
                    this.SendPropertyChanged("SHIFTNAME");
                    this.OnSHIFTNAMEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for SHIFTCODE in the schema.
        /// </summary>
        [Column(Name = @"SHIFT_CODE", Storage = "_SHIFTCODE", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string SHIFTCODE
        {
            get
            {
                return this._SHIFTCODE;
            }
            set
            {
                if (this._SHIFTCODE != value)
                {
                    this.OnSHIFTCODEChanging(value);
                    this.SendPropertyChanging("SHIFTCODE");
                    this._SHIFTCODE = value;
                    this.SendPropertyChanged("SHIFTCODE");
                    this.OnSHIFTCODEChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for BiensiPosDbContext.Mutasiorder in the schema.
    /// </summary>
    [Table(Name = @"biensi_pos_db.mutasiorder")]
    public partial class Mutasiorder : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private long _Id;

        private string _MUTASIORDERID = @"-";

        private string _STORECODE = @"-";

        private string _MUTASIFROMWAREHOUSE = @"-";

        private string _MUTASITOWAREHOUSE = @"-";

        private string _REQUESTDELIVERYDATE = @"-";

        private int _TOTALQTY = 0;

        private int _STATUS = 0;

        private string _DATE = @"-";

        private string _TIME = @"-";

        private System.DateTime _TIMESTAMP = DateTime.Now;

        private int _STATUSAPI = 0;

        private string _CUSTIDSTORE = @"-";

        private string _EMPLOYEEID = @"-";

        private string _EMPLOYEENAME = @"-";

        private int _TOTALAMOUNT = 0;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(long value);
        partial void OnIdChanged();
        partial void OnMUTASIORDERIDChanging(string value);
        partial void OnMUTASIORDERIDChanged();
        partial void OnSTORECODEChanging(string value);
        partial void OnSTORECODEChanged();
        partial void OnMUTASIFROMWAREHOUSEChanging(string value);
        partial void OnMUTASIFROMWAREHOUSEChanged();
        partial void OnMUTASITOWAREHOUSEChanging(string value);
        partial void OnMUTASITOWAREHOUSEChanged();
        partial void OnREQUESTDELIVERYDATEChanging(string value);
        partial void OnREQUESTDELIVERYDATEChanged();
        partial void OnTOTALQTYChanging(int value);
        partial void OnTOTALQTYChanged();
        partial void OnSTATUSChanging(int value);
        partial void OnSTATUSChanged();
        partial void OnDATEChanging(string value);
        partial void OnDATEChanged();
        partial void OnTIMEChanging(string value);
        partial void OnTIMEChanged();
        partial void OnTIMESTAMPChanging(System.DateTime value);
        partial void OnTIMESTAMPChanged();
        partial void OnSTATUSAPIChanging(int value);
        partial void OnSTATUSAPIChanged();
        partial void OnCUSTIDSTOREChanging(string value);
        partial void OnCUSTIDSTOREChanged();
        partial void OnEMPLOYEEIDChanging(string value);
        partial void OnEMPLOYEEIDChanged();
        partial void OnEMPLOYEENAMEChanging(string value);
        partial void OnEMPLOYEENAMEChanged();
        partial void OnTOTALAMOUNTChanging(int value);
        partial void OnTOTALAMOUNTChanged();
        #endregion

        public Mutasiorder()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [Column(Name = @"`_id`", Storage = "_Id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "BIGINT(20) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
        public long Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging("Id");
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for MUTASIORDERID in the schema.
        /// </summary>
        [Column(Name = @"MUTASI_ORDER_ID", Storage = "_MUTASIORDERID", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string MUTASIORDERID
        {
            get
            {
                return this._MUTASIORDERID;
            }
            set
            {
                if (this._MUTASIORDERID != value)
                {
                    this.OnMUTASIORDERIDChanging(value);
                    this.SendPropertyChanging("MUTASIORDERID");
                    this._MUTASIORDERID = value;
                    this.SendPropertyChanged("MUTASIORDERID");
                    this.OnMUTASIORDERIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for STORECODE in the schema.
        /// </summary>
        [Column(Name = @"STORE_CODE", Storage = "_STORECODE", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string STORECODE
        {
            get
            {
                return this._STORECODE;
            }
            set
            {
                if (this._STORECODE != value)
                {
                    this.OnSTORECODEChanging(value);
                    this.SendPropertyChanging("STORECODE");
                    this._STORECODE = value;
                    this.SendPropertyChanged("STORECODE");
                    this.OnSTORECODEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for MUTASIFROMWAREHOUSE in the schema.
        /// </summary>
        [Column(Name = @"MUTASI_FROM_WAREHOUSE", Storage = "_MUTASIFROMWAREHOUSE", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string MUTASIFROMWAREHOUSE
        {
            get
            {
                return this._MUTASIFROMWAREHOUSE;
            }
            set
            {
                if (this._MUTASIFROMWAREHOUSE != value)
                {
                    this.OnMUTASIFROMWAREHOUSEChanging(value);
                    this.SendPropertyChanging("MUTASIFROMWAREHOUSE");
                    this._MUTASIFROMWAREHOUSE = value;
                    this.SendPropertyChanged("MUTASIFROMWAREHOUSE");
                    this.OnMUTASIFROMWAREHOUSEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for MUTASITOWAREHOUSE in the schema.
        /// </summary>
        [Column(Name = @"MUTASI_TO_WAREHOUSE", Storage = "_MUTASITOWAREHOUSE", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string MUTASITOWAREHOUSE
        {
            get
            {
                return this._MUTASITOWAREHOUSE;
            }
            set
            {
                if (this._MUTASITOWAREHOUSE != value)
                {
                    this.OnMUTASITOWAREHOUSEChanging(value);
                    this.SendPropertyChanging("MUTASITOWAREHOUSE");
                    this._MUTASITOWAREHOUSE = value;
                    this.SendPropertyChanged("MUTASITOWAREHOUSE");
                    this.OnMUTASITOWAREHOUSEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for REQUESTDELIVERYDATE in the schema.
        /// </summary>
        [Column(Name = @"REQUEST_DELIVERY_DATE", Storage = "_REQUESTDELIVERYDATE", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string REQUESTDELIVERYDATE
        {
            get
            {
                return this._REQUESTDELIVERYDATE;
            }
            set
            {
                if (this._REQUESTDELIVERYDATE != value)
                {
                    this.OnREQUESTDELIVERYDATEChanging(value);
                    this.SendPropertyChanging("REQUESTDELIVERYDATE");
                    this._REQUESTDELIVERYDATE = value;
                    this.SendPropertyChanged("REQUESTDELIVERYDATE");
                    this.OnREQUESTDELIVERYDATEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TOTALQTY in the schema.
        /// </summary>
        [Column(Name = @"TOTAL_QTY", Storage = "_TOTALQTY", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int TOTALQTY
        {
            get
            {
                return this._TOTALQTY;
            }
            set
            {
                if (this._TOTALQTY != value)
                {
                    this.OnTOTALQTYChanging(value);
                    this.SendPropertyChanging("TOTALQTY");
                    this._TOTALQTY = value;
                    this.SendPropertyChanged("TOTALQTY");
                    this.OnTOTALQTYChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for STATUS in the schema.
        /// </summary>
        [Column(Storage = "_STATUS", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int STATUS
        {
            get
            {
                return this._STATUS;
            }
            set
            {
                if (this._STATUS != value)
                {
                    this.OnSTATUSChanging(value);
                    this.SendPropertyChanging("STATUS");
                    this._STATUS = value;
                    this.SendPropertyChanged("STATUS");
                    this.OnSTATUSChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DATE in the schema.
        /// </summary>
        [Column(Name = @"`DATE`", Storage = "_DATE", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string DATE
        {
            get
            {
                return this._DATE;
            }
            set
            {
                if (this._DATE != value)
                {
                    this.OnDATEChanging(value);
                    this.SendPropertyChanging("DATE");
                    this._DATE = value;
                    this.SendPropertyChanged("DATE");
                    this.OnDATEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TIME in the schema.
        /// </summary>
        [Column(Name = @"`TIME`", Storage = "_TIME", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string TIME
        {
            get
            {
                return this._TIME;
            }
            set
            {
                if (this._TIME != value)
                {
                    this.OnTIMEChanging(value);
                    this.SendPropertyChanging("TIME");
                    this._TIME = value;
                    this.SendPropertyChanged("TIME");
                    this.OnTIMEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TIMESTAMP in the schema.
        /// </summary>
        [Column(Name = @"TIME_STAMP", Storage = "_TIMESTAMP", CanBeNull = false, DbType = "TIMESTAMP NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public System.DateTime TIMESTAMP
        {
            get
            {
                return this._TIMESTAMP;
            }
            set
            {
                if (this._TIMESTAMP != value)
                {
                    this.OnTIMESTAMPChanging(value);
                    this.SendPropertyChanging("TIMESTAMP");
                    this._TIMESTAMP = value;
                    this.SendPropertyChanged("TIMESTAMP");
                    this.OnTIMESTAMPChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for STATUSAPI in the schema.
        /// </summary>
        [Column(Name = @"STATUS_API", Storage = "_STATUSAPI", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int STATUSAPI
        {
            get
            {
                return this._STATUSAPI;
            }
            set
            {
                if (this._STATUSAPI != value)
                {
                    this.OnSTATUSAPIChanging(value);
                    this.SendPropertyChanging("STATUSAPI");
                    this._STATUSAPI = value;
                    this.SendPropertyChanged("STATUSAPI");
                    this.OnSTATUSAPIChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CUSTIDSTORE in the schema.
        /// </summary>
        [Column(Name = @"CUST_ID_STORE", Storage = "_CUSTIDSTORE", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string CUSTIDSTORE
        {
            get
            {
                return this._CUSTIDSTORE;
            }
            set
            {
                if (this._CUSTIDSTORE != value)
                {
                    this.OnCUSTIDSTOREChanging(value);
                    this.SendPropertyChanging("CUSTIDSTORE");
                    this._CUSTIDSTORE = value;
                    this.SendPropertyChanged("CUSTIDSTORE");
                    this.OnCUSTIDSTOREChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for EMPLOYEEID in the schema.
        /// </summary>
        [Column(Name = @"EMPLOYEE_ID", Storage = "_EMPLOYEEID", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string EMPLOYEEID
        {
            get
            {
                return this._EMPLOYEEID;
            }
            set
            {
                if (this._EMPLOYEEID != value)
                {
                    this.OnEMPLOYEEIDChanging(value);
                    this.SendPropertyChanging("EMPLOYEEID");
                    this._EMPLOYEEID = value;
                    this.SendPropertyChanged("EMPLOYEEID");
                    this.OnEMPLOYEEIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for EMPLOYEENAME in the schema.
        /// </summary>
        [Column(Name = @"EMPLOYEE_NAME", Storage = "_EMPLOYEENAME", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string EMPLOYEENAME
        {
            get
            {
                return this._EMPLOYEENAME;
            }
            set
            {
                if (this._EMPLOYEENAME != value)
                {
                    this.OnEMPLOYEENAMEChanging(value);
                    this.SendPropertyChanging("EMPLOYEENAME");
                    this._EMPLOYEENAME = value;
                    this.SendPropertyChanged("EMPLOYEENAME");
                    this.OnEMPLOYEENAMEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TOTALAMOUNT in the schema.
        /// </summary>
        [Column(Name = @"TOTAL_AMOUNT", Storage = "_TOTALAMOUNT", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int TOTALAMOUNT
        {
            get
            {
                return this._TOTALAMOUNT;
            }
            set
            {
                if (this._TOTALAMOUNT != value)
                {
                    this.OnTOTALAMOUNTChanging(value);
                    this.SendPropertyChanging("TOTALAMOUNT");
                    this._TOTALAMOUNT = value;
                    this.SendPropertyChanged("TOTALAMOUNT");
                    this.OnTOTALAMOUNTChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for BiensiPosDbContext.MutasiorderLine in the schema.
    /// </summary>
    [Table(Name = @"biensi_pos_db.mutasiorder_line")]
    public partial class MutasiorderLine : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private long _Id;

        private string _MUTASIORDERID = @"-";

        private string _ARTICLEID = @"-";

        private string _QUANTITY = @"-";

        private string _UNIT = @"-";

        private int _SUBTOTAL = 0;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(long value);
        partial void OnIdChanged();
        partial void OnMUTASIORDERIDChanging(string value);
        partial void OnMUTASIORDERIDChanged();
        partial void OnARTICLEIDChanging(string value);
        partial void OnARTICLEIDChanged();
        partial void OnQUANTITYChanging(string value);
        partial void OnQUANTITYChanged();
        partial void OnUNITChanging(string value);
        partial void OnUNITChanged();
        partial void OnSUBTOTALChanging(int value);
        partial void OnSUBTOTALChanged();
        #endregion

        public MutasiorderLine()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [Column(Name = @"`_id`", Storage = "_Id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "BIGINT(20) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
        public long Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging("Id");
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for MUTASIORDERID in the schema.
        /// </summary>
        [Column(Name = @"MUTASI_ORDER_ID", Storage = "_MUTASIORDERID", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string MUTASIORDERID
        {
            get
            {
                return this._MUTASIORDERID;
            }
            set
            {
                if (this._MUTASIORDERID != value)
                {
                    this.OnMUTASIORDERIDChanging(value);
                    this.SendPropertyChanging("MUTASIORDERID");
                    this._MUTASIORDERID = value;
                    this.SendPropertyChanged("MUTASIORDERID");
                    this.OnMUTASIORDERIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ARTICLEID in the schema.
        /// </summary>
        [Column(Name = @"ARTICLE_ID", Storage = "_ARTICLEID", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string ARTICLEID
        {
            get
            {
                return this._ARTICLEID;
            }
            set
            {
                if (this._ARTICLEID != value)
                {
                    this.OnARTICLEIDChanging(value);
                    this.SendPropertyChanging("ARTICLEID");
                    this._ARTICLEID = value;
                    this.SendPropertyChanged("ARTICLEID");
                    this.OnARTICLEIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for QUANTITY in the schema.
        /// </summary>
        [Column(Storage = "_QUANTITY", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string QUANTITY
        {
            get
            {
                return this._QUANTITY;
            }
            set
            {
                if (this._QUANTITY != value)
                {
                    this.OnQUANTITYChanging(value);
                    this.SendPropertyChanging("QUANTITY");
                    this._QUANTITY = value;
                    this.SendPropertyChanged("QUANTITY");
                    this.OnQUANTITYChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for UNIT in the schema.
        /// </summary>
        [Column(Storage = "_UNIT", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string UNIT
        {
            get
            {
                return this._UNIT;
            }
            set
            {
                if (this._UNIT != value)
                {
                    this.OnUNITChanging(value);
                    this.SendPropertyChanging("UNIT");
                    this._UNIT = value;
                    this.SendPropertyChanged("UNIT");
                    this.OnUNITChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for SUBTOTAL in the schema.
        /// </summary>
        [Column(Storage = "_SUBTOTAL", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int SUBTOTAL
        {
            get
            {
                return this._SUBTOTAL;
            }
            set
            {
                if (this._SUBTOTAL != value)
                {
                    this.OnSUBTOTALChanging(value);
                    this.SendPropertyChanging("SUBTOTAL");
                    this._SUBTOTAL = value;
                    this.SendPropertyChanged("SUBTOTAL");
                    this.OnSUBTOTALChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for BiensiPosDbContext.PassServiceTbl in the schema.
    /// </summary>
    [Table(Name = @"biensi_pos_db.pass_service_tbl")]
    public partial class PassServiceTbl : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private int _ID;

        private string _Pass;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIDChanging(int value);
        partial void OnIDChanged();
        partial void OnPassChanging(string value);
        partial void OnPassChanged();
        #endregion

        public PassServiceTbl()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for ID in the schema.
        /// </summary>
        [Column(Storage = "_ID", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "INT(11) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
        public int ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if (this._ID != value)
                {
                    this.OnIDChanging(value);
                    this.SendPropertyChanging("ID");
                    this._ID = value;
                    this.SendPropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Pass in the schema.
        /// </summary>
        [Column(Storage = "_Pass", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string Pass
        {
            get
            {
                return this._Pass;
            }
            set
            {
                if (this._Pass != value)
                {
                    this.OnPassChanging(value);
                    this.SendPropertyChanging("Pass");
                    this._Pass = value;
                    this.SendPropertyChanged("Pass");
                    this.OnPassChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for BiensiPosDbContext.Pettycash in the schema.
    /// </summary>
    [Table(Name = @"biensi_pos_db.pettycash")]
    public partial class Pettycash : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private long _Id;

        private string _PETTYCASHID = @"-";

        private string _STORECODE = @"-";

        private string _EXPENSECATEGORYID = @"-";

        private string _EXPENSECATEGORY = @"-";

        private string _EXPENSEDATE = @"-";

        private string _DESCRIPTION = @"-";

        private int _TOTALEXPENSE = 0;

        private int _STATUS = 0;

        private string _DATE = @"-";

        private string _TIME = @"-";

        private System.DateTime _TIMESTAMP = DateTime.Now;

        private int _STATUSAPI = 0;

        private string _CUSTIDSTORE = @"-";
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(long value);
        partial void OnIdChanged();
        partial void OnPETTYCASHIDChanging(string value);
        partial void OnPETTYCASHIDChanged();
        partial void OnSTORECODEChanging(string value);
        partial void OnSTORECODEChanged();
        partial void OnEXPENSECATEGORYIDChanging(string value);
        partial void OnEXPENSECATEGORYIDChanged();
        partial void OnEXPENSECATEGORYChanging(string value);
        partial void OnEXPENSECATEGORYChanged();
        partial void OnEXPENSEDATEChanging(string value);
        partial void OnEXPENSEDATEChanged();
        partial void OnDESCRIPTIONChanging(string value);
        partial void OnDESCRIPTIONChanged();
        partial void OnTOTALEXPENSEChanging(int value);
        partial void OnTOTALEXPENSEChanged();
        partial void OnSTATUSChanging(int value);
        partial void OnSTATUSChanged();
        partial void OnDATEChanging(string value);
        partial void OnDATEChanged();
        partial void OnTIMEChanging(string value);
        partial void OnTIMEChanged();
        partial void OnTIMESTAMPChanging(System.DateTime value);
        partial void OnTIMESTAMPChanged();
        partial void OnSTATUSAPIChanging(int value);
        partial void OnSTATUSAPIChanged();
        partial void OnCUSTIDSTOREChanging(string value);
        partial void OnCUSTIDSTOREChanged();
        #endregion

        public Pettycash()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [Column(Name = @"`_id`", Storage = "_Id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "BIGINT(20) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
        public long Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging("Id");
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PETTYCASHID in the schema.
        /// </summary>
        [Column(Name = @"PETTY_CASH_ID", Storage = "_PETTYCASHID", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string PETTYCASHID
        {
            get
            {
                return this._PETTYCASHID;
            }
            set
            {
                if (this._PETTYCASHID != value)
                {
                    this.OnPETTYCASHIDChanging(value);
                    this.SendPropertyChanging("PETTYCASHID");
                    this._PETTYCASHID = value;
                    this.SendPropertyChanged("PETTYCASHID");
                    this.OnPETTYCASHIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for STORECODE in the schema.
        /// </summary>
        [Column(Name = @"STORE_CODE", Storage = "_STORECODE", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string STORECODE
        {
            get
            {
                return this._STORECODE;
            }
            set
            {
                if (this._STORECODE != value)
                {
                    this.OnSTORECODEChanging(value);
                    this.SendPropertyChanging("STORECODE");
                    this._STORECODE = value;
                    this.SendPropertyChanged("STORECODE");
                    this.OnSTORECODEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for EXPENSECATEGORYID in the schema.
        /// </summary>
        [Column(Name = @"EXPENSE_CATEGORY_ID", Storage = "_EXPENSECATEGORYID", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string EXPENSECATEGORYID
        {
            get
            {
                return this._EXPENSECATEGORYID;
            }
            set
            {
                if (this._EXPENSECATEGORYID != value)
                {
                    this.OnEXPENSECATEGORYIDChanging(value);
                    this.SendPropertyChanging("EXPENSECATEGORYID");
                    this._EXPENSECATEGORYID = value;
                    this.SendPropertyChanged("EXPENSECATEGORYID");
                    this.OnEXPENSECATEGORYIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for EXPENSECATEGORY in the schema.
        /// </summary>
        [Column(Name = @"EXPENSE_CATEGORY", Storage = "_EXPENSECATEGORY", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string EXPENSECATEGORY
        {
            get
            {
                return this._EXPENSECATEGORY;
            }
            set
            {
                if (this._EXPENSECATEGORY != value)
                {
                    this.OnEXPENSECATEGORYChanging(value);
                    this.SendPropertyChanging("EXPENSECATEGORY");
                    this._EXPENSECATEGORY = value;
                    this.SendPropertyChanged("EXPENSECATEGORY");
                    this.OnEXPENSECATEGORYChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for EXPENSEDATE in the schema.
        /// </summary>
        [Column(Name = @"EXPENSE_DATE", Storage = "_EXPENSEDATE", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string EXPENSEDATE
        {
            get
            {
                return this._EXPENSEDATE;
            }
            set
            {
                if (this._EXPENSEDATE != value)
                {
                    this.OnEXPENSEDATEChanging(value);
                    this.SendPropertyChanging("EXPENSEDATE");
                    this._EXPENSEDATE = value;
                    this.SendPropertyChanged("EXPENSEDATE");
                    this.OnEXPENSEDATEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DESCRIPTION in the schema.
        /// </summary>
        [Column(Storage = "_DESCRIPTION", CanBeNull = false, DbType = "VARCHAR(300) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string DESCRIPTION
        {
            get
            {
                return this._DESCRIPTION;
            }
            set
            {
                if (this._DESCRIPTION != value)
                {
                    this.OnDESCRIPTIONChanging(value);
                    this.SendPropertyChanging("DESCRIPTION");
                    this._DESCRIPTION = value;
                    this.SendPropertyChanged("DESCRIPTION");
                    this.OnDESCRIPTIONChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TOTALEXPENSE in the schema.
        /// </summary>
        [Column(Name = @"TOTAL_EXPENSE", Storage = "_TOTALEXPENSE", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int TOTALEXPENSE
        {
            get
            {
                return this._TOTALEXPENSE;
            }
            set
            {
                if (this._TOTALEXPENSE != value)
                {
                    this.OnTOTALEXPENSEChanging(value);
                    this.SendPropertyChanging("TOTALEXPENSE");
                    this._TOTALEXPENSE = value;
                    this.SendPropertyChanged("TOTALEXPENSE");
                    this.OnTOTALEXPENSEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for STATUS in the schema.
        /// </summary>
        [Column(Storage = "_STATUS", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int STATUS
        {
            get
            {
                return this._STATUS;
            }
            set
            {
                if (this._STATUS != value)
                {
                    this.OnSTATUSChanging(value);
                    this.SendPropertyChanging("STATUS");
                    this._STATUS = value;
                    this.SendPropertyChanged("STATUS");
                    this.OnSTATUSChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DATE in the schema.
        /// </summary>
        [Column(Name = @"`DATE`", Storage = "_DATE", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string DATE
        {
            get
            {
                return this._DATE;
            }
            set
            {
                if (this._DATE != value)
                {
                    this.OnDATEChanging(value);
                    this.SendPropertyChanging("DATE");
                    this._DATE = value;
                    this.SendPropertyChanged("DATE");
                    this.OnDATEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TIME in the schema.
        /// </summary>
        [Column(Name = @"`TIME`", Storage = "_TIME", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string TIME
        {
            get
            {
                return this._TIME;
            }
            set
            {
                if (this._TIME != value)
                {
                    this.OnTIMEChanging(value);
                    this.SendPropertyChanging("TIME");
                    this._TIME = value;
                    this.SendPropertyChanged("TIME");
                    this.OnTIMEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TIMESTAMP in the schema.
        /// </summary>
        [Column(Name = @"TIME_STAMP", Storage = "_TIMESTAMP", CanBeNull = false, DbType = "TIMESTAMP NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public System.DateTime TIMESTAMP
        {
            get
            {
                return this._TIMESTAMP;
            }
            set
            {
                if (this._TIMESTAMP != value)
                {
                    this.OnTIMESTAMPChanging(value);
                    this.SendPropertyChanging("TIMESTAMP");
                    this._TIMESTAMP = value;
                    this.SendPropertyChanged("TIMESTAMP");
                    this.OnTIMESTAMPChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for STATUSAPI in the schema.
        /// </summary>
        [Column(Name = @"STATUS_API", Storage = "_STATUSAPI", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int STATUSAPI
        {
            get
            {
                return this._STATUSAPI;
            }
            set
            {
                if (this._STATUSAPI != value)
                {
                    this.OnSTATUSAPIChanging(value);
                    this.SendPropertyChanging("STATUSAPI");
                    this._STATUSAPI = value;
                    this.SendPropertyChanged("STATUSAPI");
                    this.OnSTATUSAPIChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CUSTIDSTORE in the schema.
        /// </summary>
        [Column(Name = @"CUST_ID_STORE", Storage = "_CUSTIDSTORE", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string CUSTIDSTORE
        {
            get
            {
                return this._CUSTIDSTORE;
            }
            set
            {
                if (this._CUSTIDSTORE != value)
                {
                    this.OnCUSTIDSTOREChanging(value);
                    this.SendPropertyChanging("CUSTIDSTORE");
                    this._CUSTIDSTORE = value;
                    this.SendPropertyChanged("CUSTIDSTORE");
                    this.OnCUSTIDSTOREChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for BiensiPosDbContext.PettycashLine in the schema.
    /// </summary>
    [Table(Name = @"biensi_pos_db.pettycash_line")]
    public partial class PettycashLine : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private long _Id;

        private string _PETTYCASHID = @"-";

        private string _EXPENSENAME = @"-";

        private int _QUANTITY = 0;

        private double _PRICE = 0;

        private double _TOTAL = 0;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(long value);
        partial void OnIdChanged();
        partial void OnPETTYCASHIDChanging(string value);
        partial void OnPETTYCASHIDChanged();
        partial void OnEXPENSENAMEChanging(string value);
        partial void OnEXPENSENAMEChanged();
        partial void OnQUANTITYChanging(int value);
        partial void OnQUANTITYChanged();
        partial void OnPRICEChanging(double value);
        partial void OnPRICEChanged();
        partial void OnTOTALChanging(double value);
        partial void OnTOTALChanged();
        #endregion

        public PettycashLine()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [Column(Name = @"`_id`", Storage = "_Id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "BIGINT(20) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
        public long Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging("Id");
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PETTYCASHID in the schema.
        /// </summary>
        [Column(Name = @"PETTY_CASH_ID", Storage = "_PETTYCASHID", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string PETTYCASHID
        {
            get
            {
                return this._PETTYCASHID;
            }
            set
            {
                if (this._PETTYCASHID != value)
                {
                    this.OnPETTYCASHIDChanging(value);
                    this.SendPropertyChanging("PETTYCASHID");
                    this._PETTYCASHID = value;
                    this.SendPropertyChanged("PETTYCASHID");
                    this.OnPETTYCASHIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for EXPENSENAME in the schema.
        /// </summary>
        [Column(Name = @"EXPENSE_NAME", Storage = "_EXPENSENAME", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string EXPENSENAME
        {
            get
            {
                return this._EXPENSENAME;
            }
            set
            {
                if (this._EXPENSENAME != value)
                {
                    this.OnEXPENSENAMEChanging(value);
                    this.SendPropertyChanging("EXPENSENAME");
                    this._EXPENSENAME = value;
                    this.SendPropertyChanged("EXPENSENAME");
                    this.OnEXPENSENAMEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for QUANTITY in the schema.
        /// </summary>
        [Column(Storage = "_QUANTITY", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int QUANTITY
        {
            get
            {
                return this._QUANTITY;
            }
            set
            {
                if (this._QUANTITY != value)
                {
                    this.OnQUANTITYChanging(value);
                    this.SendPropertyChanging("QUANTITY");
                    this._QUANTITY = value;
                    this.SendPropertyChanged("QUANTITY");
                    this.OnQUANTITYChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PRICE in the schema.
        /// </summary>
        [Column(Storage = "_PRICE", CanBeNull = false, DbType = "DOUBLE NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public double PRICE
        {
            get
            {
                return this._PRICE;
            }
            set
            {
                if (this._PRICE != value)
                {
                    this.OnPRICEChanging(value);
                    this.SendPropertyChanging("PRICE");
                    this._PRICE = value;
                    this.SendPropertyChanged("PRICE");
                    this.OnPRICEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TOTAL in the schema.
        /// </summary>
        [Column(Storage = "_TOTAL", CanBeNull = false, DbType = "DOUBLE NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public double TOTAL
        {
            get
            {
                return this._TOTAL;
            }
            set
            {
                if (this._TOTAL != value)
                {
                    this.OnTOTALChanging(value);
                    this.SendPropertyChanging("TOTAL");
                    this._TOTAL = value;
                    this.SendPropertyChanged("TOTAL");
                    this.OnTOTALChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for BiensiPosDbContext.Position in the schema.
    /// </summary>
    [Table(Name = @"biensi_pos_db.position")]
    public partial class Position
    {
        #pragma warning disable 0649

        private long _Id = 0;

        private string _POSITIONID = @"-";

        private string _POSITIONNAME = @"-";
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(long value);
        partial void OnIdChanged();
        partial void OnPOSITIONIDChanging(string value);
        partial void OnPOSITIONIDChanged();
        partial void OnPOSITIONNAMEChanging(string value);
        partial void OnPOSITIONNAMEChanged();
        #endregion

        public Position()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [Column(Name = @"`_id`", Storage = "_Id", CanBeNull = false, DbType = "BIGINT(20) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public long Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this._Id = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for POSITIONID in the schema.
        /// </summary>
        [Column(Name = @"POSITION_ID", Storage = "_POSITIONID", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string POSITIONID
        {
            get
            {
                return this._POSITIONID;
            }
            set
            {
                if (this._POSITIONID != value)
                {
                    this._POSITIONID = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for POSITIONNAME in the schema.
        /// </summary>
        [Column(Name = @"POSITION_NAME", Storage = "_POSITIONNAME", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string POSITIONNAME
        {
            get
            {
                return this._POSITIONNAME;
            }
            set
            {
                if (this._POSITIONNAME != value)
                {
                    this._POSITIONNAME = value;
                }
            }
        }
    }

    /// <summary>
    /// There are no comments for BiensiPosDbContext.Promotion in the schema.
    /// </summary>
    [Table(Name = @"biensi_pos_db.promotion")]
    public partial class Promotion : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private long _Id = 0;

        private string _DISCOUNTCODE = @"-";

        private string _DISCOUNTNAME = @"-";

        private string _DISCOUNTCATEGORY = @"-";

        private string _DESCRIPTION = @"-";

        private string _STARTDATE = @"-";

        private string _ENDDATE = @"-";

        private int _STATUS = 0;

        private string _ARTICLEID = @"-";

        private int _DISCOUNTTYPE = 0;

        private string _DISCOUNTDESC = @"-";
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(long value);
        partial void OnIdChanged();
        partial void OnDISCOUNTCODEChanging(string value);
        partial void OnDISCOUNTCODEChanged();
        partial void OnDISCOUNTNAMEChanging(string value);
        partial void OnDISCOUNTNAMEChanged();
        partial void OnDISCOUNTCATEGORYChanging(string value);
        partial void OnDISCOUNTCATEGORYChanged();
        partial void OnDESCRIPTIONChanging(string value);
        partial void OnDESCRIPTIONChanged();
        partial void OnSTARTDATEChanging(string value);
        partial void OnSTARTDATEChanged();
        partial void OnENDDATEChanging(string value);
        partial void OnENDDATEChanged();
        partial void OnSTATUSChanging(int value);
        partial void OnSTATUSChanged();
        partial void OnARTICLEIDChanging(string value);
        partial void OnARTICLEIDChanged();
        partial void OnDISCOUNTTYPEChanging(int value);
        partial void OnDISCOUNTTYPEChanged();
        partial void OnDISCOUNTDESCChanging(string value);
        partial void OnDISCOUNTDESCChanged();
        #endregion

        public Promotion()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [Column(Name = @"`_id`", Storage = "_Id", CanBeNull = false, DbType = "BIGINT(20) NOT NULL", IsPrimaryKey = true)]
        public long Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging("Id");
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DISCOUNTCODE in the schema.
        /// </summary>
        [Column(Name = @"DISCOUNT_CODE", Storage = "_DISCOUNTCODE", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string DISCOUNTCODE
        {
            get
            {
                return this._DISCOUNTCODE;
            }
            set
            {
                if (this._DISCOUNTCODE != value)
                {
                    this.OnDISCOUNTCODEChanging(value);
                    this.SendPropertyChanging("DISCOUNTCODE");
                    this._DISCOUNTCODE = value;
                    this.SendPropertyChanged("DISCOUNTCODE");
                    this.OnDISCOUNTCODEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DISCOUNTNAME in the schema.
        /// </summary>
        [Column(Name = @"DISCOUNT_NAME", Storage = "_DISCOUNTNAME", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string DISCOUNTNAME
        {
            get
            {
                return this._DISCOUNTNAME;
            }
            set
            {
                if (this._DISCOUNTNAME != value)
                {
                    this.OnDISCOUNTNAMEChanging(value);
                    this.SendPropertyChanging("DISCOUNTNAME");
                    this._DISCOUNTNAME = value;
                    this.SendPropertyChanged("DISCOUNTNAME");
                    this.OnDISCOUNTNAMEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DISCOUNTCATEGORY in the schema.
        /// </summary>
        [Column(Name = @"DISCOUNT_CATEGORY", Storage = "_DISCOUNTCATEGORY", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string DISCOUNTCATEGORY
        {
            get
            {
                return this._DISCOUNTCATEGORY;
            }
            set
            {
                if (this._DISCOUNTCATEGORY != value)
                {
                    this.OnDISCOUNTCATEGORYChanging(value);
                    this.SendPropertyChanging("DISCOUNTCATEGORY");
                    this._DISCOUNTCATEGORY = value;
                    this.SendPropertyChanged("DISCOUNTCATEGORY");
                    this.OnDISCOUNTCATEGORYChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DESCRIPTION in the schema.
        /// </summary>
        [Column(Storage = "_DESCRIPTION", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string DESCRIPTION
        {
            get
            {
                return this._DESCRIPTION;
            }
            set
            {
                if (this._DESCRIPTION != value)
                {
                    this.OnDESCRIPTIONChanging(value);
                    this.SendPropertyChanging("DESCRIPTION");
                    this._DESCRIPTION = value;
                    this.SendPropertyChanged("DESCRIPTION");
                    this.OnDESCRIPTIONChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for STARTDATE in the schema.
        /// </summary>
        [Column(Name = @"START_DATE", Storage = "_STARTDATE", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string STARTDATE
        {
            get
            {
                return this._STARTDATE;
            }
            set
            {
                if (this._STARTDATE != value)
                {
                    this.OnSTARTDATEChanging(value);
                    this.SendPropertyChanging("STARTDATE");
                    this._STARTDATE = value;
                    this.SendPropertyChanged("STARTDATE");
                    this.OnSTARTDATEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ENDDATE in the schema.
        /// </summary>
        [Column(Name = @"END_DATE", Storage = "_ENDDATE", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string ENDDATE
        {
            get
            {
                return this._ENDDATE;
            }
            set
            {
                if (this._ENDDATE != value)
                {
                    this.OnENDDATEChanging(value);
                    this.SendPropertyChanging("ENDDATE");
                    this._ENDDATE = value;
                    this.SendPropertyChanged("ENDDATE");
                    this.OnENDDATEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for STATUS in the schema.
        /// </summary>
        [Column(Storage = "_STATUS", CanBeNull = false, DbType = "INT(10) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int STATUS
        {
            get
            {
                return this._STATUS;
            }
            set
            {
                if (this._STATUS != value)
                {
                    this.OnSTATUSChanging(value);
                    this.SendPropertyChanging("STATUS");
                    this._STATUS = value;
                    this.SendPropertyChanged("STATUS");
                    this.OnSTATUSChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ARTICLEID in the schema.
        /// </summary>
        [Column(Name = @"ARTICLE_ID", Storage = "_ARTICLEID", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string ARTICLEID
        {
            get
            {
                return this._ARTICLEID;
            }
            set
            {
                if (this._ARTICLEID != value)
                {
                    this.OnARTICLEIDChanging(value);
                    this.SendPropertyChanging("ARTICLEID");
                    this._ARTICLEID = value;
                    this.SendPropertyChanged("ARTICLEID");
                    this.OnARTICLEIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DISCOUNTTYPE in the schema.
        /// </summary>
        [Column(Name = @"DISCOUNT_TYPE", Storage = "_DISCOUNTTYPE", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int DISCOUNTTYPE
        {
            get
            {
                return this._DISCOUNTTYPE;
            }
            set
            {
                if (this._DISCOUNTTYPE != value)
                {
                    this.OnDISCOUNTTYPEChanging(value);
                    this.SendPropertyChanging("DISCOUNTTYPE");
                    this._DISCOUNTTYPE = value;
                    this.SendPropertyChanged("DISCOUNTTYPE");
                    this.OnDISCOUNTTYPEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DISCOUNTDESC in the schema.
        /// </summary>
        [Column(Name = @"DISCOUNT_DESC", Storage = "_DISCOUNTDESC", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string DISCOUNTDESC
        {
            get
            {
                return this._DISCOUNTDESC;
            }
            set
            {
                if (this._DISCOUNTDESC != value)
                {
                    this.OnDISCOUNTDESCChanging(value);
                    this.SendPropertyChanging("DISCOUNTDESC");
                    this._DISCOUNTDESC = value;
                    this.SendPropertyChanged("DISCOUNTDESC");
                    this.OnDISCOUNTDESCChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for BiensiPosDbContext.PromotionLine in the schema.
    /// </summary>
    [Table(Name = @"biensi_pos_db.promotion_line")]
    public partial class PromotionLine : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private long _Id = 0;

        private long _PROMOTIONIDFK = 0;

        private string _DISCOUNTCODE = @"-";

        private string _ARTICLEID = @"-";

        private string _ARTICLENAME = @"-";

        private string _BRAND = @"-";

        private string _SIZE = @"-";

        private string _COLOR = @"-";

        private string _GENDER = @"-";

        private string _DEPARTMENT = @"-";

        private string _DEPARTMENTTYPE = @"-";

        private string _CUSTOMERGROUP = @"-";

        private string _QTA = @"-";

        private string _AMOUNT = @"-";

        private string _BANK = @"-";

        private string _DISCOUNTPERCENT = @"-";

        private string _DISCOUNTPRICE = @"-";

        private string _SPESIALPRICE = @"-";

        private string _ARTICLEIDDISCOUNT = @"-";

        private string _ARTICLENAMEDISCOUNT = @"-";
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(long value);
        partial void OnIdChanged();
        partial void OnPROMOTIONIDFKChanging(long value);
        partial void OnPROMOTIONIDFKChanged();
        partial void OnDISCOUNTCODEChanging(string value);
        partial void OnDISCOUNTCODEChanged();
        partial void OnARTICLEIDChanging(string value);
        partial void OnARTICLEIDChanged();
        partial void OnARTICLENAMEChanging(string value);
        partial void OnARTICLENAMEChanged();
        partial void OnBRANDChanging(string value);
        partial void OnBRANDChanged();
        partial void OnSIZEChanging(string value);
        partial void OnSIZEChanged();
        partial void OnCOLORChanging(string value);
        partial void OnCOLORChanged();
        partial void OnGENDERChanging(string value);
        partial void OnGENDERChanged();
        partial void OnDEPARTMENTChanging(string value);
        partial void OnDEPARTMENTChanged();
        partial void OnDEPARTMENTTYPEChanging(string value);
        partial void OnDEPARTMENTTYPEChanged();
        partial void OnCUSTOMERGROUPChanging(string value);
        partial void OnCUSTOMERGROUPChanged();
        partial void OnQTAChanging(string value);
        partial void OnQTAChanged();
        partial void OnAMOUNTChanging(string value);
        partial void OnAMOUNTChanged();
        partial void OnBANKChanging(string value);
        partial void OnBANKChanged();
        partial void OnDISCOUNTPERCENTChanging(string value);
        partial void OnDISCOUNTPERCENTChanged();
        partial void OnDISCOUNTPRICEChanging(string value);
        partial void OnDISCOUNTPRICEChanged();
        partial void OnSPESIALPRICEChanging(string value);
        partial void OnSPESIALPRICEChanged();
        partial void OnARTICLEIDDISCOUNTChanging(string value);
        partial void OnARTICLEIDDISCOUNTChanged();
        partial void OnARTICLENAMEDISCOUNTChanging(string value);
        partial void OnARTICLENAMEDISCOUNTChanged();
        #endregion

        public PromotionLine()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [Column(Name = @"`_id`", Storage = "_Id", CanBeNull = false, DbType = "BIGINT(20) NOT NULL", IsPrimaryKey = true)]
        public long Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging("Id");
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PROMOTIONIDFK in the schema.
        /// </summary>
        [Column(Name = @"PROMOTION_ID_FK", Storage = "_PROMOTIONIDFK", CanBeNull = false, DbType = "BIGINT(20) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public long PROMOTIONIDFK
        {
            get
            {
                return this._PROMOTIONIDFK;
            }
            set
            {
                if (this._PROMOTIONIDFK != value)
                {
                    this.OnPROMOTIONIDFKChanging(value);
                    this.SendPropertyChanging("PROMOTIONIDFK");
                    this._PROMOTIONIDFK = value;
                    this.SendPropertyChanged("PROMOTIONIDFK");
                    this.OnPROMOTIONIDFKChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DISCOUNTCODE in the schema.
        /// </summary>
        [Column(Name = @"DISCOUNT_CODE", Storage = "_DISCOUNTCODE", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string DISCOUNTCODE
        {
            get
            {
                return this._DISCOUNTCODE;
            }
            set
            {
                if (this._DISCOUNTCODE != value)
                {
                    this.OnDISCOUNTCODEChanging(value);
                    this.SendPropertyChanging("DISCOUNTCODE");
                    this._DISCOUNTCODE = value;
                    this.SendPropertyChanged("DISCOUNTCODE");
                    this.OnDISCOUNTCODEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ARTICLEID in the schema.
        /// </summary>
        [Column(Name = @"ARTICLE_ID", Storage = "_ARTICLEID", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string ARTICLEID
        {
            get
            {
                return this._ARTICLEID;
            }
            set
            {
                if (this._ARTICLEID != value)
                {
                    this.OnARTICLEIDChanging(value);
                    this.SendPropertyChanging("ARTICLEID");
                    this._ARTICLEID = value;
                    this.SendPropertyChanged("ARTICLEID");
                    this.OnARTICLEIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ARTICLENAME in the schema.
        /// </summary>
        [Column(Name = @"ARTICLE_NAME", Storage = "_ARTICLENAME", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string ARTICLENAME
        {
            get
            {
                return this._ARTICLENAME;
            }
            set
            {
                if (this._ARTICLENAME != value)
                {
                    this.OnARTICLENAMEChanging(value);
                    this.SendPropertyChanging("ARTICLENAME");
                    this._ARTICLENAME = value;
                    this.SendPropertyChanged("ARTICLENAME");
                    this.OnARTICLENAMEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for BRAND in the schema.
        /// </summary>
        [Column(Storage = "_BRAND", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string BRAND
        {
            get
            {
                return this._BRAND;
            }
            set
            {
                if (this._BRAND != value)
                {
                    this.OnBRANDChanging(value);
                    this.SendPropertyChanging("BRAND");
                    this._BRAND = value;
                    this.SendPropertyChanged("BRAND");
                    this.OnBRANDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for SIZE in the schema.
        /// </summary>
        [Column(Storage = "_SIZE", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string SIZE
        {
            get
            {
                return this._SIZE;
            }
            set
            {
                if (this._SIZE != value)
                {
                    this.OnSIZEChanging(value);
                    this.SendPropertyChanging("SIZE");
                    this._SIZE = value;
                    this.SendPropertyChanged("SIZE");
                    this.OnSIZEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for COLOR in the schema.
        /// </summary>
        [Column(Storage = "_COLOR", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string COLOR
        {
            get
            {
                return this._COLOR;
            }
            set
            {
                if (this._COLOR != value)
                {
                    this.OnCOLORChanging(value);
                    this.SendPropertyChanging("COLOR");
                    this._COLOR = value;
                    this.SendPropertyChanged("COLOR");
                    this.OnCOLORChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for GENDER in the schema.
        /// </summary>
        [Column(Storage = "_GENDER", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string GENDER
        {
            get
            {
                return this._GENDER;
            }
            set
            {
                if (this._GENDER != value)
                {
                    this.OnGENDERChanging(value);
                    this.SendPropertyChanging("GENDER");
                    this._GENDER = value;
                    this.SendPropertyChanged("GENDER");
                    this.OnGENDERChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DEPARTMENT in the schema.
        /// </summary>
        [Column(Storage = "_DEPARTMENT", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string DEPARTMENT
        {
            get
            {
                return this._DEPARTMENT;
            }
            set
            {
                if (this._DEPARTMENT != value)
                {
                    this.OnDEPARTMENTChanging(value);
                    this.SendPropertyChanging("DEPARTMENT");
                    this._DEPARTMENT = value;
                    this.SendPropertyChanged("DEPARTMENT");
                    this.OnDEPARTMENTChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DEPARTMENTTYPE in the schema.
        /// </summary>
        [Column(Name = @"DEPARTMENT_TYPE", Storage = "_DEPARTMENTTYPE", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string DEPARTMENTTYPE
        {
            get
            {
                return this._DEPARTMENTTYPE;
            }
            set
            {
                if (this._DEPARTMENTTYPE != value)
                {
                    this.OnDEPARTMENTTYPEChanging(value);
                    this.SendPropertyChanging("DEPARTMENTTYPE");
                    this._DEPARTMENTTYPE = value;
                    this.SendPropertyChanged("DEPARTMENTTYPE");
                    this.OnDEPARTMENTTYPEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CUSTOMERGROUP in the schema.
        /// </summary>
        [Column(Name = @"CUSTOMER_GROUP", Storage = "_CUSTOMERGROUP", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string CUSTOMERGROUP
        {
            get
            {
                return this._CUSTOMERGROUP;
            }
            set
            {
                if (this._CUSTOMERGROUP != value)
                {
                    this.OnCUSTOMERGROUPChanging(value);
                    this.SendPropertyChanging("CUSTOMERGROUP");
                    this._CUSTOMERGROUP = value;
                    this.SendPropertyChanged("CUSTOMERGROUP");
                    this.OnCUSTOMERGROUPChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for QTA in the schema.
        /// </summary>
        [Column(Storage = "_QTA", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string QTA
        {
            get
            {
                return this._QTA;
            }
            set
            {
                if (this._QTA != value)
                {
                    this.OnQTAChanging(value);
                    this.SendPropertyChanging("QTA");
                    this._QTA = value;
                    this.SendPropertyChanged("QTA");
                    this.OnQTAChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for AMOUNT in the schema.
        /// </summary>
        [Column(Storage = "_AMOUNT", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string AMOUNT
        {
            get
            {
                return this._AMOUNT;
            }
            set
            {
                if (this._AMOUNT != value)
                {
                    this.OnAMOUNTChanging(value);
                    this.SendPropertyChanging("AMOUNT");
                    this._AMOUNT = value;
                    this.SendPropertyChanged("AMOUNT");
                    this.OnAMOUNTChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for BANK in the schema.
        /// </summary>
        [Column(Storage = "_BANK", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string BANK
        {
            get
            {
                return this._BANK;
            }
            set
            {
                if (this._BANK != value)
                {
                    this.OnBANKChanging(value);
                    this.SendPropertyChanging("BANK");
                    this._BANK = value;
                    this.SendPropertyChanged("BANK");
                    this.OnBANKChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DISCOUNTPERCENT in the schema.
        /// </summary>
        [Column(Name = @"DISCOUNT_PERCENT", Storage = "_DISCOUNTPERCENT", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string DISCOUNTPERCENT
        {
            get
            {
                return this._DISCOUNTPERCENT;
            }
            set
            {
                if (this._DISCOUNTPERCENT != value)
                {
                    this.OnDISCOUNTPERCENTChanging(value);
                    this.SendPropertyChanging("DISCOUNTPERCENT");
                    this._DISCOUNTPERCENT = value;
                    this.SendPropertyChanged("DISCOUNTPERCENT");
                    this.OnDISCOUNTPERCENTChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DISCOUNTPRICE in the schema.
        /// </summary>
        [Column(Name = @"DISCOUNT_PRICE", Storage = "_DISCOUNTPRICE", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string DISCOUNTPRICE
        {
            get
            {
                return this._DISCOUNTPRICE;
            }
            set
            {
                if (this._DISCOUNTPRICE != value)
                {
                    this.OnDISCOUNTPRICEChanging(value);
                    this.SendPropertyChanging("DISCOUNTPRICE");
                    this._DISCOUNTPRICE = value;
                    this.SendPropertyChanged("DISCOUNTPRICE");
                    this.OnDISCOUNTPRICEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for SPESIALPRICE in the schema.
        /// </summary>
        [Column(Name = @"SPESIAL_PRICE", Storage = "_SPESIALPRICE", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string SPESIALPRICE
        {
            get
            {
                return this._SPESIALPRICE;
            }
            set
            {
                if (this._SPESIALPRICE != value)
                {
                    this.OnSPESIALPRICEChanging(value);
                    this.SendPropertyChanging("SPESIALPRICE");
                    this._SPESIALPRICE = value;
                    this.SendPropertyChanged("SPESIALPRICE");
                    this.OnSPESIALPRICEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ARTICLEIDDISCOUNT in the schema.
        /// </summary>
        [Column(Name = @"ARTICLE_ID_DISCOUNT", Storage = "_ARTICLEIDDISCOUNT", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string ARTICLEIDDISCOUNT
        {
            get
            {
                return this._ARTICLEIDDISCOUNT;
            }
            set
            {
                if (this._ARTICLEIDDISCOUNT != value)
                {
                    this.OnARTICLEIDDISCOUNTChanging(value);
                    this.SendPropertyChanging("ARTICLEIDDISCOUNT");
                    this._ARTICLEIDDISCOUNT = value;
                    this.SendPropertyChanged("ARTICLEIDDISCOUNT");
                    this.OnARTICLEIDDISCOUNTChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ARTICLENAMEDISCOUNT in the schema.
        /// </summary>
        [Column(Name = @"ARTICLE_NAME_DISCOUNT", Storage = "_ARTICLENAMEDISCOUNT", CanBeNull = false, DbType = "VARCHAR(100) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string ARTICLENAMEDISCOUNT
        {
            get
            {
                return this._ARTICLENAMEDISCOUNT;
            }
            set
            {
                if (this._ARTICLENAMEDISCOUNT != value)
                {
                    this.OnARTICLENAMEDISCOUNTChanging(value);
                    this.SendPropertyChanging("ARTICLENAMEDISCOUNT");
                    this._ARTICLENAMEDISCOUNT = value;
                    this.SendPropertyChanged("ARTICLENAMEDISCOUNT");
                    this.OnARTICLENAMEDISCOUNTChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for BiensiPosDbContext.Requestorder in the schema.
    /// </summary>
    [Table(Name = @"biensi_pos_db.requestorder")]
    public partial class Requestorder : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private long _Id;

        private string _REQUESTORDERID = @"-";

        private string _STORECODE = @"-";

        private string _REQUESTDELIVERYDATE = @"-";

        private int _TOTALQTY = 0;

        private int _STATUS = 0;

        private string _DATE = @"-";

        private string _TIME = @"-";

        private System.DateTime _TIMESTAMP = DateTime.Now;

        private string _WAREHOUSEID = @"-";

        private int _STATUSAPI = 0;

        private string _CUSTIDSTORE = @"-";

        private string _EMPLOYEEID = @"-";

        private string _EMPLOYEENAME = @"-";

        private string _DESCRIPTION = @"-";

        private int _TOTALAMOUNT = 0;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(long value);
        partial void OnIdChanged();
        partial void OnREQUESTORDERIDChanging(string value);
        partial void OnREQUESTORDERIDChanged();
        partial void OnSTORECODEChanging(string value);
        partial void OnSTORECODEChanged();
        partial void OnREQUESTDELIVERYDATEChanging(string value);
        partial void OnREQUESTDELIVERYDATEChanged();
        partial void OnTOTALQTYChanging(int value);
        partial void OnTOTALQTYChanged();
        partial void OnSTATUSChanging(int value);
        partial void OnSTATUSChanged();
        partial void OnDATEChanging(string value);
        partial void OnDATEChanged();
        partial void OnTIMEChanging(string value);
        partial void OnTIMEChanged();
        partial void OnTIMESTAMPChanging(System.DateTime value);
        partial void OnTIMESTAMPChanged();
        partial void OnWAREHOUSEIDChanging(string value);
        partial void OnWAREHOUSEIDChanged();
        partial void OnSTATUSAPIChanging(int value);
        partial void OnSTATUSAPIChanged();
        partial void OnCUSTIDSTOREChanging(string value);
        partial void OnCUSTIDSTOREChanged();
        partial void OnEMPLOYEEIDChanging(string value);
        partial void OnEMPLOYEEIDChanged();
        partial void OnEMPLOYEENAMEChanging(string value);
        partial void OnEMPLOYEENAMEChanged();
        partial void OnDESCRIPTIONChanging(string value);
        partial void OnDESCRIPTIONChanged();
        partial void OnTOTALAMOUNTChanging(int value);
        partial void OnTOTALAMOUNTChanged();
        #endregion

        public Requestorder()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [Column(Name = @"`_id`", Storage = "_Id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "BIGINT(20) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
        public long Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging("Id");
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for REQUESTORDERID in the schema.
        /// </summary>
        [Column(Name = @"REQUEST_ORDER_ID", Storage = "_REQUESTORDERID", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string REQUESTORDERID
        {
            get
            {
                return this._REQUESTORDERID;
            }
            set
            {
                if (this._REQUESTORDERID != value)
                {
                    this.OnREQUESTORDERIDChanging(value);
                    this.SendPropertyChanging("REQUESTORDERID");
                    this._REQUESTORDERID = value;
                    this.SendPropertyChanged("REQUESTORDERID");
                    this.OnREQUESTORDERIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for STORECODE in the schema.
        /// </summary>
        [Column(Name = @"STORE_CODE", Storage = "_STORECODE", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string STORECODE
        {
            get
            {
                return this._STORECODE;
            }
            set
            {
                if (this._STORECODE != value)
                {
                    this.OnSTORECODEChanging(value);
                    this.SendPropertyChanging("STORECODE");
                    this._STORECODE = value;
                    this.SendPropertyChanged("STORECODE");
                    this.OnSTORECODEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for REQUESTDELIVERYDATE in the schema.
        /// </summary>
        [Column(Name = @"REQUEST_DELIVERY_DATE", Storage = "_REQUESTDELIVERYDATE", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string REQUESTDELIVERYDATE
        {
            get
            {
                return this._REQUESTDELIVERYDATE;
            }
            set
            {
                if (this._REQUESTDELIVERYDATE != value)
                {
                    this.OnREQUESTDELIVERYDATEChanging(value);
                    this.SendPropertyChanging("REQUESTDELIVERYDATE");
                    this._REQUESTDELIVERYDATE = value;
                    this.SendPropertyChanged("REQUESTDELIVERYDATE");
                    this.OnREQUESTDELIVERYDATEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TOTALQTY in the schema.
        /// </summary>
        [Column(Name = @"TOTAL_QTY", Storage = "_TOTALQTY", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int TOTALQTY
        {
            get
            {
                return this._TOTALQTY;
            }
            set
            {
                if (this._TOTALQTY != value)
                {
                    this.OnTOTALQTYChanging(value);
                    this.SendPropertyChanging("TOTALQTY");
                    this._TOTALQTY = value;
                    this.SendPropertyChanged("TOTALQTY");
                    this.OnTOTALQTYChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for STATUS in the schema.
        /// </summary>
        [Column(Storage = "_STATUS", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int STATUS
        {
            get
            {
                return this._STATUS;
            }
            set
            {
                if (this._STATUS != value)
                {
                    this.OnSTATUSChanging(value);
                    this.SendPropertyChanging("STATUS");
                    this._STATUS = value;
                    this.SendPropertyChanged("STATUS");
                    this.OnSTATUSChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DATE in the schema.
        /// </summary>
        [Column(Name = @"`DATE`", Storage = "_DATE", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string DATE
        {
            get
            {
                return this._DATE;
            }
            set
            {
                if (this._DATE != value)
                {
                    this.OnDATEChanging(value);
                    this.SendPropertyChanging("DATE");
                    this._DATE = value;
                    this.SendPropertyChanged("DATE");
                    this.OnDATEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TIME in the schema.
        /// </summary>
        [Column(Name = @"`TIME`", Storage = "_TIME", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string TIME
        {
            get
            {
                return this._TIME;
            }
            set
            {
                if (this._TIME != value)
                {
                    this.OnTIMEChanging(value);
                    this.SendPropertyChanging("TIME");
                    this._TIME = value;
                    this.SendPropertyChanged("TIME");
                    this.OnTIMEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TIMESTAMP in the schema.
        /// </summary>
        [Column(Name = @"TIME_STAMP", Storage = "_TIMESTAMP", CanBeNull = false, DbType = "TIMESTAMP NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public System.DateTime TIMESTAMP
        {
            get
            {
                return this._TIMESTAMP;
            }
            set
            {
                if (this._TIMESTAMP != value)
                {
                    this.OnTIMESTAMPChanging(value);
                    this.SendPropertyChanging("TIMESTAMP");
                    this._TIMESTAMP = value;
                    this.SendPropertyChanged("TIMESTAMP");
                    this.OnTIMESTAMPChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for WAREHOUSEID in the schema.
        /// </summary>
        [Column(Name = @"WAREHOUSE_ID", Storage = "_WAREHOUSEID", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string WAREHOUSEID
        {
            get
            {
                return this._WAREHOUSEID;
            }
            set
            {
                if (this._WAREHOUSEID != value)
                {
                    this.OnWAREHOUSEIDChanging(value);
                    this.SendPropertyChanging("WAREHOUSEID");
                    this._WAREHOUSEID = value;
                    this.SendPropertyChanged("WAREHOUSEID");
                    this.OnWAREHOUSEIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for STATUSAPI in the schema.
        /// </summary>
        [Column(Name = @"STATUS_API", Storage = "_STATUSAPI", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int STATUSAPI
        {
            get
            {
                return this._STATUSAPI;
            }
            set
            {
                if (this._STATUSAPI != value)
                {
                    this.OnSTATUSAPIChanging(value);
                    this.SendPropertyChanging("STATUSAPI");
                    this._STATUSAPI = value;
                    this.SendPropertyChanged("STATUSAPI");
                    this.OnSTATUSAPIChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CUSTIDSTORE in the schema.
        /// </summary>
        [Column(Name = @"CUST_ID_STORE", Storage = "_CUSTIDSTORE", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string CUSTIDSTORE
        {
            get
            {
                return this._CUSTIDSTORE;
            }
            set
            {
                if (this._CUSTIDSTORE != value)
                {
                    this.OnCUSTIDSTOREChanging(value);
                    this.SendPropertyChanging("CUSTIDSTORE");
                    this._CUSTIDSTORE = value;
                    this.SendPropertyChanged("CUSTIDSTORE");
                    this.OnCUSTIDSTOREChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for EMPLOYEEID in the schema.
        /// </summary>
        [Column(Name = @"EMPLOYEE_ID", Storage = "_EMPLOYEEID", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string EMPLOYEEID
        {
            get
            {
                return this._EMPLOYEEID;
            }
            set
            {
                if (this._EMPLOYEEID != value)
                {
                    this.OnEMPLOYEEIDChanging(value);
                    this.SendPropertyChanging("EMPLOYEEID");
                    this._EMPLOYEEID = value;
                    this.SendPropertyChanged("EMPLOYEEID");
                    this.OnEMPLOYEEIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for EMPLOYEENAME in the schema.
        /// </summary>
        [Column(Name = @"EMPLOYEE_NAME", Storage = "_EMPLOYEENAME", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string EMPLOYEENAME
        {
            get
            {
                return this._EMPLOYEENAME;
            }
            set
            {
                if (this._EMPLOYEENAME != value)
                {
                    this.OnEMPLOYEENAMEChanging(value);
                    this.SendPropertyChanging("EMPLOYEENAME");
                    this._EMPLOYEENAME = value;
                    this.SendPropertyChanged("EMPLOYEENAME");
                    this.OnEMPLOYEENAMEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DESCRIPTION in the schema.
        /// </summary>
        [Column(Storage = "_DESCRIPTION", CanBeNull = false, DbType = "VARCHAR(300) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string DESCRIPTION
        {
            get
            {
                return this._DESCRIPTION;
            }
            set
            {
                if (this._DESCRIPTION != value)
                {
                    this.OnDESCRIPTIONChanging(value);
                    this.SendPropertyChanging("DESCRIPTION");
                    this._DESCRIPTION = value;
                    this.SendPropertyChanged("DESCRIPTION");
                    this.OnDESCRIPTIONChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TOTALAMOUNT in the schema.
        /// </summary>
        [Column(Name = @"TOTAL_AMOUNT", Storage = "_TOTALAMOUNT", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int TOTALAMOUNT
        {
            get
            {
                return this._TOTALAMOUNT;
            }
            set
            {
                if (this._TOTALAMOUNT != value)
                {
                    this.OnTOTALAMOUNTChanging(value);
                    this.SendPropertyChanging("TOTALAMOUNT");
                    this._TOTALAMOUNT = value;
                    this.SendPropertyChanged("TOTALAMOUNT");
                    this.OnTOTALAMOUNTChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for BiensiPosDbContext.RequestorderLine in the schema.
    /// </summary>
    [Table(Name = @"biensi_pos_db.requestorder_line")]
    public partial class RequestorderLine : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private long _Id;

        private string _REQUESTORDERID = @"-";

        private string _ARTICLEID = @"-";

        private string _QUANTITY = @"-";

        private string _UNIT = @"-";

        private int _SUBTOTAL = 0;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(long value);
        partial void OnIdChanged();
        partial void OnREQUESTORDERIDChanging(string value);
        partial void OnREQUESTORDERIDChanged();
        partial void OnARTICLEIDChanging(string value);
        partial void OnARTICLEIDChanged();
        partial void OnQUANTITYChanging(string value);
        partial void OnQUANTITYChanged();
        partial void OnUNITChanging(string value);
        partial void OnUNITChanged();
        partial void OnSUBTOTALChanging(int value);
        partial void OnSUBTOTALChanged();
        #endregion

        public RequestorderLine()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [Column(Name = @"`_id`", Storage = "_Id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "BIGINT(20) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
        public long Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging("Id");
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for REQUESTORDERID in the schema.
        /// </summary>
        [Column(Name = @"REQUEST_ORDER_ID", Storage = "_REQUESTORDERID", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string REQUESTORDERID
        {
            get
            {
                return this._REQUESTORDERID;
            }
            set
            {
                if (this._REQUESTORDERID != value)
                {
                    this.OnREQUESTORDERIDChanging(value);
                    this.SendPropertyChanging("REQUESTORDERID");
                    this._REQUESTORDERID = value;
                    this.SendPropertyChanged("REQUESTORDERID");
                    this.OnREQUESTORDERIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ARTICLEID in the schema.
        /// </summary>
        [Column(Name = @"ARTICLE_ID", Storage = "_ARTICLEID", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string ARTICLEID
        {
            get
            {
                return this._ARTICLEID;
            }
            set
            {
                if (this._ARTICLEID != value)
                {
                    this.OnARTICLEIDChanging(value);
                    this.SendPropertyChanging("ARTICLEID");
                    this._ARTICLEID = value;
                    this.SendPropertyChanged("ARTICLEID");
                    this.OnARTICLEIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for QUANTITY in the schema.
        /// </summary>
        [Column(Storage = "_QUANTITY", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string QUANTITY
        {
            get
            {
                return this._QUANTITY;
            }
            set
            {
                if (this._QUANTITY != value)
                {
                    this.OnQUANTITYChanging(value);
                    this.SendPropertyChanging("QUANTITY");
                    this._QUANTITY = value;
                    this.SendPropertyChanged("QUANTITY");
                    this.OnQUANTITYChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for UNIT in the schema.
        /// </summary>
        [Column(Storage = "_UNIT", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string UNIT
        {
            get
            {
                return this._UNIT;
            }
            set
            {
                if (this._UNIT != value)
                {
                    this.OnUNITChanging(value);
                    this.SendPropertyChanging("UNIT");
                    this._UNIT = value;
                    this.SendPropertyChanged("UNIT");
                    this.OnUNITChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for SUBTOTAL in the schema.
        /// </summary>
        [Column(Storage = "_SUBTOTAL", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int SUBTOTAL
        {
            get
            {
                return this._SUBTOTAL;
            }
            set
            {
                if (this._SUBTOTAL != value)
                {
                    this.OnSUBTOTALChanging(value);
                    this.SendPropertyChanging("SUBTOTAL");
                    this._SUBTOTAL = value;
                    this.SendPropertyChanged("SUBTOTAL");
                    this.OnSUBTOTALChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for BiensiPosDbContext.Returnorder in the schema.
    /// </summary>
    [Table(Name = @"biensi_pos_db.returnorder")]
    public partial class Returnorder : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private long _Id;

        private string _RETURNORDERID = @"-";

        private string _STORECODE = @"-";

        private string _REMARK = @"-";

        private int _TOTALQTY = 0;

        private int _STATUS = 0;

        private string _DATE = @"-";

        private string _TIME = @"-";

        private System.DateTime _TIMESTAMP = DateTime.Now;

        private string _WAREHOUSEID = @"-";

        private int _STATUSAPI = 0;

        private string _CUSTIDSTORE = @"-";

        private string _EMPLOYEEID = @"-";

        private string _EMPLOYEENAME = @"-";

        private int _TOTALAMOUNT = 0;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(long value);
        partial void OnIdChanged();
        partial void OnRETURNORDERIDChanging(string value);
        partial void OnRETURNORDERIDChanged();
        partial void OnSTORECODEChanging(string value);
        partial void OnSTORECODEChanged();
        partial void OnREMARKChanging(string value);
        partial void OnREMARKChanged();
        partial void OnTOTALQTYChanging(int value);
        partial void OnTOTALQTYChanged();
        partial void OnSTATUSChanging(int value);
        partial void OnSTATUSChanged();
        partial void OnDATEChanging(string value);
        partial void OnDATEChanged();
        partial void OnTIMEChanging(string value);
        partial void OnTIMEChanged();
        partial void OnTIMESTAMPChanging(System.DateTime value);
        partial void OnTIMESTAMPChanged();
        partial void OnWAREHOUSEIDChanging(string value);
        partial void OnWAREHOUSEIDChanged();
        partial void OnSTATUSAPIChanging(int value);
        partial void OnSTATUSAPIChanged();
        partial void OnCUSTIDSTOREChanging(string value);
        partial void OnCUSTIDSTOREChanged();
        partial void OnEMPLOYEEIDChanging(string value);
        partial void OnEMPLOYEEIDChanged();
        partial void OnEMPLOYEENAMEChanging(string value);
        partial void OnEMPLOYEENAMEChanged();
        partial void OnTOTALAMOUNTChanging(int value);
        partial void OnTOTALAMOUNTChanged();
        #endregion

        public Returnorder()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [Column(Name = @"`_id`", Storage = "_Id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "BIGINT(20) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
        public long Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging("Id");
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for RETURNORDERID in the schema.
        /// </summary>
        [Column(Name = @"RETURN_ORDER_ID", Storage = "_RETURNORDERID", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string RETURNORDERID
        {
            get
            {
                return this._RETURNORDERID;
            }
            set
            {
                if (this._RETURNORDERID != value)
                {
                    this.OnRETURNORDERIDChanging(value);
                    this.SendPropertyChanging("RETURNORDERID");
                    this._RETURNORDERID = value;
                    this.SendPropertyChanged("RETURNORDERID");
                    this.OnRETURNORDERIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for STORECODE in the schema.
        /// </summary>
        [Column(Name = @"STORE_CODE", Storage = "_STORECODE", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string STORECODE
        {
            get
            {
                return this._STORECODE;
            }
            set
            {
                if (this._STORECODE != value)
                {
                    this.OnSTORECODEChanging(value);
                    this.SendPropertyChanging("STORECODE");
                    this._STORECODE = value;
                    this.SendPropertyChanged("STORECODE");
                    this.OnSTORECODEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for REMARK in the schema.
        /// </summary>
        [Column(Storage = "_REMARK", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string REMARK
        {
            get
            {
                return this._REMARK;
            }
            set
            {
                if (this._REMARK != value)
                {
                    this.OnREMARKChanging(value);
                    this.SendPropertyChanging("REMARK");
                    this._REMARK = value;
                    this.SendPropertyChanged("REMARK");
                    this.OnREMARKChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TOTALQTY in the schema.
        /// </summary>
        [Column(Name = @"TOTAL_QTY", Storage = "_TOTALQTY", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int TOTALQTY
        {
            get
            {
                return this._TOTALQTY;
            }
            set
            {
                if (this._TOTALQTY != value)
                {
                    this.OnTOTALQTYChanging(value);
                    this.SendPropertyChanging("TOTALQTY");
                    this._TOTALQTY = value;
                    this.SendPropertyChanged("TOTALQTY");
                    this.OnTOTALQTYChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for STATUS in the schema.
        /// </summary>
        [Column(Storage = "_STATUS", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int STATUS
        {
            get
            {
                return this._STATUS;
            }
            set
            {
                if (this._STATUS != value)
                {
                    this.OnSTATUSChanging(value);
                    this.SendPropertyChanging("STATUS");
                    this._STATUS = value;
                    this.SendPropertyChanged("STATUS");
                    this.OnSTATUSChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DATE in the schema.
        /// </summary>
        [Column(Name = @"`DATE`", Storage = "_DATE", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string DATE
        {
            get
            {
                return this._DATE;
            }
            set
            {
                if (this._DATE != value)
                {
                    this.OnDATEChanging(value);
                    this.SendPropertyChanging("DATE");
                    this._DATE = value;
                    this.SendPropertyChanged("DATE");
                    this.OnDATEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TIME in the schema.
        /// </summary>
        [Column(Name = @"`TIME`", Storage = "_TIME", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string TIME
        {
            get
            {
                return this._TIME;
            }
            set
            {
                if (this._TIME != value)
                {
                    this.OnTIMEChanging(value);
                    this.SendPropertyChanging("TIME");
                    this._TIME = value;
                    this.SendPropertyChanged("TIME");
                    this.OnTIMEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TIMESTAMP in the schema.
        /// </summary>
        [Column(Name = @"TIME_STAMP", Storage = "_TIMESTAMP", CanBeNull = false, DbType = "TIMESTAMP NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public System.DateTime TIMESTAMP
        {
            get
            {
                return this._TIMESTAMP;
            }
            set
            {
                if (this._TIMESTAMP != value)
                {
                    this.OnTIMESTAMPChanging(value);
                    this.SendPropertyChanging("TIMESTAMP");
                    this._TIMESTAMP = value;
                    this.SendPropertyChanged("TIMESTAMP");
                    this.OnTIMESTAMPChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for WAREHOUSEID in the schema.
        /// </summary>
        [Column(Name = @"WAREHOUSE_ID", Storage = "_WAREHOUSEID", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string WAREHOUSEID
        {
            get
            {
                return this._WAREHOUSEID;
            }
            set
            {
                if (this._WAREHOUSEID != value)
                {
                    this.OnWAREHOUSEIDChanging(value);
                    this.SendPropertyChanging("WAREHOUSEID");
                    this._WAREHOUSEID = value;
                    this.SendPropertyChanged("WAREHOUSEID");
                    this.OnWAREHOUSEIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for STATUSAPI in the schema.
        /// </summary>
        [Column(Name = @"STATUS_API", Storage = "_STATUSAPI", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int STATUSAPI
        {
            get
            {
                return this._STATUSAPI;
            }
            set
            {
                if (this._STATUSAPI != value)
                {
                    this.OnSTATUSAPIChanging(value);
                    this.SendPropertyChanging("STATUSAPI");
                    this._STATUSAPI = value;
                    this.SendPropertyChanged("STATUSAPI");
                    this.OnSTATUSAPIChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CUSTIDSTORE in the schema.
        /// </summary>
        [Column(Name = @"CUST_ID_STORE", Storage = "_CUSTIDSTORE", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string CUSTIDSTORE
        {
            get
            {
                return this._CUSTIDSTORE;
            }
            set
            {
                if (this._CUSTIDSTORE != value)
                {
                    this.OnCUSTIDSTOREChanging(value);
                    this.SendPropertyChanging("CUSTIDSTORE");
                    this._CUSTIDSTORE = value;
                    this.SendPropertyChanged("CUSTIDSTORE");
                    this.OnCUSTIDSTOREChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for EMPLOYEEID in the schema.
        /// </summary>
        [Column(Name = @"EMPLOYEE_ID", Storage = "_EMPLOYEEID", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string EMPLOYEEID
        {
            get
            {
                return this._EMPLOYEEID;
            }
            set
            {
                if (this._EMPLOYEEID != value)
                {
                    this.OnEMPLOYEEIDChanging(value);
                    this.SendPropertyChanging("EMPLOYEEID");
                    this._EMPLOYEEID = value;
                    this.SendPropertyChanged("EMPLOYEEID");
                    this.OnEMPLOYEEIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for EMPLOYEENAME in the schema.
        /// </summary>
        [Column(Name = @"EMPLOYEE_NAME", Storage = "_EMPLOYEENAME", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string EMPLOYEENAME
        {
            get
            {
                return this._EMPLOYEENAME;
            }
            set
            {
                if (this._EMPLOYEENAME != value)
                {
                    this.OnEMPLOYEENAMEChanging(value);
                    this.SendPropertyChanging("EMPLOYEENAME");
                    this._EMPLOYEENAME = value;
                    this.SendPropertyChanged("EMPLOYEENAME");
                    this.OnEMPLOYEENAMEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TOTALAMOUNT in the schema.
        /// </summary>
        [Column(Name = @"TOTAL_AMOUNT", Storage = "_TOTALAMOUNT", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int TOTALAMOUNT
        {
            get
            {
                return this._TOTALAMOUNT;
            }
            set
            {
                if (this._TOTALAMOUNT != value)
                {
                    this.OnTOTALAMOUNTChanging(value);
                    this.SendPropertyChanging("TOTALAMOUNT");
                    this._TOTALAMOUNT = value;
                    this.SendPropertyChanged("TOTALAMOUNT");
                    this.OnTOTALAMOUNTChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for BiensiPosDbContext.ReturnorderLine in the schema.
    /// </summary>
    [Table(Name = @"biensi_pos_db.returnorder_line")]
    public partial class ReturnorderLine : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private long _Id;

        private string _RETURNORDERID = @"-";

        private string _ARTICLEID = @"-";

        private string _QUANTITY = @"-";

        private string _UNIT = @"-";

        private int _SUBTOTAL = 0;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(long value);
        partial void OnIdChanged();
        partial void OnRETURNORDERIDChanging(string value);
        partial void OnRETURNORDERIDChanged();
        partial void OnARTICLEIDChanging(string value);
        partial void OnARTICLEIDChanged();
        partial void OnQUANTITYChanging(string value);
        partial void OnQUANTITYChanged();
        partial void OnUNITChanging(string value);
        partial void OnUNITChanged();
        partial void OnSUBTOTALChanging(int value);
        partial void OnSUBTOTALChanged();
        #endregion

        public ReturnorderLine()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [Column(Name = @"`_id`", Storage = "_Id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "BIGINT(20) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
        public long Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging("Id");
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for RETURNORDERID in the schema.
        /// </summary>
        [Column(Name = @"RETURN_ORDER_ID", Storage = "_RETURNORDERID", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string RETURNORDERID
        {
            get
            {
                return this._RETURNORDERID;
            }
            set
            {
                if (this._RETURNORDERID != value)
                {
                    this.OnRETURNORDERIDChanging(value);
                    this.SendPropertyChanging("RETURNORDERID");
                    this._RETURNORDERID = value;
                    this.SendPropertyChanged("RETURNORDERID");
                    this.OnRETURNORDERIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ARTICLEID in the schema.
        /// </summary>
        [Column(Name = @"ARTICLE_ID", Storage = "_ARTICLEID", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string ARTICLEID
        {
            get
            {
                return this._ARTICLEID;
            }
            set
            {
                if (this._ARTICLEID != value)
                {
                    this.OnARTICLEIDChanging(value);
                    this.SendPropertyChanging("ARTICLEID");
                    this._ARTICLEID = value;
                    this.SendPropertyChanged("ARTICLEID");
                    this.OnARTICLEIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for QUANTITY in the schema.
        /// </summary>
        [Column(Storage = "_QUANTITY", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string QUANTITY
        {
            get
            {
                return this._QUANTITY;
            }
            set
            {
                if (this._QUANTITY != value)
                {
                    this.OnQUANTITYChanging(value);
                    this.SendPropertyChanging("QUANTITY");
                    this._QUANTITY = value;
                    this.SendPropertyChanged("QUANTITY");
                    this.OnQUANTITYChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for UNIT in the schema.
        /// </summary>
        [Column(Storage = "_UNIT", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string UNIT
        {
            get
            {
                return this._UNIT;
            }
            set
            {
                if (this._UNIT != value)
                {
                    this.OnUNITChanging(value);
                    this.SendPropertyChanging("UNIT");
                    this._UNIT = value;
                    this.SendPropertyChanged("UNIT");
                    this.OnUNITChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for SUBTOTAL in the schema.
        /// </summary>
        [Column(Storage = "_SUBTOTAL", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int SUBTOTAL
        {
            get
            {
                return this._SUBTOTAL;
            }
            set
            {
                if (this._SUBTOTAL != value)
                {
                    this.OnSUBTOTALChanging(value);
                    this.SendPropertyChanging("SUBTOTAL");
                    this._SUBTOTAL = value;
                    this.SendPropertyChanged("SUBTOTAL");
                    this.OnSUBTOTALChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for BiensiPosDbContext.Size in the schema.
    /// </summary>
    [Table(Name = @"biensi_pos_db.size")]
    public partial class Size : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private int _Id = 0;

        private string _CODE = @"-";

        private string _DESCRIPTION = @"-";
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnCODEChanging(string value);
        partial void OnCODEChanged();
        partial void OnDESCRIPTIONChanging(string value);
        partial void OnDESCRIPTIONChanged();
        #endregion

        public Size()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [Column(Name = @"`_id`", Storage = "_Id", CanBeNull = false, DbType = "INT(11) NOT NULL", IsPrimaryKey = true)]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging("Id");
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CODE in the schema.
        /// </summary>
        [Column(Storage = "_CODE", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string CODE
        {
            get
            {
                return this._CODE;
            }
            set
            {
                if (this._CODE != value)
                {
                    this.OnCODEChanging(value);
                    this.SendPropertyChanging("CODE");
                    this._CODE = value;
                    this.SendPropertyChanged("CODE");
                    this.OnCODEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DESCRIPTION in the schema.
        /// </summary>
        [Column(Storage = "_DESCRIPTION", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string DESCRIPTION
        {
            get
            {
                return this._DESCRIPTION;
            }
            set
            {
                if (this._DESCRIPTION != value)
                {
                    this.OnDESCRIPTIONChanging(value);
                    this.SendPropertyChanging("DESCRIPTION");
                    this._DESCRIPTION = value;
                    this.SendPropertyChanged("DESCRIPTION");
                    this.OnDESCRIPTIONChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for BiensiPosDbContext.Spg in the schema.
    /// </summary>
    [Table(Name = @"biensi_pos_db.spg")]
    public partial class Spg : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private int _Id;

        private string _IDSPG = @"-";

        private string _NAMA = @"-";
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnIDSPGChanging(string value);
        partial void OnIDSPGChanged();
        partial void OnNAMAChanging(string value);
        partial void OnNAMAChanged();
        #endregion

        public Spg()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [Column(Name = @"`_id`", Storage = "_Id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "INT(11) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging("Id");
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for IDSPG in the schema.
        /// </summary>
        [Column(Name = @"ID_SPG", Storage = "_IDSPG", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string IDSPG
        {
            get
            {
                return this._IDSPG;
            }
            set
            {
                if (this._IDSPG != value)
                {
                    this.OnIDSPGChanging(value);
                    this.SendPropertyChanging("IDSPG");
                    this._IDSPG = value;
                    this.SendPropertyChanged("IDSPG");
                    this.OnIDSPGChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NAMA in the schema.
        /// </summary>
        [Column(Storage = "_NAMA", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string NAMA
        {
            get
            {
                return this._NAMA;
            }
            set
            {
                if (this._NAMA != value)
                {
                    this.OnNAMAChanging(value);
                    this.SendPropertyChanging("NAMA");
                    this._NAMA = value;
                    this.SendPropertyChanged("NAMA");
                    this.OnNAMAChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for BiensiPosDbContext.StockTake in the schema.
    /// </summary>
    [Table(Name = @"biensi_pos_db.stock_take")]
    public partial class StockTake : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private long _Id = 0;

        private string _ARTICLEID = @"-";

        private int _GOODQTY = 0;

        private int _REJECTQTY = 0;

        private int _WHGOODQTY = 0;

        private int _WHREJECTQTY = 0;

        private int _DISPUTE = 0;

        private int _STATUS = 0;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(long value);
        partial void OnIdChanged();
        partial void OnARTICLEIDChanging(string value);
        partial void OnARTICLEIDChanged();
        partial void OnGOODQTYChanging(int value);
        partial void OnGOODQTYChanged();
        partial void OnREJECTQTYChanging(int value);
        partial void OnREJECTQTYChanged();
        partial void OnWHGOODQTYChanging(int value);
        partial void OnWHGOODQTYChanged();
        partial void OnWHREJECTQTYChanging(int value);
        partial void OnWHREJECTQTYChanged();
        partial void OnDISPUTEChanging(int value);
        partial void OnDISPUTEChanged();
        partial void OnSTATUSChanging(int value);
        partial void OnSTATUSChanged();
        #endregion

        public StockTake()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [Column(Name = @"`_id`", Storage = "_Id", CanBeNull = false, DbType = "BIGINT(20) NOT NULL", IsPrimaryKey = true)]
        public long Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging("Id");
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ARTICLEID in the schema.
        /// </summary>
        [Column(Name = @"ARTICLE_ID", Storage = "_ARTICLEID", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string ARTICLEID
        {
            get
            {
                return this._ARTICLEID;
            }
            set
            {
                if (this._ARTICLEID != value)
                {
                    this.OnARTICLEIDChanging(value);
                    this.SendPropertyChanging("ARTICLEID");
                    this._ARTICLEID = value;
                    this.SendPropertyChanged("ARTICLEID");
                    this.OnARTICLEIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for GOODQTY in the schema.
        /// </summary>
        [Column(Name = @"GOOD_QTY", Storage = "_GOODQTY", CanBeNull = false, DbType = "INT(4) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int GOODQTY
        {
            get
            {
                return this._GOODQTY;
            }
            set
            {
                if (this._GOODQTY != value)
                {
                    this.OnGOODQTYChanging(value);
                    this.SendPropertyChanging("GOODQTY");
                    this._GOODQTY = value;
                    this.SendPropertyChanged("GOODQTY");
                    this.OnGOODQTYChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for REJECTQTY in the schema.
        /// </summary>
        [Column(Name = @"REJECT_QTY", Storage = "_REJECTQTY", CanBeNull = false, DbType = "INT(4) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int REJECTQTY
        {
            get
            {
                return this._REJECTQTY;
            }
            set
            {
                if (this._REJECTQTY != value)
                {
                    this.OnREJECTQTYChanging(value);
                    this.SendPropertyChanging("REJECTQTY");
                    this._REJECTQTY = value;
                    this.SendPropertyChanged("REJECTQTY");
                    this.OnREJECTQTYChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for WHGOODQTY in the schema.
        /// </summary>
        [Column(Name = @"WH_GOOD_QTY", Storage = "_WHGOODQTY", CanBeNull = false, DbType = "INT(4) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int WHGOODQTY
        {
            get
            {
                return this._WHGOODQTY;
            }
            set
            {
                if (this._WHGOODQTY != value)
                {
                    this.OnWHGOODQTYChanging(value);
                    this.SendPropertyChanging("WHGOODQTY");
                    this._WHGOODQTY = value;
                    this.SendPropertyChanged("WHGOODQTY");
                    this.OnWHGOODQTYChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for WHREJECTQTY in the schema.
        /// </summary>
        [Column(Name = @"WH_REJECT_QTY", Storage = "_WHREJECTQTY", CanBeNull = false, DbType = "INT(4) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int WHREJECTQTY
        {
            get
            {
                return this._WHREJECTQTY;
            }
            set
            {
                if (this._WHREJECTQTY != value)
                {
                    this.OnWHREJECTQTYChanging(value);
                    this.SendPropertyChanging("WHREJECTQTY");
                    this._WHREJECTQTY = value;
                    this.SendPropertyChanged("WHREJECTQTY");
                    this.OnWHREJECTQTYChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DISPUTE in the schema.
        /// </summary>
        [Column(Storage = "_DISPUTE", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int DISPUTE
        {
            get
            {
                return this._DISPUTE;
            }
            set
            {
                if (this._DISPUTE != value)
                {
                    this.OnDISPUTEChanging(value);
                    this.SendPropertyChanging("DISPUTE");
                    this._DISPUTE = value;
                    this.SendPropertyChanged("DISPUTE");
                    this.OnDISPUTEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for STATUS in the schema.
        /// </summary>
        [Column(Storage = "_STATUS", CanBeNull = false, DbType = "INT(5) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int STATUS
        {
            get
            {
                return this._STATUS;
            }
            set
            {
                if (this._STATUS != value)
                {
                    this.OnSTATUSChanging(value);
                    this.SendPropertyChanging("STATUS");
                    this._STATUS = value;
                    this.SendPropertyChanged("STATUS");
                    this.OnSTATUSChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for BiensiPosDbContext.Store in the schema.
    /// </summary>
    [Table(Name = @"biensi_pos_db.store")]
    public partial class Store : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private long _Id = 0;

        private string _CODE = @"-";

        private string _NAME = @"-";

        private string _LOCATION = @"-";

        private string _ADDRESS = @"-";

        private string _CITY = @"-";

        private string _REGIONAL = @"-";

        private int _STORETYPEID = 0;

        private string _ADDRESS2 = @"-";

        private string _ADDRESS3 = @"-";

        private string _ADDRESS4 = @"-";

        private string _WAREHOUSEID = @"-";

        private string _CUSTIDSTORE = @"-";

        private double _BUDGETTOSTORE = 0;

        private double _BUDGETTOCASHIER = 0;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(long value);
        partial void OnIdChanged();
        partial void OnCODEChanging(string value);
        partial void OnCODEChanged();
        partial void OnNAMEChanging(string value);
        partial void OnNAMEChanged();
        partial void OnLOCATIONChanging(string value);
        partial void OnLOCATIONChanged();
        partial void OnADDRESSChanging(string value);
        partial void OnADDRESSChanged();
        partial void OnCITYChanging(string value);
        partial void OnCITYChanged();
        partial void OnREGIONALChanging(string value);
        partial void OnREGIONALChanged();
        partial void OnSTORETYPEIDChanging(int value);
        partial void OnSTORETYPEIDChanged();
        partial void OnADDRESS2Changing(string value);
        partial void OnADDRESS2Changed();
        partial void OnADDRESS3Changing(string value);
        partial void OnADDRESS3Changed();
        partial void OnADDRESS4Changing(string value);
        partial void OnADDRESS4Changed();
        partial void OnWAREHOUSEIDChanging(string value);
        partial void OnWAREHOUSEIDChanged();
        partial void OnCUSTIDSTOREChanging(string value);
        partial void OnCUSTIDSTOREChanged();
        partial void OnBUDGETTOSTOREChanging(double value);
        partial void OnBUDGETTOSTOREChanged();
        partial void OnBUDGETTOCASHIERChanging(double value);
        partial void OnBUDGETTOCASHIERChanged();
        #endregion

        public Store()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [Column(Name = @"`_id`", Storage = "_Id", CanBeNull = false, DbType = "BIGINT(20) NOT NULL", IsPrimaryKey = true)]
        public long Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging("Id");
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CODE in the schema.
        /// </summary>
        [Column(Storage = "_CODE", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string CODE
        {
            get
            {
                return this._CODE;
            }
            set
            {
                if (this._CODE != value)
                {
                    this.OnCODEChanging(value);
                    this.SendPropertyChanging("CODE");
                    this._CODE = value;
                    this.SendPropertyChanged("CODE");
                    this.OnCODEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NAME in the schema.
        /// </summary>
        [Column(Storage = "_NAME", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string NAME
        {
            get
            {
                return this._NAME;
            }
            set
            {
                if (this._NAME != value)
                {
                    this.OnNAMEChanging(value);
                    this.SendPropertyChanging("NAME");
                    this._NAME = value;
                    this.SendPropertyChanged("NAME");
                    this.OnNAMEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for LOCATION in the schema.
        /// </summary>
        [Column(Storage = "_LOCATION", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string LOCATION
        {
            get
            {
                return this._LOCATION;
            }
            set
            {
                if (this._LOCATION != value)
                {
                    this.OnLOCATIONChanging(value);
                    this.SendPropertyChanging("LOCATION");
                    this._LOCATION = value;
                    this.SendPropertyChanged("LOCATION");
                    this.OnLOCATIONChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ADDRESS in the schema.
        /// </summary>
        [Column(Storage = "_ADDRESS", CanBeNull = false, DbType = "VARCHAR(300) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string ADDRESS
        {
            get
            {
                return this._ADDRESS;
            }
            set
            {
                if (this._ADDRESS != value)
                {
                    this.OnADDRESSChanging(value);
                    this.SendPropertyChanging("ADDRESS");
                    this._ADDRESS = value;
                    this.SendPropertyChanged("ADDRESS");
                    this.OnADDRESSChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CITY in the schema.
        /// </summary>
        [Column(Storage = "_CITY", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string CITY
        {
            get
            {
                return this._CITY;
            }
            set
            {
                if (this._CITY != value)
                {
                    this.OnCITYChanging(value);
                    this.SendPropertyChanging("CITY");
                    this._CITY = value;
                    this.SendPropertyChanged("CITY");
                    this.OnCITYChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for REGIONAL in the schema.
        /// </summary>
        [Column(Storage = "_REGIONAL", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string REGIONAL
        {
            get
            {
                return this._REGIONAL;
            }
            set
            {
                if (this._REGIONAL != value)
                {
                    this.OnREGIONALChanging(value);
                    this.SendPropertyChanging("REGIONAL");
                    this._REGIONAL = value;
                    this.SendPropertyChanged("REGIONAL");
                    this.OnREGIONALChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for STORETYPEID in the schema.
        /// </summary>
        [Column(Name = @"STORE_TYPE_ID", Storage = "_STORETYPEID", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int STORETYPEID
        {
            get
            {
                return this._STORETYPEID;
            }
            set
            {
                if (this._STORETYPEID != value)
                {
                    this.OnSTORETYPEIDChanging(value);
                    this.SendPropertyChanging("STORETYPEID");
                    this._STORETYPEID = value;
                    this.SendPropertyChanged("STORETYPEID");
                    this.OnSTORETYPEIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ADDRESS2 in the schema.
        /// </summary>
        [Column(Storage = "_ADDRESS2", CanBeNull = false, DbType = "VARCHAR(300) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string ADDRESS2
        {
            get
            {
                return this._ADDRESS2;
            }
            set
            {
                if (this._ADDRESS2 != value)
                {
                    this.OnADDRESS2Changing(value);
                    this.SendPropertyChanging("ADDRESS2");
                    this._ADDRESS2 = value;
                    this.SendPropertyChanged("ADDRESS2");
                    this.OnADDRESS2Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ADDRESS3 in the schema.
        /// </summary>
        [Column(Storage = "_ADDRESS3", CanBeNull = false, DbType = "VARCHAR(300) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string ADDRESS3
        {
            get
            {
                return this._ADDRESS3;
            }
            set
            {
                if (this._ADDRESS3 != value)
                {
                    this.OnADDRESS3Changing(value);
                    this.SendPropertyChanging("ADDRESS3");
                    this._ADDRESS3 = value;
                    this.SendPropertyChanged("ADDRESS3");
                    this.OnADDRESS3Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ADDRESS4 in the schema.
        /// </summary>
        [Column(Storage = "_ADDRESS4", CanBeNull = false, DbType = "VARCHAR(300) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string ADDRESS4
        {
            get
            {
                return this._ADDRESS4;
            }
            set
            {
                if (this._ADDRESS4 != value)
                {
                    this.OnADDRESS4Changing(value);
                    this.SendPropertyChanging("ADDRESS4");
                    this._ADDRESS4 = value;
                    this.SendPropertyChanged("ADDRESS4");
                    this.OnADDRESS4Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for WAREHOUSEID in the schema.
        /// </summary>
        [Column(Name = @"WAREHOUSE_ID", Storage = "_WAREHOUSEID", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string WAREHOUSEID
        {
            get
            {
                return this._WAREHOUSEID;
            }
            set
            {
                if (this._WAREHOUSEID != value)
                {
                    this.OnWAREHOUSEIDChanging(value);
                    this.SendPropertyChanging("WAREHOUSEID");
                    this._WAREHOUSEID = value;
                    this.SendPropertyChanged("WAREHOUSEID");
                    this.OnWAREHOUSEIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CUSTIDSTORE in the schema.
        /// </summary>
        [Column(Name = @"CUST_ID_STORE", Storage = "_CUSTIDSTORE", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string CUSTIDSTORE
        {
            get
            {
                return this._CUSTIDSTORE;
            }
            set
            {
                if (this._CUSTIDSTORE != value)
                {
                    this.OnCUSTIDSTOREChanging(value);
                    this.SendPropertyChanging("CUSTIDSTORE");
                    this._CUSTIDSTORE = value;
                    this.SendPropertyChanged("CUSTIDSTORE");
                    this.OnCUSTIDSTOREChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for BUDGETTOSTORE in the schema.
        /// </summary>
        [Column(Name = @"BUDGET_TO_STORE", Storage = "_BUDGETTOSTORE", CanBeNull = false, DbType = "DOUBLE NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public double BUDGETTOSTORE
        {
            get
            {
                return this._BUDGETTOSTORE;
            }
            set
            {
                if (this._BUDGETTOSTORE != value)
                {
                    this.OnBUDGETTOSTOREChanging(value);
                    this.SendPropertyChanging("BUDGETTOSTORE");
                    this._BUDGETTOSTORE = value;
                    this.SendPropertyChanged("BUDGETTOSTORE");
                    this.OnBUDGETTOSTOREChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for BUDGETTOCASHIER in the schema.
        /// </summary>
        [Column(Name = @"BUDGET_TO_CASHIER", Storage = "_BUDGETTOCASHIER", CanBeNull = false, DbType = "DOUBLE NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public double BUDGETTOCASHIER
        {
            get
            {
                return this._BUDGETTOCASHIER;
            }
            set
            {
                if (this._BUDGETTOCASHIER != value)
                {
                    this.OnBUDGETTOCASHIERChanging(value);
                    this.SendPropertyChanging("BUDGETTOCASHIER");
                    this._BUDGETTOCASHIER = value;
                    this.SendPropertyChanged("BUDGETTOCASHIER");
                    this.OnBUDGETTOCASHIERChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for BiensiPosDbContext.StoreRelasi in the schema.
    /// </summary>
    [Table(Name = @"biensi_pos_db.store_relasi")]
    public partial class StoreRelasi : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private long _Id = 0;

        private string _CODE = @"-";

        private string _NAME = @"-";

        private string _LOCATION = @"-";

        private string _ADDRESS = @"-";

        private string _CITY = @"-";

        private string _REGIONAL = @"-";

        private string _STORETYPEID = @"0";

        private string _ADDRESS2 = @"-";

        private string _ADDRESS3 = @"-";

        private string _ADDRESS4 = @"-";

        private string _WAREHOUSEID = @"-";

        private string _CUSTIDSTORE = @"-";
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(long value);
        partial void OnIdChanged();
        partial void OnCODEChanging(string value);
        partial void OnCODEChanged();
        partial void OnNAMEChanging(string value);
        partial void OnNAMEChanged();
        partial void OnLOCATIONChanging(string value);
        partial void OnLOCATIONChanged();
        partial void OnADDRESSChanging(string value);
        partial void OnADDRESSChanged();
        partial void OnCITYChanging(string value);
        partial void OnCITYChanged();
        partial void OnREGIONALChanging(string value);
        partial void OnREGIONALChanged();
        partial void OnSTORETYPEIDChanging(string value);
        partial void OnSTORETYPEIDChanged();
        partial void OnADDRESS2Changing(string value);
        partial void OnADDRESS2Changed();
        partial void OnADDRESS3Changing(string value);
        partial void OnADDRESS3Changed();
        partial void OnADDRESS4Changing(string value);
        partial void OnADDRESS4Changed();
        partial void OnWAREHOUSEIDChanging(string value);
        partial void OnWAREHOUSEIDChanged();
        partial void OnCUSTIDSTOREChanging(string value);
        partial void OnCUSTIDSTOREChanged();
        #endregion

        public StoreRelasi()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [Column(Name = @"`_id`", Storage = "_Id", CanBeNull = false, DbType = "BIGINT(20) NOT NULL", IsPrimaryKey = true)]
        public long Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging("Id");
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CODE in the schema.
        /// </summary>
        [Column(Storage = "_CODE", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string CODE
        {
            get
            {
                return this._CODE;
            }
            set
            {
                if (this._CODE != value)
                {
                    this.OnCODEChanging(value);
                    this.SendPropertyChanging("CODE");
                    this._CODE = value;
                    this.SendPropertyChanged("CODE");
                    this.OnCODEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NAME in the schema.
        /// </summary>
        [Column(Storage = "_NAME", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string NAME
        {
            get
            {
                return this._NAME;
            }
            set
            {
                if (this._NAME != value)
                {
                    this.OnNAMEChanging(value);
                    this.SendPropertyChanging("NAME");
                    this._NAME = value;
                    this.SendPropertyChanged("NAME");
                    this.OnNAMEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for LOCATION in the schema.
        /// </summary>
        [Column(Storage = "_LOCATION", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string LOCATION
        {
            get
            {
                return this._LOCATION;
            }
            set
            {
                if (this._LOCATION != value)
                {
                    this.OnLOCATIONChanging(value);
                    this.SendPropertyChanging("LOCATION");
                    this._LOCATION = value;
                    this.SendPropertyChanged("LOCATION");
                    this.OnLOCATIONChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ADDRESS in the schema.
        /// </summary>
        [Column(Storage = "_ADDRESS", CanBeNull = false, DbType = "VARCHAR(300) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string ADDRESS
        {
            get
            {
                return this._ADDRESS;
            }
            set
            {
                if (this._ADDRESS != value)
                {
                    this.OnADDRESSChanging(value);
                    this.SendPropertyChanging("ADDRESS");
                    this._ADDRESS = value;
                    this.SendPropertyChanged("ADDRESS");
                    this.OnADDRESSChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CITY in the schema.
        /// </summary>
        [Column(Storage = "_CITY", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string CITY
        {
            get
            {
                return this._CITY;
            }
            set
            {
                if (this._CITY != value)
                {
                    this.OnCITYChanging(value);
                    this.SendPropertyChanging("CITY");
                    this._CITY = value;
                    this.SendPropertyChanged("CITY");
                    this.OnCITYChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for REGIONAL in the schema.
        /// </summary>
        [Column(Storage = "_REGIONAL", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string REGIONAL
        {
            get
            {
                return this._REGIONAL;
            }
            set
            {
                if (this._REGIONAL != value)
                {
                    this.OnREGIONALChanging(value);
                    this.SendPropertyChanging("REGIONAL");
                    this._REGIONAL = value;
                    this.SendPropertyChanged("REGIONAL");
                    this.OnREGIONALChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for STORETYPEID in the schema.
        /// </summary>
        [Column(Name = @"STORE_TYPE_ID", Storage = "_STORETYPEID", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string STORETYPEID
        {
            get
            {
                return this._STORETYPEID;
            }
            set
            {
                if (this._STORETYPEID != value)
                {
                    this.OnSTORETYPEIDChanging(value);
                    this.SendPropertyChanging("STORETYPEID");
                    this._STORETYPEID = value;
                    this.SendPropertyChanged("STORETYPEID");
                    this.OnSTORETYPEIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ADDRESS2 in the schema.
        /// </summary>
        [Column(Storage = "_ADDRESS2", CanBeNull = false, DbType = "VARCHAR(300) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string ADDRESS2
        {
            get
            {
                return this._ADDRESS2;
            }
            set
            {
                if (this._ADDRESS2 != value)
                {
                    this.OnADDRESS2Changing(value);
                    this.SendPropertyChanging("ADDRESS2");
                    this._ADDRESS2 = value;
                    this.SendPropertyChanged("ADDRESS2");
                    this.OnADDRESS2Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ADDRESS3 in the schema.
        /// </summary>
        [Column(Storage = "_ADDRESS3", CanBeNull = false, DbType = "VARCHAR(300) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string ADDRESS3
        {
            get
            {
                return this._ADDRESS3;
            }
            set
            {
                if (this._ADDRESS3 != value)
                {
                    this.OnADDRESS3Changing(value);
                    this.SendPropertyChanging("ADDRESS3");
                    this._ADDRESS3 = value;
                    this.SendPropertyChanged("ADDRESS3");
                    this.OnADDRESS3Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ADDRESS4 in the schema.
        /// </summary>
        [Column(Storage = "_ADDRESS4", CanBeNull = false, DbType = "VARCHAR(300) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string ADDRESS4
        {
            get
            {
                return this._ADDRESS4;
            }
            set
            {
                if (this._ADDRESS4 != value)
                {
                    this.OnADDRESS4Changing(value);
                    this.SendPropertyChanging("ADDRESS4");
                    this._ADDRESS4 = value;
                    this.SendPropertyChanged("ADDRESS4");
                    this.OnADDRESS4Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for WAREHOUSEID in the schema.
        /// </summary>
        [Column(Name = @"WAREHOUSE_ID", Storage = "_WAREHOUSEID", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string WAREHOUSEID
        {
            get
            {
                return this._WAREHOUSEID;
            }
            set
            {
                if (this._WAREHOUSEID != value)
                {
                    this.OnWAREHOUSEIDChanging(value);
                    this.SendPropertyChanging("WAREHOUSEID");
                    this._WAREHOUSEID = value;
                    this.SendPropertyChanged("WAREHOUSEID");
                    this.OnWAREHOUSEIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CUSTIDSTORE in the schema.
        /// </summary>
        [Column(Name = @"CUST_ID_STORE", Storage = "_CUSTIDSTORE", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string CUSTIDSTORE
        {
            get
            {
                return this._CUSTIDSTORE;
            }
            set
            {
                if (this._CUSTIDSTORE != value)
                {
                    this.OnCUSTIDSTOREChanging(value);
                    this.SendPropertyChanging("CUSTIDSTORE");
                    this._CUSTIDSTORE = value;
                    this.SendPropertyChanged("CUSTIDSTORE");
                    this.OnCUSTIDSTOREChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for BiensiPosDbContext.Transaction in the schema.
    /// </summary>
    [Table(Name = @"biensi_pos_db.transaction")]
    public partial class Transaction : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private long _Id;

        private string _TRANSACTIONID = @"-";

        private string _STORECODE = @"-";

        private string _CUSTOMERID = @"-";

        private string _EMPLOYEEID = @"-";

        private string _RECEIPTID = @"-";

        private string _SPGID = @"-";

        private double _DISCOUNT = 0;

        private double _TOTAL = 0;

        private int _STATUS = 0;

        private int _PAYMENTTYPE = 0;

        private double _CASH = 0;

        private double _EDC = 0;

        private double _EDC2 = 0;

        private double _CHANGEE = 0;

        private double _VOUCHER = 0;

        private string _BANKNAME = @"-";

        private string _BANKNAME2 = @"-";

        private string _NOREF = @"-";

        private string _NOREF2 = @"-";

        private string _DATE = @"-";

        private string _TIME = @"-";

        private System.DateTime _TIMESTAMP = DateTime.Now;

        private int _STATUSAPI = 0;

        private string _CUSTIDSTORE = @"-";

        private string _CURRENCY = @"-";

        private string _IDSHIFT = @"-";

        private string _IDCSTORE = @"-";

        private int _VOUCHERID = 0;

        private string _VOUCHERCODE = @"-";
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(long value);
        partial void OnIdChanged();
        partial void OnTRANSACTIONIDChanging(string value);
        partial void OnTRANSACTIONIDChanged();
        partial void OnSTORECODEChanging(string value);
        partial void OnSTORECODEChanged();
        partial void OnCUSTOMERIDChanging(string value);
        partial void OnCUSTOMERIDChanged();
        partial void OnEMPLOYEEIDChanging(string value);
        partial void OnEMPLOYEEIDChanged();
        partial void OnRECEIPTIDChanging(string value);
        partial void OnRECEIPTIDChanged();
        partial void OnSPGIDChanging(string value);
        partial void OnSPGIDChanged();
        partial void OnDISCOUNTChanging(double value);
        partial void OnDISCOUNTChanged();
        partial void OnTOTALChanging(double value);
        partial void OnTOTALChanged();
        partial void OnSTATUSChanging(int value);
        partial void OnSTATUSChanged();
        partial void OnPAYMENTTYPEChanging(int value);
        partial void OnPAYMENTTYPEChanged();
        partial void OnCASHChanging(double value);
        partial void OnCASHChanged();
        partial void OnEDCChanging(double value);
        partial void OnEDCChanged();
        partial void OnEDC2Changing(double value);
        partial void OnEDC2Changed();
        partial void OnCHANGEEChanging(double value);
        partial void OnCHANGEEChanged();
        partial void OnVOUCHERChanging(double value);
        partial void OnVOUCHERChanged();
        partial void OnBANKNAMEChanging(string value);
        partial void OnBANKNAMEChanged();
        partial void OnBANKNAME2Changing(string value);
        partial void OnBANKNAME2Changed();
        partial void OnNOREFChanging(string value);
        partial void OnNOREFChanged();
        partial void OnNOREF2Changing(string value);
        partial void OnNOREF2Changed();
        partial void OnDATEChanging(string value);
        partial void OnDATEChanged();
        partial void OnTIMEChanging(string value);
        partial void OnTIMEChanged();
        partial void OnTIMESTAMPChanging(System.DateTime value);
        partial void OnTIMESTAMPChanged();
        partial void OnSTATUSAPIChanging(int value);
        partial void OnSTATUSAPIChanged();
        partial void OnCUSTIDSTOREChanging(string value);
        partial void OnCUSTIDSTOREChanged();
        partial void OnCURRENCYChanging(string value);
        partial void OnCURRENCYChanged();
        partial void OnIDSHIFTChanging(string value);
        partial void OnIDSHIFTChanged();
        partial void OnIDCSTOREChanging(string value);
        partial void OnIDCSTOREChanged();
        partial void OnVOUCHERIDChanging(int value);
        partial void OnVOUCHERIDChanged();
        partial void OnVOUCHERCODEChanging(string value);
        partial void OnVOUCHERCODEChanged();
        #endregion

        public Transaction()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [Column(Name = @"`_id`", Storage = "_Id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "BIGINT(40) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
        public long Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging("Id");
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TRANSACTIONID in the schema.
        /// </summary>
        [Column(Name = @"TRANSACTION_ID", Storage = "_TRANSACTIONID", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string TRANSACTIONID
        {
            get
            {
                return this._TRANSACTIONID;
            }
            set
            {
                if (this._TRANSACTIONID != value)
                {
                    this.OnTRANSACTIONIDChanging(value);
                    this.SendPropertyChanging("TRANSACTIONID");
                    this._TRANSACTIONID = value;
                    this.SendPropertyChanged("TRANSACTIONID");
                    this.OnTRANSACTIONIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for STORECODE in the schema.
        /// </summary>
        [Column(Name = @"STORE_CODE", Storage = "_STORECODE", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string STORECODE
        {
            get
            {
                return this._STORECODE;
            }
            set
            {
                if (this._STORECODE != value)
                {
                    this.OnSTORECODEChanging(value);
                    this.SendPropertyChanging("STORECODE");
                    this._STORECODE = value;
                    this.SendPropertyChanged("STORECODE");
                    this.OnSTORECODEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CUSTOMERID in the schema.
        /// </summary>
        [Column(Name = @"CUSTOMER_ID", Storage = "_CUSTOMERID", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string CUSTOMERID
        {
            get
            {
                return this._CUSTOMERID;
            }
            set
            {
                if (this._CUSTOMERID != value)
                {
                    this.OnCUSTOMERIDChanging(value);
                    this.SendPropertyChanging("CUSTOMERID");
                    this._CUSTOMERID = value;
                    this.SendPropertyChanged("CUSTOMERID");
                    this.OnCUSTOMERIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for EMPLOYEEID in the schema.
        /// </summary>
        [Column(Name = @"EMPLOYEE_ID", Storage = "_EMPLOYEEID", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string EMPLOYEEID
        {
            get
            {
                return this._EMPLOYEEID;
            }
            set
            {
                if (this._EMPLOYEEID != value)
                {
                    this.OnEMPLOYEEIDChanging(value);
                    this.SendPropertyChanging("EMPLOYEEID");
                    this._EMPLOYEEID = value;
                    this.SendPropertyChanged("EMPLOYEEID");
                    this.OnEMPLOYEEIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for RECEIPTID in the schema.
        /// </summary>
        [Column(Name = @"RECEIPT_ID", Storage = "_RECEIPTID", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string RECEIPTID
        {
            get
            {
                return this._RECEIPTID;
            }
            set
            {
                if (this._RECEIPTID != value)
                {
                    this.OnRECEIPTIDChanging(value);
                    this.SendPropertyChanging("RECEIPTID");
                    this._RECEIPTID = value;
                    this.SendPropertyChanged("RECEIPTID");
                    this.OnRECEIPTIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for SPGID in the schema.
        /// </summary>
        [Column(Name = @"SPG_ID", Storage = "_SPGID", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string SPGID
        {
            get
            {
                return this._SPGID;
            }
            set
            {
                if (this._SPGID != value)
                {
                    this.OnSPGIDChanging(value);
                    this.SendPropertyChanging("SPGID");
                    this._SPGID = value;
                    this.SendPropertyChanged("SPGID");
                    this.OnSPGIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DISCOUNT in the schema.
        /// </summary>
        [Column(Storage = "_DISCOUNT", CanBeNull = false, DbType = "DOUBLE NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public double DISCOUNT
        {
            get
            {
                return this._DISCOUNT;
            }
            set
            {
                if (this._DISCOUNT != value)
                {
                    this.OnDISCOUNTChanging(value);
                    this.SendPropertyChanging("DISCOUNT");
                    this._DISCOUNT = value;
                    this.SendPropertyChanged("DISCOUNT");
                    this.OnDISCOUNTChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TOTAL in the schema.
        /// </summary>
        [Column(Storage = "_TOTAL", CanBeNull = false, DbType = "DOUBLE NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public double TOTAL
        {
            get
            {
                return this._TOTAL;
            }
            set
            {
                if (this._TOTAL != value)
                {
                    this.OnTOTALChanging(value);
                    this.SendPropertyChanging("TOTAL");
                    this._TOTAL = value;
                    this.SendPropertyChanged("TOTAL");
                    this.OnTOTALChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for STATUS in the schema.
        /// </summary>
        [Column(Storage = "_STATUS", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int STATUS
        {
            get
            {
                return this._STATUS;
            }
            set
            {
                if (this._STATUS != value)
                {
                    this.OnSTATUSChanging(value);
                    this.SendPropertyChanging("STATUS");
                    this._STATUS = value;
                    this.SendPropertyChanged("STATUS");
                    this.OnSTATUSChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PAYMENTTYPE in the schema.
        /// </summary>
        [Column(Name = @"PAYMENT_TYPE", Storage = "_PAYMENTTYPE", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int PAYMENTTYPE
        {
            get
            {
                return this._PAYMENTTYPE;
            }
            set
            {
                if (this._PAYMENTTYPE != value)
                {
                    this.OnPAYMENTTYPEChanging(value);
                    this.SendPropertyChanging("PAYMENTTYPE");
                    this._PAYMENTTYPE = value;
                    this.SendPropertyChanged("PAYMENTTYPE");
                    this.OnPAYMENTTYPEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CASH in the schema.
        /// </summary>
        [Column(Storage = "_CASH", CanBeNull = false, DbType = "DOUBLE NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public double CASH
        {
            get
            {
                return this._CASH;
            }
            set
            {
                if (this._CASH != value)
                {
                    this.OnCASHChanging(value);
                    this.SendPropertyChanging("CASH");
                    this._CASH = value;
                    this.SendPropertyChanged("CASH");
                    this.OnCASHChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for EDC in the schema.
        /// </summary>
        [Column(Storage = "_EDC", CanBeNull = false, DbType = "DOUBLE NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public double EDC
        {
            get
            {
                return this._EDC;
            }
            set
            {
                if (this._EDC != value)
                {
                    this.OnEDCChanging(value);
                    this.SendPropertyChanging("EDC");
                    this._EDC = value;
                    this.SendPropertyChanged("EDC");
                    this.OnEDCChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for EDC2 in the schema.
        /// </summary>
        [Column(Storage = "_EDC2", CanBeNull = false, DbType = "DOUBLE NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public double EDC2
        {
            get
            {
                return this._EDC2;
            }
            set
            {
                if (this._EDC2 != value)
                {
                    this.OnEDC2Changing(value);
                    this.SendPropertyChanging("EDC2");
                    this._EDC2 = value;
                    this.SendPropertyChanged("EDC2");
                    this.OnEDC2Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CHANGEE in the schema.
        /// </summary>
        [Column(Storage = "_CHANGEE", CanBeNull = false, DbType = "DOUBLE NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public double CHANGEE
        {
            get
            {
                return this._CHANGEE;
            }
            set
            {
                if (this._CHANGEE != value)
                {
                    this.OnCHANGEEChanging(value);
                    this.SendPropertyChanging("CHANGEE");
                    this._CHANGEE = value;
                    this.SendPropertyChanged("CHANGEE");
                    this.OnCHANGEEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for VOUCHER in the schema.
        /// </summary>
        [Column(Storage = "_VOUCHER", CanBeNull = false, DbType = "DOUBLE NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public double VOUCHER
        {
            get
            {
                return this._VOUCHER;
            }
            set
            {
                if (this._VOUCHER != value)
                {
                    this.OnVOUCHERChanging(value);
                    this.SendPropertyChanging("VOUCHER");
                    this._VOUCHER = value;
                    this.SendPropertyChanged("VOUCHER");
                    this.OnVOUCHERChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for BANKNAME in the schema.
        /// </summary>
        [Column(Name = @"BANK_NAME", Storage = "_BANKNAME", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string BANKNAME
        {
            get
            {
                return this._BANKNAME;
            }
            set
            {
                if (this._BANKNAME != value)
                {
                    this.OnBANKNAMEChanging(value);
                    this.SendPropertyChanging("BANKNAME");
                    this._BANKNAME = value;
                    this.SendPropertyChanged("BANKNAME");
                    this.OnBANKNAMEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for BANKNAME2 in the schema.
        /// </summary>
        [Column(Name = @"BANK_NAME2", Storage = "_BANKNAME2", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string BANKNAME2
        {
            get
            {
                return this._BANKNAME2;
            }
            set
            {
                if (this._BANKNAME2 != value)
                {
                    this.OnBANKNAME2Changing(value);
                    this.SendPropertyChanging("BANKNAME2");
                    this._BANKNAME2 = value;
                    this.SendPropertyChanged("BANKNAME2");
                    this.OnBANKNAME2Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NOREF in the schema.
        /// </summary>
        [Column(Name = @"NO_REF", Storage = "_NOREF", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string NOREF
        {
            get
            {
                return this._NOREF;
            }
            set
            {
                if (this._NOREF != value)
                {
                    this.OnNOREFChanging(value);
                    this.SendPropertyChanging("NOREF");
                    this._NOREF = value;
                    this.SendPropertyChanged("NOREF");
                    this.OnNOREFChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NOREF2 in the schema.
        /// </summary>
        [Column(Name = @"NO_REF2", Storage = "_NOREF2", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string NOREF2
        {
            get
            {
                return this._NOREF2;
            }
            set
            {
                if (this._NOREF2 != value)
                {
                    this.OnNOREF2Changing(value);
                    this.SendPropertyChanging("NOREF2");
                    this._NOREF2 = value;
                    this.SendPropertyChanged("NOREF2");
                    this.OnNOREF2Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DATE in the schema.
        /// </summary>
        [Column(Name = @"`DATE`", Storage = "_DATE", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string DATE
        {
            get
            {
                return this._DATE;
            }
            set
            {
                if (this._DATE != value)
                {
                    this.OnDATEChanging(value);
                    this.SendPropertyChanging("DATE");
                    this._DATE = value;
                    this.SendPropertyChanged("DATE");
                    this.OnDATEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TIME in the schema.
        /// </summary>
        [Column(Name = @"`TIME`", Storage = "_TIME", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string TIME
        {
            get
            {
                return this._TIME;
            }
            set
            {
                if (this._TIME != value)
                {
                    this.OnTIMEChanging(value);
                    this.SendPropertyChanging("TIME");
                    this._TIME = value;
                    this.SendPropertyChanged("TIME");
                    this.OnTIMEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TIMESTAMP in the schema.
        /// </summary>
        [Column(Name = @"TIME_STAMP", Storage = "_TIMESTAMP", CanBeNull = false, DbType = "TIMESTAMP NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public System.DateTime TIMESTAMP
        {
            get
            {
                return this._TIMESTAMP;
            }
            set
            {
                if (this._TIMESTAMP != value)
                {
                    this.OnTIMESTAMPChanging(value);
                    this.SendPropertyChanging("TIMESTAMP");
                    this._TIMESTAMP = value;
                    this.SendPropertyChanged("TIMESTAMP");
                    this.OnTIMESTAMPChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for STATUSAPI in the schema.
        /// </summary>
        [Column(Name = @"STATUS_API", Storage = "_STATUSAPI", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int STATUSAPI
        {
            get
            {
                return this._STATUSAPI;
            }
            set
            {
                if (this._STATUSAPI != value)
                {
                    this.OnSTATUSAPIChanging(value);
                    this.SendPropertyChanging("STATUSAPI");
                    this._STATUSAPI = value;
                    this.SendPropertyChanged("STATUSAPI");
                    this.OnSTATUSAPIChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CUSTIDSTORE in the schema.
        /// </summary>
        [Column(Name = @"CUST_ID_STORE", Storage = "_CUSTIDSTORE", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string CUSTIDSTORE
        {
            get
            {
                return this._CUSTIDSTORE;
            }
            set
            {
                if (this._CUSTIDSTORE != value)
                {
                    this.OnCUSTIDSTOREChanging(value);
                    this.SendPropertyChanging("CUSTIDSTORE");
                    this._CUSTIDSTORE = value;
                    this.SendPropertyChanged("CUSTIDSTORE");
                    this.OnCUSTIDSTOREChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CURRENCY in the schema.
        /// </summary>
        [Column(Storage = "_CURRENCY", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string CURRENCY
        {
            get
            {
                return this._CURRENCY;
            }
            set
            {
                if (this._CURRENCY != value)
                {
                    this.OnCURRENCYChanging(value);
                    this.SendPropertyChanging("CURRENCY");
                    this._CURRENCY = value;
                    this.SendPropertyChanged("CURRENCY");
                    this.OnCURRENCYChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for IDSHIFT in the schema.
        /// </summary>
        [Column(Name = @"ID_SHIFT", Storage = "_IDSHIFT", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string IDSHIFT
        {
            get
            {
                return this._IDSHIFT;
            }
            set
            {
                if (this._IDSHIFT != value)
                {
                    this.OnIDSHIFTChanging(value);
                    this.SendPropertyChanging("IDSHIFT");
                    this._IDSHIFT = value;
                    this.SendPropertyChanged("IDSHIFT");
                    this.OnIDSHIFTChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for IDCSTORE in the schema.
        /// </summary>
        [Column(Name = @"ID_C_STORE", Storage = "_IDCSTORE", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string IDCSTORE
        {
            get
            {
                return this._IDCSTORE;
            }
            set
            {
                if (this._IDCSTORE != value)
                {
                    this.OnIDCSTOREChanging(value);
                    this.SendPropertyChanging("IDCSTORE");
                    this._IDCSTORE = value;
                    this.SendPropertyChanged("IDCSTORE");
                    this.OnIDCSTOREChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for VOUCHERID in the schema.
        /// </summary>
        [Column(Name = @"VOUCHER_ID", Storage = "_VOUCHERID", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int VOUCHERID
        {
            get
            {
                return this._VOUCHERID;
            }
            set
            {
                if (this._VOUCHERID != value)
                {
                    this.OnVOUCHERIDChanging(value);
                    this.SendPropertyChanging("VOUCHERID");
                    this._VOUCHERID = value;
                    this.SendPropertyChanged("VOUCHERID");
                    this.OnVOUCHERIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for VOUCHERCODE in the schema.
        /// </summary>
        [Column(Name = @"VOUCHER_CODE", Storage = "_VOUCHERCODE", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string VOUCHERCODE
        {
            get
            {
                return this._VOUCHERCODE;
            }
            set
            {
                if (this._VOUCHERCODE != value)
                {
                    this.OnVOUCHERCODEChanging(value);
                    this.SendPropertyChanging("VOUCHERCODE");
                    this._VOUCHERCODE = value;
                    this.SendPropertyChanged("VOUCHERCODE");
                    this.OnVOUCHERCODEChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for BiensiPosDbContext.TransactionLine in the schema.
    /// </summary>
    [Table(Name = @"biensi_pos_db.transaction_line")]
    public partial class TransactionLine : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private long _Id;

        private string _TRANSACTIONID = @"-";

        private string _ARTICLEID = @"-";

        private int _QUANTITY = 0;

        private double _PRICE = 0;

        private double _DISCOUNT = 0;

        private double _SUBTOTAL = 0;

        private string _SPGID = @"-";

        private string _DISCOUNTCODE = @"-";

        private string _DISCOUNTTYPE = @"-";

        private string _DISCOUNTDESC = @"0";
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(long value);
        partial void OnIdChanged();
        partial void OnTRANSACTIONIDChanging(string value);
        partial void OnTRANSACTIONIDChanged();
        partial void OnARTICLEIDChanging(string value);
        partial void OnARTICLEIDChanged();
        partial void OnQUANTITYChanging(int value);
        partial void OnQUANTITYChanged();
        partial void OnPRICEChanging(double value);
        partial void OnPRICEChanged();
        partial void OnDISCOUNTChanging(double value);
        partial void OnDISCOUNTChanged();
        partial void OnSUBTOTALChanging(double value);
        partial void OnSUBTOTALChanged();
        partial void OnSPGIDChanging(string value);
        partial void OnSPGIDChanged();
        partial void OnDISCOUNTCODEChanging(string value);
        partial void OnDISCOUNTCODEChanged();
        partial void OnDISCOUNTTYPEChanging(string value);
        partial void OnDISCOUNTTYPEChanged();
        partial void OnDISCOUNTDESCChanging(string value);
        partial void OnDISCOUNTDESCChanged();
        #endregion

        public TransactionLine()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [Column(Name = @"`_id`", Storage = "_Id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "BIGINT(40) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
        public long Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging("Id");
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TRANSACTIONID in the schema.
        /// </summary>
        [Column(Name = @"TRANSACTION_ID", Storage = "_TRANSACTIONID", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string TRANSACTIONID
        {
            get
            {
                return this._TRANSACTIONID;
            }
            set
            {
                if (this._TRANSACTIONID != value)
                {
                    this.OnTRANSACTIONIDChanging(value);
                    this.SendPropertyChanging("TRANSACTIONID");
                    this._TRANSACTIONID = value;
                    this.SendPropertyChanged("TRANSACTIONID");
                    this.OnTRANSACTIONIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ARTICLEID in the schema.
        /// </summary>
        [Column(Name = @"ARTICLE_ID", Storage = "_ARTICLEID", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string ARTICLEID
        {
            get
            {
                return this._ARTICLEID;
            }
            set
            {
                if (this._ARTICLEID != value)
                {
                    this.OnARTICLEIDChanging(value);
                    this.SendPropertyChanging("ARTICLEID");
                    this._ARTICLEID = value;
                    this.SendPropertyChanged("ARTICLEID");
                    this.OnARTICLEIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for QUANTITY in the schema.
        /// </summary>
        [Column(Storage = "_QUANTITY", CanBeNull = false, DbType = "INT(11) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int QUANTITY
        {
            get
            {
                return this._QUANTITY;
            }
            set
            {
                if (this._QUANTITY != value)
                {
                    this.OnQUANTITYChanging(value);
                    this.SendPropertyChanging("QUANTITY");
                    this._QUANTITY = value;
                    this.SendPropertyChanged("QUANTITY");
                    this.OnQUANTITYChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PRICE in the schema.
        /// </summary>
        [Column(Storage = "_PRICE", CanBeNull = false, DbType = "DOUBLE NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public double PRICE
        {
            get
            {
                return this._PRICE;
            }
            set
            {
                if (this._PRICE != value)
                {
                    this.OnPRICEChanging(value);
                    this.SendPropertyChanging("PRICE");
                    this._PRICE = value;
                    this.SendPropertyChanged("PRICE");
                    this.OnPRICEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DISCOUNT in the schema.
        /// </summary>
        [Column(Storage = "_DISCOUNT", CanBeNull = false, DbType = "DOUBLE NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public double DISCOUNT
        {
            get
            {
                return this._DISCOUNT;
            }
            set
            {
                if (this._DISCOUNT != value)
                {
                    this.OnDISCOUNTChanging(value);
                    this.SendPropertyChanging("DISCOUNT");
                    this._DISCOUNT = value;
                    this.SendPropertyChanged("DISCOUNT");
                    this.OnDISCOUNTChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for SUBTOTAL in the schema.
        /// </summary>
        [Column(Storage = "_SUBTOTAL", CanBeNull = false, DbType = "DOUBLE NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public double SUBTOTAL
        {
            get
            {
                return this._SUBTOTAL;
            }
            set
            {
                if (this._SUBTOTAL != value)
                {
                    this.OnSUBTOTALChanging(value);
                    this.SendPropertyChanging("SUBTOTAL");
                    this._SUBTOTAL = value;
                    this.SendPropertyChanged("SUBTOTAL");
                    this.OnSUBTOTALChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for SPGID in the schema.
        /// </summary>
        [Column(Name = @"SPG_ID", Storage = "_SPGID", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string SPGID
        {
            get
            {
                return this._SPGID;
            }
            set
            {
                if (this._SPGID != value)
                {
                    this.OnSPGIDChanging(value);
                    this.SendPropertyChanging("SPGID");
                    this._SPGID = value;
                    this.SendPropertyChanged("SPGID");
                    this.OnSPGIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DISCOUNTCODE in the schema.
        /// </summary>
        [Column(Name = @"DISCOUNT_CODE", Storage = "_DISCOUNTCODE", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string DISCOUNTCODE
        {
            get
            {
                return this._DISCOUNTCODE;
            }
            set
            {
                if (this._DISCOUNTCODE != value)
                {
                    this.OnDISCOUNTCODEChanging(value);
                    this.SendPropertyChanging("DISCOUNTCODE");
                    this._DISCOUNTCODE = value;
                    this.SendPropertyChanged("DISCOUNTCODE");
                    this.OnDISCOUNTCODEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DISCOUNTTYPE in the schema.
        /// </summary>
        [Column(Name = @"DISCOUNT_TYPE", Storage = "_DISCOUNTTYPE", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string DISCOUNTTYPE
        {
            get
            {
                return this._DISCOUNTTYPE;
            }
            set
            {
                if (this._DISCOUNTTYPE != value)
                {
                    this.OnDISCOUNTTYPEChanging(value);
                    this.SendPropertyChanging("DISCOUNTTYPE");
                    this._DISCOUNTTYPE = value;
                    this.SendPropertyChanged("DISCOUNTTYPE");
                    this.OnDISCOUNTTYPEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DISCOUNTDESC in the schema.
        /// </summary>
        [Column(Name = @"DISCOUNT_DESC", Storage = "_DISCOUNTDESC", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string DISCOUNTDESC
        {
            get
            {
                return this._DISCOUNTDESC;
            }
            set
            {
                if (this._DISCOUNTDESC != value)
                {
                    this.OnDISCOUNTDESCChanging(value);
                    this.SendPropertyChanging("DISCOUNTDESC");
                    this._DISCOUNTDESC = value;
                    this.SendPropertyChanged("DISCOUNTDESC");
                    this.OnDISCOUNTDESCChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for BiensiPosDbContext.VersionApk in the schema.
    /// </summary>
    [Table(Name = @"biensi_pos_db.version_apk")]
    public partial class VersionApk : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private int _Id;

        private string _Type = @"-";

        private string _Version = @"-";
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnTypeChanging(string value);
        partial void OnTypeChanged();
        partial void OnVersionChanging(string value);
        partial void OnVersionChanged();
        #endregion

        public VersionApk()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [Column(Name = @"id", Storage = "_Id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "INT(11) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging("Id");
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Type in the schema.
        /// </summary>
        [Column(Storage = "_Type", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string Type
        {
            get
            {
                return this._Type;
            }
            set
            {
                if (this._Type != value)
                {
                    this.OnTypeChanging(value);
                    this.SendPropertyChanging("Type");
                    this._Type = value;
                    this.SendPropertyChanged("Type");
                    this.OnTypeChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Version in the schema.
        /// </summary>
        [Column(Storage = "_Version", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string Version
        {
            get
            {
                return this._Version;
            }
            set
            {
                if (this._Version != value)
                {
                    this.OnVersionChanging(value);
                    this.SendPropertyChanging("Version");
                    this._Version = value;
                    this.SendPropertyChanged("Version");
                    this.OnVersionChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for BiensiPosDbContext.Voucher in the schema.
    /// </summary>
    [Table(Name = @"biensi_pos_db.voucher")]
    public partial class Voucher : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private long _Id = 0;

        private string _VOUCHERCODE = @"-";

        private string _DESCRIPTION = @"-";

        private double _QTY = 0;

        private double _VALUE = 0;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(long value);
        partial void OnIdChanged();
        partial void OnVOUCHERCODEChanging(string value);
        partial void OnVOUCHERCODEChanged();
        partial void OnDESCRIPTIONChanging(string value);
        partial void OnDESCRIPTIONChanged();
        partial void OnQTYChanging(double value);
        partial void OnQTYChanged();
        partial void OnVALUEChanging(double value);
        partial void OnVALUEChanged();
        #endregion

        public Voucher()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [Column(Name = @"`_id`", Storage = "_Id", CanBeNull = false, DbType = "BIGINT(20) NOT NULL", IsPrimaryKey = true)]
        public long Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging("Id");
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for VOUCHERCODE in the schema.
        /// </summary>
        [Column(Name = @"VOUCHER_CODE", Storage = "_VOUCHERCODE", CanBeNull = false, DbType = "VARCHAR(100) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string VOUCHERCODE
        {
            get
            {
                return this._VOUCHERCODE;
            }
            set
            {
                if (this._VOUCHERCODE != value)
                {
                    this.OnVOUCHERCODEChanging(value);
                    this.SendPropertyChanging("VOUCHERCODE");
                    this._VOUCHERCODE = value;
                    this.SendPropertyChanged("VOUCHERCODE");
                    this.OnVOUCHERCODEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DESCRIPTION in the schema.
        /// </summary>
        [Column(Storage = "_DESCRIPTION", CanBeNull = false, DbType = "VARCHAR(100) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string DESCRIPTION
        {
            get
            {
                return this._DESCRIPTION;
            }
            set
            {
                if (this._DESCRIPTION != value)
                {
                    this.OnDESCRIPTIONChanging(value);
                    this.SendPropertyChanging("DESCRIPTION");
                    this._DESCRIPTION = value;
                    this.SendPropertyChanged("DESCRIPTION");
                    this.OnDESCRIPTIONChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for QTY in the schema.
        /// </summary>
        [Column(Storage = "_QTY", CanBeNull = false, DbType = "DOUBLE NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public double QTY
        {
            get
            {
                return this._QTY;
            }
            set
            {
                if (this._QTY != value)
                {
                    this.OnQTYChanging(value);
                    this.SendPropertyChanging("QTY");
                    this._QTY = value;
                    this.SendPropertyChanged("QTY");
                    this.OnQTYChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for VALUE in the schema.
        /// </summary>
        [Column(Storage = "_VALUE", CanBeNull = false, DbType = "DOUBLE NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public double VALUE
        {
            get
            {
                return this._VALUE;
            }
            set
            {
                if (this._VALUE != value)
                {
                    this.OnVALUEChanging(value);
                    this.SendPropertyChanging("VALUE");
                    this._VALUE = value;
                    this.SendPropertyChanged("VALUE");
                    this.OnVALUEChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for BiensiPosDbContext.Warehouse in the schema.
    /// </summary>
    [Table(Name = @"biensi_pos_db.warehouse")]
    public partial class Warehouse : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private long _Id = 0;

        private string _CODE = @"-";

        private string _NAME = @"-";

        private string _TYPE = @"-";

        private string _ADDRESS = @"-";

        private string _ADDRESS2 = @"-";

        private string _ADDRESS3 = @"-";

        private string _ADDRESS4 = @"-";

        private string _CITY = @"-";

        private string _REGIONAL = @"-";

        private string _DIVISION = @"-";
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(long value);
        partial void OnIdChanged();
        partial void OnCODEChanging(string value);
        partial void OnCODEChanged();
        partial void OnNAMEChanging(string value);
        partial void OnNAMEChanged();
        partial void OnTYPEChanging(string value);
        partial void OnTYPEChanged();
        partial void OnADDRESSChanging(string value);
        partial void OnADDRESSChanged();
        partial void OnADDRESS2Changing(string value);
        partial void OnADDRESS2Changed();
        partial void OnADDRESS3Changing(string value);
        partial void OnADDRESS3Changed();
        partial void OnADDRESS4Changing(string value);
        partial void OnADDRESS4Changed();
        partial void OnCITYChanging(string value);
        partial void OnCITYChanged();
        partial void OnREGIONALChanging(string value);
        partial void OnREGIONALChanged();
        partial void OnDIVISIONChanging(string value);
        partial void OnDIVISIONChanged();
        #endregion

        public Warehouse()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [Column(Name = @"`_id`", Storage = "_Id", CanBeNull = false, DbType = "BIGINT(20) NOT NULL", IsPrimaryKey = true)]
        public long Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging("Id");
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CODE in the schema.
        /// </summary>
        [Column(Storage = "_CODE", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string CODE
        {
            get
            {
                return this._CODE;
            }
            set
            {
                if (this._CODE != value)
                {
                    this.OnCODEChanging(value);
                    this.SendPropertyChanging("CODE");
                    this._CODE = value;
                    this.SendPropertyChanged("CODE");
                    this.OnCODEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NAME in the schema.
        /// </summary>
        [Column(Storage = "_NAME", CanBeNull = false, DbType = "VARCHAR(100) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string NAME
        {
            get
            {
                return this._NAME;
            }
            set
            {
                if (this._NAME != value)
                {
                    this.OnNAMEChanging(value);
                    this.SendPropertyChanging("NAME");
                    this._NAME = value;
                    this.SendPropertyChanged("NAME");
                    this.OnNAMEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TYPE in the schema.
        /// </summary>
        [Column(Storage = "_TYPE", CanBeNull = false, DbType = "VARCHAR(100) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string TYPE
        {
            get
            {
                return this._TYPE;
            }
            set
            {
                if (this._TYPE != value)
                {
                    this.OnTYPEChanging(value);
                    this.SendPropertyChanging("TYPE");
                    this._TYPE = value;
                    this.SendPropertyChanged("TYPE");
                    this.OnTYPEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ADDRESS in the schema.
        /// </summary>
        [Column(Storage = "_ADDRESS", CanBeNull = false, DbType = "VARCHAR(300) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string ADDRESS
        {
            get
            {
                return this._ADDRESS;
            }
            set
            {
                if (this._ADDRESS != value)
                {
                    this.OnADDRESSChanging(value);
                    this.SendPropertyChanging("ADDRESS");
                    this._ADDRESS = value;
                    this.SendPropertyChanged("ADDRESS");
                    this.OnADDRESSChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ADDRESS2 in the schema.
        /// </summary>
        [Column(Storage = "_ADDRESS2", CanBeNull = false, DbType = "VARCHAR(300) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string ADDRESS2
        {
            get
            {
                return this._ADDRESS2;
            }
            set
            {
                if (this._ADDRESS2 != value)
                {
                    this.OnADDRESS2Changing(value);
                    this.SendPropertyChanging("ADDRESS2");
                    this._ADDRESS2 = value;
                    this.SendPropertyChanged("ADDRESS2");
                    this.OnADDRESS2Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ADDRESS3 in the schema.
        /// </summary>
        [Column(Storage = "_ADDRESS3", CanBeNull = false, DbType = "VARCHAR(300) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string ADDRESS3
        {
            get
            {
                return this._ADDRESS3;
            }
            set
            {
                if (this._ADDRESS3 != value)
                {
                    this.OnADDRESS3Changing(value);
                    this.SendPropertyChanging("ADDRESS3");
                    this._ADDRESS3 = value;
                    this.SendPropertyChanged("ADDRESS3");
                    this.OnADDRESS3Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ADDRESS4 in the schema.
        /// </summary>
        [Column(Storage = "_ADDRESS4", CanBeNull = false, DbType = "VARCHAR(300) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string ADDRESS4
        {
            get
            {
                return this._ADDRESS4;
            }
            set
            {
                if (this._ADDRESS4 != value)
                {
                    this.OnADDRESS4Changing(value);
                    this.SendPropertyChanging("ADDRESS4");
                    this._ADDRESS4 = value;
                    this.SendPropertyChanged("ADDRESS4");
                    this.OnADDRESS4Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CITY in the schema.
        /// </summary>
        [Column(Storage = "_CITY", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string CITY
        {
            get
            {
                return this._CITY;
            }
            set
            {
                if (this._CITY != value)
                {
                    this.OnCITYChanging(value);
                    this.SendPropertyChanging("CITY");
                    this._CITY = value;
                    this.SendPropertyChanged("CITY");
                    this.OnCITYChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for REGIONAL in the schema.
        /// </summary>
        [Column(Storage = "_REGIONAL", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string REGIONAL
        {
            get
            {
                return this._REGIONAL;
            }
            set
            {
                if (this._REGIONAL != value)
                {
                    this.OnREGIONALChanging(value);
                    this.SendPropertyChanging("REGIONAL");
                    this._REGIONAL = value;
                    this.SendPropertyChanged("REGIONAL");
                    this.OnREGIONALChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DIVISION in the schema.
        /// </summary>
        [Column(Storage = "_DIVISION", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string DIVISION
        {
            get
            {
                return this._DIVISION;
            }
            set
            {
                if (this._DIVISION != value)
                {
                    this.OnDIVISIONChanging(value);
                    this.SendPropertyChanging("DIVISION");
                    this._DIVISION = value;
                    this.SendPropertyChanged("DIVISION");
                    this.OnDIVISIONChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

}
